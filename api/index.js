Index.PACKAGES = {"com.github.agourlay.cornichon.steps" : [], "com.github.agourlay.cornichon.http" : [{"name" : "com.github.agourlay.cornichon.http.BadSessionHeadersEncoding", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.BadSessionHeadersEncoding.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.BadSessionHeadersEncoding#<init>", "error" : "unsupported entity"}, {"label" : "header", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.BadSessionHeadersEncoding.header", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#header:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/BadSessionHeadersEncoding.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.BaseRequest", "trait" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html", "kind" : "trait", "members_trait" : [{"label" : "headersTitle", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.headersTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#headersTitle:String", "kind" : "def"}, {"label" : "paramsTitle", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.paramsTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#paramsTitle:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "compactDescription", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.compactDescription", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#compactDescription:String", "kind" : "abstract def"}, {"label" : "headers", "tail" : "(): Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.BaseRequest.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#headers:Seq[(String,String)]", "kind" : "abstract def"}, {"label" : "params", "tail" : "(): Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.BaseRequest.params", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#params:Seq[(String,String)]", "kind" : "abstract def"}, {"label" : "url", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.url", "link" : "com\/github\/agourlay\/cornichon\/http\/BaseRequest.html#url:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.ByNames", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.http.ByNames#<init>", "error" : "unsupported entity"}, {"label" : "names", "tail" : ": Seq[String]", "member" : "com.github.agourlay.cornichon.http.ByNames.names", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#names:Seq[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/ByNames.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.CornichonHttpResponse", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.http.CornichonHttpResponse#<init>", "error" : "unsupported entity"}, {"label" : "body", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.CornichonHttpResponse.body", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#body:String", "kind" : "val"}, {"label" : "headers", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.CornichonHttpResponse.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#headers:Seq[(String,String)]", "kind" : "val"}, {"label" : "status", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.http.CornichonHttpResponse.status", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#status:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/CornichonHttpResponse.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.HeaderSelection", "trait" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HeaderSelection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.HttpDsl", "object" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html", "members_object" : [{"label" : "globalHttpClient", "tail" : ": HttpClient", "member" : "com.github.agourlay.cornichon.http.HttpDsl.globalHttpClient", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#globalHttpClient:com.github.agourlay.cornichon.http.client.HttpClient", "kind" : "lazy val"}, {"label" : "save_many_from_session_json", "tail" : "(fromKey: String)(args: Seq[FromSessionSetter[Json]]): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_many_from_session_json", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#save_many_from_session_json(fromKey:String)(args:Seq[com.github.agourlay.cornichon.dsl.CoreDsl.FromSessionSetter[io.circe.Json]]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "bodyBuilderTitle", "tail" : ": Some[String]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.bodyBuilderTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#bodyBuilderTitle:Some[String]", "kind" : "val"}, {"label" : "lastBodySessionKey", "tail" : ": SessionKey", "member" : "com.github.agourlay.cornichon.http.HttpDsl.lastBodySessionKey", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#lastBodySessionKey:com.github.agourlay.cornichon.core.SessionKey", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html", "kind" : "trait", "members_trait" : [{"label" : "WithHeaders", "tail" : "(headers: (String, String)*): BodyElementCollector[Step, Seq[Step]]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.WithHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#WithHeaders(headers:(String,String)*):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,Seq[com.github.agourlay.cornichon.core.Step]]", "kind" : "def"}, {"label" : "WithBasicAuth", "tail" : "(userName: String, password: String): BodyElementCollector[Step, Seq[Step]]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.WithBasicAuth", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#WithBasicAuth(userName:String,password:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,Seq[com.github.agourlay.cornichon.core.Step]]", "kind" : "def"}, {"label" : "show_with_headers", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_with_headers", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_with_headers:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_headers", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_headers", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_last_headers:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_body_json", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_body_json", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_last_body_json:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_body", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_body", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_last_body:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_status", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_status", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_last_status:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_response_json", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_response_json", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_last_response_json:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_response", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_response", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#show_last_response:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save_header_value", "tail" : "(args: (String, String)*): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_header_value", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#save_header_value(args:(String,String)*):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save_body_path", "tail" : "(args: (String, String)*): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_body_path", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#save_body_path(args:(String,String)*):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save_body", "tail" : "(target: String): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_body", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#save_body(target:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "body", "tail" : "(): JsonStepBuilder", "member" : "com.github.agourlay.cornichon.http.HttpDsl.body", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#body:com.github.agourlay.cornichon.json.JsonSteps.JsonStepBuilder", "kind" : "def"}, {"label" : "headers", "tail" : "(): HeadersStepBuilder.type", "member" : "com.github.agourlay.cornichon.http.HttpDsl.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#headers:com.github.agourlay.cornichon.http.steps.HeadersSteps.HeadersStepBuilder.type", "kind" : "def"}, {"label" : "status", "tail" : "(): StatusStepBuilder.type", "member" : "com.github.agourlay.cornichon.http.HttpDsl.status", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#status:com.github.agourlay.cornichon.http.steps.StatusSteps.StatusStepBuilder.type", "kind" : "def"}, {"label" : "open_sse", "tail" : "(url: String, takeWithin: FiniteDuration): HttpStreamedRequest", "member" : "com.github.agourlay.cornichon.http.HttpDsl.open_sse", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#open_sse(url:String,takeWithin:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.http.HttpStreamedRequest", "kind" : "def"}, {"label" : "query_gql", "tail" : "(url: String): QueryGQL", "member" : "com.github.agourlay.cornichon.http.HttpDsl.query_gql", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#query_gql(url:String):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "queryGqlToHttpRequest", "tail" : "(queryGQL: QueryGQL): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.queryGqlToHttpRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#queryGqlToHttpRequest(queryGQL:com.github.agourlay.cornichon.http.QueryGQL):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "implicit def"}, {"label" : "queryGqlToStep", "tail" : "(queryGQL: QueryGQL): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.queryGqlToStep", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#queryGqlToStep(queryGQL:com.github.agourlay.cornichon.http.QueryGQL):com.github.agourlay.cornichon.core.Step", "kind" : "implicit def"}, {"label" : "httpStreamedRequestToStep", "tail" : "(request: HttpStreamedRequest): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.httpStreamedRequestToStep", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#httpStreamedRequestToStep(request:com.github.agourlay.cornichon.http.HttpStreamedRequest):com.github.agourlay.cornichon.core.Step", "kind" : "implicit def"}, {"label" : "httpRequestToStep", "tail" : "(request: HttpRequest[A])(arg0: Show[A], arg1: Resolvable[A], arg2: Encoder[A]): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.httpRequestToStep", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#httpRequestToStep[A](request:com.github.agourlay.cornichon.http.HttpRequest[A])(implicitevidence$1:cats.Show[A],implicitevidence$2:com.github.agourlay.cornichon.resolver.Resolvable[A],implicitevidence$3:io.circe.Encoder[A]):com.github.agourlay.cornichon.core.Step", "kind" : "implicit def"}, {"label" : "http", "tail" : ": HttpService", "member" : "com.github.agourlay.cornichon.http.HttpDsl.http", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#http:com.github.agourlay.cornichon.http.HttpService", "kind" : "lazy val"}, {"label" : "httpServiceByURL", "tail" : "(baseUrl: String, timeout: FiniteDuration): HttpService", "member" : "com.github.agourlay.cornichon.http.HttpDsl.httpServiceByURL", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#httpServiceByURL(baseUrl:String,timeout:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.http.HttpService", "kind" : "def"}, {"label" : "baseUrl", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpDsl.baseUrl", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#baseUrl:String", "kind" : "lazy val"}, {"label" : "requestTimeout", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.http.HttpDsl.requestTimeout", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#requestTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "lazy val"}, {"label" : "patch", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.patch", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#patch(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "put", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.put", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#put(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "post", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.post", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#post(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "delete", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.delete", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#delete(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "options", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.options", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#options(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "head", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.head", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#head(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "get", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.get", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#get(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "removeFromWithHeaders", "tail" : "(name: String)(s: Session): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpDslOps.removeFromWithHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#removeFromWithHeaders(name:String)(s:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "addToWithHeaders", "tail" : "(name: String, value: String)(s: Session): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpDslOps.addToWithHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#addToWithHeaders(name:String,value:String)(s:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.HttpDslOps", "trait" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html", "kind" : "trait", "members_trait" : [{"label" : "removeFromWithHeaders", "tail" : "(name: String)(s: Session): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpDslOps.removeFromWithHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#removeFromWithHeaders(name:String)(s:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "addToWithHeaders", "tail" : "(name: String, value: String)(s: Session): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpDslOps.addToWithHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#addToWithHeaders(name:String,value:String)(s:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpDslOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.HttpError", "trait" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html", "kind" : "trait", "members_trait" : [{"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.CornichonError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpError.html#baseErrorMessage:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.HttpMethod", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.http.HttpMethod#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpMethod.name", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/HttpMethod.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.HttpMethods", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html", "members_object" : [{"label" : "PUT", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.PUT", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#PUT:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "POST", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.POST", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#POST:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "PATCH", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.PATCH", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#PATCH:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "OPTIONS", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.OPTIONS", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#OPTIONS:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "HEAD", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.HEAD", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#HEAD:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "GET", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.GET", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#GET:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "DELETE", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpMethods.DELETE", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#DELETE:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMethods$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.HttpMockDsl", "trait" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html", "kind" : "trait", "members_trait" : [{"label" : "HttpListenTo", "tail" : "(interface: Option[String], portRange: Option[Range], maxPortBindingRetries: Int)(label: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.http.HttpMockDsl.HttpListenTo", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#HttpListenTo(interface:Option[String],portRange:Option[Range],maxPortBindingRetries:Int)(label:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "httpListen", "tail" : "(label: String): HttpListenStepBuilder", "member" : "com.github.agourlay.cornichon.http.HttpMockDsl.httpListen", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#httpListen(label:String):com.github.agourlay.cornichon.http.steps.HttpListenSteps.HttpListenStepBuilder", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpMockDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.HttpRequest", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html", "members_object" : [{"label" : "showRequest", "tail" : "(arg0: Show[A]): Show[HttpRequest[A]]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.showRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#showRequest[A](implicitevidence$7:cats.Show[A]):cats.Show[com.github.agourlay.cornichon.http.HttpRequest[A]]", "kind" : "implicit def"}, {"label" : "patch", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.patch", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#patch(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "put", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.put", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#put(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "post", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.post", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#post(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "delete", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.delete", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#delete(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "options", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.options", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#options(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "head", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.head", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#head(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "get", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.get", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#get(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compactDescription", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpRequest.compactDescription", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#compactDescription:String", "kind" : "lazy val"}, {"label" : "withBody", "tail" : "(body: B)(arg0: Show[B], arg1: Resolvable[B], arg2: Encoder[B]): HttpRequest[B]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.withBody", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#withBody[B](body:B)(implicitevidence$4:cats.Show[B],implicitevidence$5:com.github.agourlay.cornichon.resolver.Resolvable[B],implicitevidence$6:io.circe.Encoder[B]):com.github.agourlay.cornichon.http.HttpRequest[B]", "kind" : "def"}, {"label" : "addHeaders", "tail" : "(headers: (String, String)*): HttpRequest[A]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.addHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#addHeaders(headers:(String,String)*):com.github.agourlay.cornichon.http.HttpRequest[A]", "kind" : "def"}, {"label" : "withHeaders", "tail" : "(headers: (String, String)*): HttpRequest[A]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.withHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#withHeaders(headers:(String,String)*):com.github.agourlay.cornichon.http.HttpRequest[A]", "kind" : "def"}, {"label" : "addParams", "tail" : "(params: (String, String)*): HttpRequest[A]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.addParams", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#addParams(params:(String,String)*):com.github.agourlay.cornichon.http.HttpRequest[A]", "kind" : "def"}, {"label" : "withParams", "tail" : "(params: (String, String)*): HttpRequest[A]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.withParams", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#withParams(params:(String,String)*):com.github.agourlay.cornichon.http.HttpRequest[A]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.HttpRequest#<init>", "error" : "unsupported entity"}, {"label" : "headers", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#headers:Seq[(String,String)]", "kind" : "val"}, {"label" : "params", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.params", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#params:Seq[(String,String)]", "kind" : "val"}, {"label" : "body", "tail" : ": Option[A]", "member" : "com.github.agourlay.cornichon.http.HttpRequest.body", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#body:Option[A]", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpRequest.url", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#url:String", "kind" : "val"}, {"label" : "method", "tail" : ": HttpMethod", "member" : "com.github.agourlay.cornichon.http.HttpRequest.method", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#method:com.github.agourlay.cornichon.http.HttpMethod", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "headersTitle", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.headersTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#headersTitle:String", "kind" : "def"}, {"label" : "paramsTitle", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.paramsTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#paramsTitle:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/HttpRequest.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.HttpRequestsDsl", "trait" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html", "kind" : "trait", "members_trait" : [{"label" : "patch", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.patch", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#patch(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "put", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.put", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#put(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "post", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.post", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#post(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "delete", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.delete", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#delete(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "options", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.options", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#options(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "head", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.head", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#head(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "get", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.get", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#get(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpRequestsDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.HttpService", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html", "members_class" : [{"label" : "openWS", "tail" : "(url: String, takeWithin: FiniteDuration, params: Seq[(String, String)], headers: Seq[(String, String)], extractor: ResponseExtractor, expectedStatus: Option[Int]): (ScenarioContext) => Future[Either[CornichonError, Session]]", "member" : "com.github.agourlay.cornichon.http.HttpService.openWS", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#openWS(url:String,takeWithin:scala.concurrent.duration.FiniteDuration,params:Seq[(String,String)],headers:Seq[(String,String)],extractor:com.github.agourlay.cornichon.http.ResponseExtractor,expectedStatus:Option[Int]):com.github.agourlay.cornichon.core.ScenarioContext=>scala.concurrent.Future[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]]", "kind" : "def"}, {"label" : "openSSE", "tail" : "(url: String, takeWithin: FiniteDuration, params: Seq[(String, String)], headers: Seq[(String, String)], extractor: ResponseExtractor, expectedStatus: Option[Int]): (ScenarioContext) => Future[Either[CornichonError, Session]]", "member" : "com.github.agourlay.cornichon.http.HttpService.openSSE", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#openSSE(url:String,takeWithin:scala.concurrent.duration.FiniteDuration,params:Seq[(String,String)],headers:Seq[(String,String)],extractor:com.github.agourlay.cornichon.http.ResponseExtractor,expectedStatus:Option[Int]):com.github.agourlay.cornichon.core.ScenarioContext=>scala.concurrent.Future[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]]", "kind" : "def"}, {"label" : "streamEffect", "tail" : "(request: HttpStreamedRequest, expectedStatus: Option[Int], extractor: ResponseExtractor): (ScenarioContext) => Future[Either[CornichonError, Session]]", "member" : "com.github.agourlay.cornichon.http.HttpService.streamEffect", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#streamEffect(request:com.github.agourlay.cornichon.http.HttpStreamedRequest,expectedStatus:Option[Int],extractor:com.github.agourlay.cornichon.http.ResponseExtractor):com.github.agourlay.cornichon.core.ScenarioContext=>scala.concurrent.Future[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]]", "kind" : "def"}, {"label" : "requestEffect", "tail" : "(request: HttpRequest[A], extractor: ResponseExtractor, expectedStatus: Option[Int], ignoreFromWithHeaders: HeaderSelection)(arg0: Show[A], arg1: Resolvable[A], arg2: Encoder[A]): (ScenarioContext) => Future[Either[CornichonError, Session]]", "member" : "com.github.agourlay.cornichon.http.HttpService.requestEffect", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#requestEffect[A](request:com.github.agourlay.cornichon.http.HttpRequest[A],extractor:com.github.agourlay.cornichon.http.ResponseExtractor,expectedStatus:Option[Int],ignoreFromWithHeaders:com.github.agourlay.cornichon.http.HeaderSelection)(implicitevidence$16:cats.Show[A],implicitevidence$17:com.github.agourlay.cornichon.resolver.Resolvable[A],implicitevidence$18:io.circe.Encoder[A]):com.github.agourlay.cornichon.core.ScenarioContext=>scala.concurrent.Future[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]]", "kind" : "def"}, {"label" : "requestEffectT", "tail" : "(request: HttpRequest[A], extractor: ResponseExtractor, expectedStatus: Option[Int], ignoreFromWithHeaders: HeaderSelection)(arg0: Show[A], arg1: Resolvable[A], arg2: Encoder[A]): (ScenarioContext) => EitherT[Future, CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpService.requestEffectT", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#requestEffectT[A](request:com.github.agourlay.cornichon.http.HttpRequest[A],extractor:com.github.agourlay.cornichon.http.ResponseExtractor,expectedStatus:Option[Int],ignoreFromWithHeaders:com.github.agourlay.cornichon.http.HeaderSelection)(implicitevidence$10:cats.Show[A],implicitevidence$11:com.github.agourlay.cornichon.resolver.Resolvable[A],implicitevidence$12:io.circe.Encoder[A]):com.github.agourlay.cornichon.core.ScenarioContext=>cats.data.EitherT[scala.concurrent.Future,com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.HttpService#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "fillInSessionWithResponse", "tail" : "(session: Session, extractor: ResponseExtractor, requestDescription: String)(response: CornichonHttpResponse): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpService.fillInSessionWithResponse", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#fillInSessionWithResponse(session:com.github.agourlay.cornichon.core.Session,extractor:com.github.agourlay.cornichon.http.ResponseExtractor,requestDescription:String)(response:com.github.agourlay.cornichon.http.CornichonHttpResponse):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "expectStatusCode", "tail" : "(httpResponse: CornichonHttpResponse, expected: Option[Int], requestDescription: String): Either[CornichonError, CornichonHttpResponse]", "member" : "com.github.agourlay.cornichon.http.HttpService.expectStatusCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#expectStatusCode(httpResponse:com.github.agourlay.cornichon.http.CornichonHttpResponse,expected:Option[Int],requestDescription:String):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.http.CornichonHttpResponse]", "kind" : "def"}, {"label" : "ignoreHeadersSelection", "tail" : "(headers: Seq[(String, String)], ignore: HeaderSelection): Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.HttpService.ignoreHeadersSelection", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#ignoreHeadersSelection(headers:Seq[(String,String)],ignore:com.github.agourlay.cornichon.http.HeaderSelection):Seq[(String,String)]", "kind" : "def"}, {"label" : "configureRequest", "tail" : "(req: HttpRequest[A], config: Config)(arg0: Show[A]): HttpRequest[A]", "member" : "com.github.agourlay.cornichon.http.HttpService.configureRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#configureRequest[A](req:com.github.agourlay.cornichon.http.HttpRequest[A],config:com.github.agourlay.cornichon.core.Config)(implicitevidence$19:cats.Show[A]):com.github.agourlay.cornichon.http.HttpRequest[A]", "kind" : "def"}, {"label" : "decodeSessionHeaders", "tail" : "(headers: String): Either[CornichonError, List[(String, String)]]", "member" : "com.github.agourlay.cornichon.http.HttpService.decodeSessionHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#decodeSessionHeaders(headers:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[(String,String)]]", "kind" : "def"}, {"label" : "encodeSessionHeaders", "tail" : "(headers: Seq[(String, String)]): String", "member" : "com.github.agourlay.cornichon.http.HttpService.encodeSessionHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#encodeSessionHeaders(headers:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "encodeSessionHeader", "tail" : "(name: String, value: String): String", "member" : "com.github.agourlay.cornichon.http.HttpService.encodeSessionHeader", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#encodeSessionHeader(name:String,value:String):String", "kind" : "def"}, {"label" : "extractWithHeadersSession", "tail" : "(session: Session): Either[CornichonError, Seq[(String, String)]]", "member" : "com.github.agourlay.cornichon.http.HttpService.extractWithHeadersSession", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#extractWithHeadersSession(session:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,Seq[(String,String)]]", "kind" : "def"}, {"label" : "SessionKeys", "tail" : "", "member" : "com.github.agourlay.cornichon.http.HttpService.SessionKeys", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#SessionKeys", "kind" : "object"}, {"label" : "rightNone", "tail" : ": Right[Nothing, None.type]", "member" : "com.github.agourlay.cornichon.http.HttpService.rightNone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#rightNone:scala.util.Right[Nothing,None.type]", "kind" : "val"}, {"label" : "rightNil", "tail" : ": Right[Nothing, Nil.type]", "member" : "com.github.agourlay.cornichon.http.HttpService.rightNil", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#rightNil:scala.util.Right[Nothing,scala.collection.immutable.Nil.type]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpService$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/http\/HttpService.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.http.HttpStream", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.http.HttpStream#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpStream.name", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/HttpStream.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.HttpStreamedRequest", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html", "members_object" : [{"label" : "showStreamedRequest", "tail" : ": Show[HttpStreamedRequest]", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.showStreamedRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#showStreamedRequest:cats.Show[com.github.agourlay.cornichon.http.HttpStreamedRequest]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "compactDescription", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.compactDescription", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#compactDescription:String", "kind" : "lazy val"}, {"label" : "addHeaders", "tail" : "(headers: (String, String)*): HttpStreamedRequest", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.addHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#addHeaders(headers:(String,String)*):com.github.agourlay.cornichon.http.HttpStreamedRequest", "kind" : "def"}, {"label" : "withHeaders", "tail" : "(headers: (String, String)*): HttpStreamedRequest", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.withHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#withHeaders(headers:(String,String)*):com.github.agourlay.cornichon.http.HttpStreamedRequest", "kind" : "def"}, {"label" : "addParams", "tail" : "(params: (String, String)*): HttpStreamedRequest", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.addParams", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#addParams(params:(String,String)*):com.github.agourlay.cornichon.http.HttpStreamedRequest", "kind" : "def"}, {"label" : "withParams", "tail" : "(params: (String, String)*): HttpStreamedRequest", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.withParams", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#withParams(params:(String,String)*):com.github.agourlay.cornichon.http.HttpStreamedRequest", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest#<init>", "error" : "unsupported entity"}, {"label" : "headers", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#headers:Seq[(String,String)]", "kind" : "val"}, {"label" : "params", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.params", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#params:Seq[(String,String)]", "kind" : "val"}, {"label" : "takeWithin", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.takeWithin", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#takeWithin:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.url", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#url:String", "kind" : "val"}, {"label" : "stream", "tail" : ": HttpStream", "member" : "com.github.agourlay.cornichon.http.HttpStreamedRequest.stream", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#stream:com.github.agourlay.cornichon.http.HttpStream", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "headersTitle", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.headersTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#headersTitle:String", "kind" : "def"}, {"label" : "paramsTitle", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.BaseRequest.paramsTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#paramsTitle:String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/HttpStreamedRequest.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.HttpStreams", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html", "members_object" : [{"label" : "WS", "tail" : ": HttpStream", "member" : "com.github.agourlay.cornichon.http.HttpStreams.WS", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#WS:com.github.agourlay.cornichon.http.HttpStream", "kind" : "val"}, {"label" : "SSE", "tail" : ": HttpStream", "member" : "com.github.agourlay.cornichon.http.HttpStreams.SSE", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#SSE:com.github.agourlay.cornichon.http.HttpStream", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/HttpStreams$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.MalformedHeadersError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.MalformedHeadersError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.MalformedHeadersError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.MalformedHeadersError.error", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#error:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/MalformedHeadersError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.MalformedUriError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.MalformedUriError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.MalformedUriError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.MalformedUriError.error", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#error:String", "kind" : "val"}, {"label" : "uri", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.MalformedUriError.uri", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#uri:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/MalformedUriError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.NoOpExtraction", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/NoOpExtraction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.PathExtractor", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.http.PathExtractor#<init>", "error" : "unsupported entity"}, {"label" : "targetKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.PathExtractor.targetKey", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#targetKey:String", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.PathExtractor.path", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#path:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/PathExtractor.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.QueryGQL", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html", "members_object" : [{"label" : "emptyDocument", "tail" : ": Document", "member" : "com.github.agourlay.cornichon.http.QueryGQL.emptyDocument", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#emptyDocument:sangria.ast.Document", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "payload", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.QueryGQL.payload", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#payload:String", "kind" : "lazy val"}, {"label" : "querySource", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.QueryGQL.querySource", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#querySource:String", "kind" : "lazy val"}, {"label" : "withVariables", "tail" : "(newVariables: (String, VarValue)*): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.withVariables", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#withVariables(newVariables:(String,com.github.agourlay.cornichon.http.VarValue)*):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "withOperationName", "tail" : "(operationName: String): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.withOperationName", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#withOperationName(operationName:String):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "withQuery", "tail" : "(query: Document): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.withQuery", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#withQuery(query:sangria.ast.Document):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "addHeaders", "tail" : "(headers: (String, String)*): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.addHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#addHeaders(headers:(String,String)*):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "withHeaders", "tail" : "(headers: (String, String)*): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.withHeaders", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#withHeaders(headers:(String,String)*):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "addParams", "tail" : "(params: (String, String)*): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.addParams", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#addParams(params:(String,String)*):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "withParams", "tail" : "(params: (String, String)*): QueryGQL", "member" : "com.github.agourlay.cornichon.http.QueryGQL.withParams", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#withParams(params:(String,String)*):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.QueryGQL#<init>", "error" : "unsupported entity"}, {"label" : "headers", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.QueryGQL.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#headers:Seq[(String,String)]", "kind" : "val"}, {"label" : "params", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.QueryGQL.params", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#params:Seq[(String,String)]", "kind" : "val"}, {"label" : "variables", "tail" : ": Option[Map[String, Json]]", "member" : "com.github.agourlay.cornichon.http.QueryGQL.variables", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#variables:Option[Map[String,io.circe.Json]]", "kind" : "val"}, {"label" : "operationName", "tail" : ": Option[String]", "member" : "com.github.agourlay.cornichon.http.QueryGQL.operationName", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#operationName:Option[String]", "kind" : "val"}, {"label" : "query", "tail" : ": Document", "member" : "com.github.agourlay.cornichon.http.QueryGQL.query", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#query:sangria.ast.Document", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.QueryGQL.url", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#url:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/QueryGQL.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.RequestError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.RequestError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.RequestError#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.http.RequestError.e", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#e:Throwable", "kind" : "val"}, {"label" : "request", "tail" : ": A", "member" : "com.github.agourlay.cornichon.http.RequestError.request", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#request:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/RequestError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.ResponseExtractor", "trait" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/ResponseExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.RootExtractor", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.http.RootExtractor#<init>", "error" : "unsupported entity"}, {"label" : "targetKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.RootExtractor.targetKey", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#targetKey:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/RootExtractor.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.SelectAll", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectAll$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.SelectNone", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/SelectNone$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.SseError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.SseError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.SseError#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.http.SseError.e", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#e:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/SseError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/SseError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.StatusNonExpected", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.StatusNonExpected.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.StatusNonExpected#<init>", "error" : "unsupported entity"}, {"label" : "requestDescription", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.StatusNonExpected.requestDescription", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#requestDescription:String", "kind" : "val"}, {"label" : "rawBody", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.StatusNonExpected.rawBody", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#rawBody:String", "kind" : "val"}, {"label" : "headers", "tail" : ": Seq[(String, String)]", "member" : "com.github.agourlay.cornichon.http.StatusNonExpected.headers", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#headers:Seq[(String,String)]", "kind" : "val"}, {"label" : "actualStatus", "tail" : ": A", "member" : "com.github.agourlay.cornichon.http.StatusNonExpected.actualStatus", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#actualStatus:A", "kind" : "val"}, {"label" : "expectedStatus", "tail" : ": A", "member" : "com.github.agourlay.cornichon.http.StatusNonExpected.expectedStatus", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#expectedStatus:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/StatusNonExpected.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.TimeoutErrorAfter", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.TimeoutErrorAfter.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.TimeoutErrorAfter#<init>", "error" : "unsupported entity"}, {"label" : "after", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.http.TimeoutErrorAfter.after", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#after:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "request", "tail" : ": A", "member" : "com.github.agourlay.cornichon.http.TimeoutErrorAfter.request", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#request:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/TimeoutErrorAfter.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.UnmarshallingResponseError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.UnmarshallingResponseError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.UnmarshallingResponseError#<init>", "error" : "unsupported entity"}, {"label" : "response", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.UnmarshallingResponseError.response", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#response:String", "kind" : "val"}, {"label" : "e", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.http.UnmarshallingResponseError.e", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#e:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/UnmarshallingResponseError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.VarValue", "object" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html", "members_object" : [{"label" : "fromEncoderShow", "tail" : "(a: A)(arg0: Encoder[A], arg1: Show[A]): VarValue", "member" : "com.github.agourlay.cornichon.http.VarValue.fromEncoderShow", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#fromEncoderShow[A](a:A)(implicitevidence$1:io.circe.Encoder[A],implicitevidence$2:cats.Show[A]):com.github.agourlay.cornichon.http.VarValue", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "show", "tail" : "(): Show[Value]", "member" : "com.github.agourlay.cornichon.http.VarValue.show", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#show:cats.Show[VarValue.this.Value]", "kind" : "abstract def"}, {"label" : "encoder", "tail" : "(): Encoder[Value]", "member" : "com.github.agourlay.cornichon.http.VarValue.encoder", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#encoder:io.circe.Encoder[VarValue.this.Value]", "kind" : "abstract def"}, {"label" : "value", "tail" : "(): Value", "member" : "com.github.agourlay.cornichon.http.VarValue.value", "link" : "com\/github\/agourlay\/cornichon\/http\/VarValue.html#value:VarValue.this.Value", "kind" : "abstract def"}, {"member" : "com.github.agourlay.cornichon.http.VarValue.Value", "error" : "unsupported entity"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.WsUpgradeError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.WsUpgradeError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.http.WsUpgradeError#<init>", "error" : "unsupported entity"}, {"label" : "status", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.http.WsUpgradeError.status", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#status:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/WsUpgradeError.html", "kind" : "case class"}], "com.github.agourlay.cornichon" : [{"name" : "com.github.agourlay.cornichon.CornichonBaseFeature", "trait" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html", "kind" : "trait", "members_trait" : [{"label" : "And", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.And", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#And", "kind" : "case object"}, {"label" : "Then", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Then", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Then", "kind" : "case object"}, {"label" : "Given", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Given", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Given", "kind" : "case object"}, {"label" : "When", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.When", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#When", "kind" : "case object"}, {"label" : "Starters", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Starters", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#StartersextendsDynamic", "kind" : "sealed trait"}, {"label" : "print_step", "tail" : "(message: String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.print_step", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#print_step(message:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_session", "tail" : "(key: String, index: Option[Int], transform: (String) => Either[CornichonError, String]): DebugStep", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.show_session", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#show_session(key:String,index:Option[Int],transform:String=>Either[com.github.agourlay.cornichon.core.CornichonError,String]):com.github.agourlay.cornichon.steps.regular.DebugStep", "kind" : "def"}, {"label" : "show_session", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.show_session", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#show_session:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "session_values", "tail" : "(k1: String, k2: String): SessionValuesStepBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.session_values", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#session_values(k1:String,k2:String):com.github.agourlay.cornichon.dsl.SessionSteps.SessionValuesStepBuilder", "kind" : "def"}, {"label" : "session_value", "tail" : "(key: String): SessionStepBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.session_value", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#session_value(key:String):com.github.agourlay.cornichon.dsl.SessionSteps.SessionStepBuilder", "kind" : "def"}, {"label" : "transform_session", "tail" : "(key: String)(map: (String) => String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.transform_session", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#transform_session(key:String)(map:String=>String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "rollback", "tail" : "(key: String, show: Boolean): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.rollback", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#rollback(key:String,show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.remove", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#remove(key:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save", "tail" : "(input: (String, String), show: Boolean): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.save", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#save(input:(String,String),show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "wait", "tail" : "(duration: FiniteDuration): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#wait(duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "WithDataInputs", "tail" : "(where: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.WithDataInputs", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#WithDataInputs(where:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "LogDuration", "tail" : "(label: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.LogDuration", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#LogDuration(label:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Within", "tail" : "(maxDuration: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Within", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Within(maxDuration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Concurrently", "tail" : "(maxTime: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Concurrently", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Concurrently(maxTime:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatConcurrently", "tail" : "(times: Int, parallelism: Int, maxTime: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatConcurrently", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#RepeatConcurrently(times:Int,parallelism:Int,maxTime:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Eventually", "tail" : "(maxDuration: FiniteDuration, interval: FiniteDuration, oscillationAllowed: Boolean): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Eventually", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Eventually(maxDuration:scala.concurrent.duration.FiniteDuration,interval:scala.concurrent.duration.FiniteDuration,oscillationAllowed:Boolean):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatDuring", "tail" : "(duration: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatDuring", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#RepeatDuring(duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RetryMax", "tail" : "(limit: Int): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RetryMax", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#RetryMax(limit:Int):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatFrom", "tail" : "(elements: Iterable[ContainerType[A, Show]])(index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatFrom", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#RepeatFrom[A](elements:Iterable[com.github.agourlay.cornichon.dsl.ContainerType[A,cats.Show]])(index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatWith", "tail" : "(elements: ContainerType[Any, Show]*)(index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatWith", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#RepeatWith(elements:com.github.agourlay.cornichon.dsl.ContainerType[Any,cats.Show]*)(index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Repeat", "tail" : "(times: Int, index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Repeat", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Repeat(times:Int,index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Repeat", "tail" : "(times: Int): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Repeat", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Repeat(times:Int):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "AttachAs", "tail" : "(title: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.AttachAs", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#AttachAs(title:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Attach", "tail" : "(): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Attach", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Attach:com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "scenarioBuilder", "tail" : "(s: ScenarioBuilder): BodyElementCollector[Step, Scenario]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.scenarioBuilder", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#scenarioBuilder(s:CoreDsl.this.ScenarioBuilder):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Scenario]", "kind" : "implicit final def"}, {"label" : "Scenario", "tail" : "(name: String): ScenarioBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Scenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Scenario(name:String):CoreDsl.this.ScenarioBuilder", "kind" : "def"}, {"label" : "featureBuilder", "tail" : "(f: FeatureBuilder): BodyElementCollector[Scenario, FeatureDef]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.featureBuilder", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#featureBuilder(f:CoreDsl.this.FeatureBuilder):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Scenario,com.github.agourlay.cornichon.core.FeatureDef]", "kind" : "implicit final def"}, {"label" : "Feature", "tail" : "(name: String): FeatureBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Feature", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#Feature(name:String):CoreDsl.this.FeatureBuilder", "kind" : "def"}, {"label" : "catsStdShowForBoolean", "tail" : ": Show[Boolean]", "member" : "cats.instances.BooleanInstances.catsStdShowForBoolean", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForBoolean:cats.Show[Boolean]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForBoolean", "tail" : ": Order[Boolean] with Hash[Boolean] with LowerBounded[Boolean] with UpperBounded[Boolean]", "member" : "cats.kernel.instances.BooleanInstances.catsKernelStdOrderForBoolean", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForBoolean:cats.kernel.Order[Boolean]withcats.kernel.Hash[Boolean]withcats.kernel.LowerBounded[Boolean]withcats.kernel.UpperBounded[Boolean]", "kind" : "implicit val"}, {"label" : "catsStdShowForDouble", "tail" : ": Show[Double]", "member" : "cats.instances.DoubleInstances.catsStdShowForDouble", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForDouble:cats.Show[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForDouble", "tail" : ": CommutativeGroup[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdGroupForDouble", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdGroupForDouble:cats.kernel.CommutativeGroup[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForDouble", "tail" : ": Order[Double] with Hash[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdOrderForDouble", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForDouble:cats.kernel.Order[Double]withcats.kernel.Hash[Double]", "kind" : "implicit val"}, {"label" : "catsStdShowForFloat", "tail" : ": Show[Float]", "member" : "cats.instances.FloatInstances.catsStdShowForFloat", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForFloat:cats.Show[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForFloat", "tail" : ": CommutativeGroup[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdGroupForFloat", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdGroupForFloat:cats.kernel.CommutativeGroup[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForFloat", "tail" : ": Order[Float] with Hash[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdOrderForFloat", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForFloat:cats.kernel.Order[Float]withcats.kernel.Hash[Float]", "kind" : "implicit val"}, {"label" : "catsStdShowForLong", "tail" : ": Show[Long]", "member" : "cats.instances.LongInstances.catsStdShowForLong", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForLong:cats.Show[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForLong", "tail" : ": CommutativeGroup[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdGroupForLong", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdGroupForLong:cats.kernel.CommutativeGroup[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForLong", "tail" : ": Order[Long] with Hash[Long] with LowerBounded[Long] with UpperBounded[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdOrderForLong", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForLong:cats.kernel.Order[Long]withcats.kernel.Hash[Long]withcats.kernel.LowerBounded[Long]withcats.kernel.UpperBounded[Long]", "kind" : "implicit val"}, {"label" : "catsStdShowForChar", "tail" : ": Show[Char]", "member" : "cats.instances.CharInstances.catsStdShowForChar", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForChar:cats.Show[Char]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForChar", "tail" : ": CharOrder", "member" : "cats.kernel.instances.CharInstances.catsKernelStdOrderForChar", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForChar:cats.kernel.instances.CharOrder", "kind" : "implicit val"}, {"label" : "catsStdShowForInt", "tail" : ": Show[Int]", "member" : "cats.instances.IntInstances.catsStdShowForInt", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForInt:cats.Show[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForInt", "tail" : ": CommutativeGroup[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdGroupForInt", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdGroupForInt:cats.kernel.CommutativeGroup[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForInt", "tail" : ": Order[Int] with Hash[Int] with LowerBounded[Int] with UpperBounded[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdOrderForInt", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForInt:cats.kernel.Order[Int]withcats.kernel.Hash[Int]withcats.kernel.LowerBounded[Int]withcats.kernel.UpperBounded[Int]", "kind" : "implicit val"}, {"label" : "catsStdShowForString", "tail" : ": Show[String]", "member" : "cats.instances.StringInstances.catsStdShowForString", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsStdShowForString:cats.Show[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdMonoidForString", "tail" : ": Monoid[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdMonoidForString", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdMonoidForString:cats.kernel.Monoid[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForString", "tail" : ": Order[String] with Hash[String] with LowerBounded[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdOrderForString", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#catsKernelStdOrderForString:cats.kernel.Order[String]withcats.kernel.Hash[String]withcats.kernel.LowerBounded[String]", "kind" : "implicit val"}, {"label" : "afterEachScenario", "tail" : "(step: Step): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#afterEachScenario(step:com.github.agourlay.cornichon.core.Step):Unit", "kind" : "def"}, {"label" : "beforeEachScenario", "tail" : "(step: Step): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#beforeEachScenario(step:com.github.agourlay.cornichon.core.Step):Unit", "kind" : "def"}, {"label" : "afterFeature", "tail" : "(after: => Unit): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#afterFeature(after:=>Unit):Unit", "kind" : "def"}, {"label" : "beforeFeature", "tail" : "(before: => Unit): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#beforeFeature(before:=>Unit):Unit", "kind" : "def"}, {"label" : "registerMatchers", "tail" : "(): List[Matcher]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.registerMatchers", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#registerMatchers:List[com.github.agourlay.cornichon.matchers.Matcher]", "kind" : "def"}, {"label" : "registerExtractors", "tail" : "(): Map[String, Mapper]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.registerExtractors", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#registerExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper]", "kind" : "def"}, {"label" : "ec", "tail" : ": Scheduler", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.ec", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#ec:monix.execution.Scheduler", "kind" : "implicit lazy val"}, {"label" : "seed", "tail" : ": Option[Long]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.seed", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#seed:Option[Long]", "kind" : "lazy val"}, {"label" : "executeScenariosInParallel", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.executeScenariosInParallel", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#executeScenariosInParallel:Boolean", "kind" : "lazy val"}, {"label" : "afterEachScenario", "tail" : ": ListBuffer[Step]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#afterEachScenario:scala.collection.mutable.ListBuffer[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "beforeEachScenario", "tail" : ": ListBuffer[Step]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#beforeEachScenario:scala.collection.mutable.ListBuffer[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "afterFeature", "tail" : ": ListBuffer[() => Unit]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#afterFeature:scala.collection.mutable.ListBuffer[()=>Unit]", "kind" : "val"}, {"label" : "beforeFeature", "tail" : ": ListBuffer[() => Unit]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#beforeFeature:scala.collection.mutable.ListBuffer[()=>Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "feature", "tail" : "(): FeatureDef", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.feature", "link" : "com\/github\/agourlay\/cornichon\/CornichonBaseFeature.html#feature:com.github.agourlay.cornichon.core.FeatureDef", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.CornichonFeature", "trait" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html", "kind" : "trait", "members_trait" : [{"label" : "And", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.And", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#And", "kind" : "case object"}, {"label" : "Then", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Then", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Then", "kind" : "case object"}, {"label" : "Given", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Given", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Given", "kind" : "case object"}, {"label" : "When", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.When", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#When", "kind" : "case object"}, {"label" : "Starters", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Starters", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#StartersextendsDynamic", "kind" : "sealed trait"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C], gd: (RandomContext) => Generator[D], ge: (RandomContext) => Generator[E], gf: (RandomContext) => Generator[F])(builder: (A) => (B) => (C) => (D) => (E) => (F) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#for_all[A,B,C,D,E,F](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],gd:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D],ge:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E],gf:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[F])(builder:A=>(B=>(C=>(D=>(E=>(F=>com.github.agourlay.cornichon.core.Step)))))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C], gd: (RandomContext) => Generator[D], ge: (RandomContext) => Generator[E])(builder: (A) => (B) => (C) => (D) => (E) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#for_all[A,B,C,D,E](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],gd:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D],ge:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E])(builder:A=>(B=>(C=>(D=>(E=>com.github.agourlay.cornichon.core.Step))))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C], gd: (RandomContext) => Generator[D])(builder: (A) => (B) => (C) => (D) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#for_all[A,B,C,D](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],gd:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D])(builder:A=>(B=>(C=>(D=>com.github.agourlay.cornichon.core.Step)))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C])(builder: (A) => (B) => (C) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#for_all[A,B,C](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C])(builder:A=>(B=>(C=>com.github.agourlay.cornichon.core.Step))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B])(builder: (A) => (B) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#for_all[A,B](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B])(builder:A=>(B=>com.github.agourlay.cornichon.core.Step)):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A])(builder: (A) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#for_all[A](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A])(builder:A=>com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "check_model", "tail" : "(maxNumberOfRuns: Int, maxNumberOfTransitions: Int)(modelRunner: ModelRunner[A, B, C, D, E, F]): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.check_model", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#check_model[A,B,C,D,E,F](maxNumberOfRuns:Int,maxNumberOfTransitions:Int)(modelRunner:com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,D,E,F]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_key_as_json", "tail" : "(key: String, index: Option[Int]): Step", "member" : "com.github.agourlay.cornichon.json.JsonDsl.show_key_as_json", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_key_as_json(key:String,index:Option[Int]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "WithHeaders", "tail" : "(headers: (String, String)*): BodyElementCollector[Step, Seq[Step]]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.WithHeaders", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#WithHeaders(headers:(String,String)*):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,Seq[com.github.agourlay.cornichon.core.Step]]", "kind" : "def"}, {"label" : "WithBasicAuth", "tail" : "(userName: String, password: String): BodyElementCollector[Step, Seq[Step]]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.WithBasicAuth", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#WithBasicAuth(userName:String,password:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,Seq[com.github.agourlay.cornichon.core.Step]]", "kind" : "def"}, {"label" : "show_with_headers", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_with_headers", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_with_headers:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_headers", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_headers", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_last_headers:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_body_json", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_body_json", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_last_body_json:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_body", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_body", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_last_body:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_status", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_status", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_last_status:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_response_json", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_response_json", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_last_response_json:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_last_response", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.show_last_response", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_last_response:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save_header_value", "tail" : "(args: (String, String)*): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_header_value", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#save_header_value(args:(String,String)*):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save_body_path", "tail" : "(args: (String, String)*): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_body_path", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#save_body_path(args:(String,String)*):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save_body", "tail" : "(target: String): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.save_body", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#save_body(target:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "body", "tail" : "(): JsonStepBuilder", "member" : "com.github.agourlay.cornichon.http.HttpDsl.body", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#body:com.github.agourlay.cornichon.json.JsonSteps.JsonStepBuilder", "kind" : "def"}, {"label" : "headers", "tail" : "(): HeadersStepBuilder.type", "member" : "com.github.agourlay.cornichon.http.HttpDsl.headers", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#headers:com.github.agourlay.cornichon.http.steps.HeadersSteps.HeadersStepBuilder.type", "kind" : "def"}, {"label" : "status", "tail" : "(): StatusStepBuilder.type", "member" : "com.github.agourlay.cornichon.http.HttpDsl.status", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#status:com.github.agourlay.cornichon.http.steps.StatusSteps.StatusStepBuilder.type", "kind" : "def"}, {"label" : "open_sse", "tail" : "(url: String, takeWithin: FiniteDuration): HttpStreamedRequest", "member" : "com.github.agourlay.cornichon.http.HttpDsl.open_sse", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#open_sse(url:String,takeWithin:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.http.HttpStreamedRequest", "kind" : "def"}, {"label" : "query_gql", "tail" : "(url: String): QueryGQL", "member" : "com.github.agourlay.cornichon.http.HttpDsl.query_gql", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#query_gql(url:String):com.github.agourlay.cornichon.http.QueryGQL", "kind" : "def"}, {"label" : "queryGqlToHttpRequest", "tail" : "(queryGQL: QueryGQL): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpDsl.queryGqlToHttpRequest", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#queryGqlToHttpRequest(queryGQL:com.github.agourlay.cornichon.http.QueryGQL):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "implicit def"}, {"label" : "queryGqlToStep", "tail" : "(queryGQL: QueryGQL): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.queryGqlToStep", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#queryGqlToStep(queryGQL:com.github.agourlay.cornichon.http.QueryGQL):com.github.agourlay.cornichon.core.Step", "kind" : "implicit def"}, {"label" : "httpStreamedRequestToStep", "tail" : "(request: HttpStreamedRequest): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.httpStreamedRequestToStep", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#httpStreamedRequestToStep(request:com.github.agourlay.cornichon.http.HttpStreamedRequest):com.github.agourlay.cornichon.core.Step", "kind" : "implicit def"}, {"label" : "httpRequestToStep", "tail" : "(request: HttpRequest[A])(arg0: Show[A], arg1: Resolvable[A], arg2: Encoder[A]): Step", "member" : "com.github.agourlay.cornichon.http.HttpDsl.httpRequestToStep", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#httpRequestToStep[A](request:com.github.agourlay.cornichon.http.HttpRequest[A])(implicitevidence$1:cats.Show[A],implicitevidence$2:com.github.agourlay.cornichon.resolver.Resolvable[A],implicitevidence$3:io.circe.Encoder[A]):com.github.agourlay.cornichon.core.Step", "kind" : "implicit def"}, {"label" : "http", "tail" : ": HttpService", "member" : "com.github.agourlay.cornichon.http.HttpDsl.http", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#http:com.github.agourlay.cornichon.http.HttpService", "kind" : "lazy val"}, {"label" : "httpServiceByURL", "tail" : "(baseUrl: String, timeout: FiniteDuration): HttpService", "member" : "com.github.agourlay.cornichon.http.HttpDsl.httpServiceByURL", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#httpServiceByURL(baseUrl:String,timeout:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.http.HttpService", "kind" : "def"}, {"label" : "baseUrl", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.HttpDsl.baseUrl", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#baseUrl:String", "kind" : "lazy val"}, {"label" : "requestTimeout", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.http.HttpDsl.requestTimeout", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#requestTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "lazy val"}, {"label" : "patch", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.patch", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#patch(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "put", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.put", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#put(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "post", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.post", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#post(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "delete", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.delete", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#delete(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "options", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.options", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#options(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "head", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.head", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#head(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "get", "tail" : "(url: String): HttpRequest[String]", "member" : "com.github.agourlay.cornichon.http.HttpRequestsDsl.get", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#get(url:String):com.github.agourlay.cornichon.http.HttpRequest[String]", "kind" : "def"}, {"label" : "removeFromWithHeaders", "tail" : "(name: String)(s: Session): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpDslOps.removeFromWithHeaders", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#removeFromWithHeaders(name:String)(s:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "addToWithHeaders", "tail" : "(name: String, value: String)(s: Session): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.http.HttpDslOps.addToWithHeaders", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#addToWithHeaders(name:String,value:String)(s:com.github.agourlay.cornichon.core.Session):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "print_step", "tail" : "(message: String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.print_step", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#print_step(message:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_session", "tail" : "(key: String, index: Option[Int], transform: (String) => Either[CornichonError, String]): DebugStep", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.show_session", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_session(key:String,index:Option[Int],transform:String=>Either[com.github.agourlay.cornichon.core.CornichonError,String]):com.github.agourlay.cornichon.steps.regular.DebugStep", "kind" : "def"}, {"label" : "show_session", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.show_session", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#show_session:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "session_values", "tail" : "(k1: String, k2: String): SessionValuesStepBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.session_values", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#session_values(k1:String,k2:String):com.github.agourlay.cornichon.dsl.SessionSteps.SessionValuesStepBuilder", "kind" : "def"}, {"label" : "session_value", "tail" : "(key: String): SessionStepBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.session_value", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#session_value(key:String):com.github.agourlay.cornichon.dsl.SessionSteps.SessionStepBuilder", "kind" : "def"}, {"label" : "transform_session", "tail" : "(key: String)(map: (String) => String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.transform_session", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#transform_session(key:String)(map:String=>String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "rollback", "tail" : "(key: String, show: Boolean): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.rollback", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#rollback(key:String,show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.remove", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#remove(key:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save", "tail" : "(input: (String, String), show: Boolean): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.save", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#save(input:(String,String),show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "wait", "tail" : "(duration: FiniteDuration): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#wait(duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "WithDataInputs", "tail" : "(where: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.WithDataInputs", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#WithDataInputs(where:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "LogDuration", "tail" : "(label: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.LogDuration", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#LogDuration(label:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Within", "tail" : "(maxDuration: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Within", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Within(maxDuration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Concurrently", "tail" : "(maxTime: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Concurrently", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Concurrently(maxTime:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatConcurrently", "tail" : "(times: Int, parallelism: Int, maxTime: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatConcurrently", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#RepeatConcurrently(times:Int,parallelism:Int,maxTime:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Eventually", "tail" : "(maxDuration: FiniteDuration, interval: FiniteDuration, oscillationAllowed: Boolean): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Eventually", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Eventually(maxDuration:scala.concurrent.duration.FiniteDuration,interval:scala.concurrent.duration.FiniteDuration,oscillationAllowed:Boolean):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatDuring", "tail" : "(duration: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatDuring", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#RepeatDuring(duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RetryMax", "tail" : "(limit: Int): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RetryMax", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#RetryMax(limit:Int):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatFrom", "tail" : "(elements: Iterable[ContainerType[A, Show]])(index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatFrom", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#RepeatFrom[A](elements:Iterable[com.github.agourlay.cornichon.dsl.ContainerType[A,cats.Show]])(index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatWith", "tail" : "(elements: ContainerType[Any, Show]*)(index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatWith", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#RepeatWith(elements:com.github.agourlay.cornichon.dsl.ContainerType[Any,cats.Show]*)(index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Repeat", "tail" : "(times: Int, index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Repeat", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Repeat(times:Int,index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Repeat", "tail" : "(times: Int): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Repeat", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Repeat(times:Int):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "AttachAs", "tail" : "(title: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.AttachAs", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#AttachAs(title:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Attach", "tail" : "(): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Attach", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Attach:com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "scenarioBuilder", "tail" : "(s: ScenarioBuilder): BodyElementCollector[Step, Scenario]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.scenarioBuilder", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#scenarioBuilder(s:CoreDsl.this.ScenarioBuilder):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Scenario]", "kind" : "implicit final def"}, {"label" : "Scenario", "tail" : "(name: String): ScenarioBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Scenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Scenario(name:String):CoreDsl.this.ScenarioBuilder", "kind" : "def"}, {"label" : "featureBuilder", "tail" : "(f: FeatureBuilder): BodyElementCollector[Scenario, FeatureDef]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.featureBuilder", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#featureBuilder(f:CoreDsl.this.FeatureBuilder):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Scenario,com.github.agourlay.cornichon.core.FeatureDef]", "kind" : "implicit final def"}, {"label" : "Feature", "tail" : "(name: String): FeatureBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Feature", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#Feature(name:String):CoreDsl.this.FeatureBuilder", "kind" : "def"}, {"label" : "catsStdShowForBoolean", "tail" : ": Show[Boolean]", "member" : "cats.instances.BooleanInstances.catsStdShowForBoolean", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForBoolean:cats.Show[Boolean]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForBoolean", "tail" : ": Order[Boolean] with Hash[Boolean] with LowerBounded[Boolean] with UpperBounded[Boolean]", "member" : "cats.kernel.instances.BooleanInstances.catsKernelStdOrderForBoolean", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForBoolean:cats.kernel.Order[Boolean]withcats.kernel.Hash[Boolean]withcats.kernel.LowerBounded[Boolean]withcats.kernel.UpperBounded[Boolean]", "kind" : "implicit val"}, {"label" : "catsStdShowForDouble", "tail" : ": Show[Double]", "member" : "cats.instances.DoubleInstances.catsStdShowForDouble", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForDouble:cats.Show[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForDouble", "tail" : ": CommutativeGroup[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdGroupForDouble", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdGroupForDouble:cats.kernel.CommutativeGroup[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForDouble", "tail" : ": Order[Double] with Hash[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdOrderForDouble", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForDouble:cats.kernel.Order[Double]withcats.kernel.Hash[Double]", "kind" : "implicit val"}, {"label" : "catsStdShowForFloat", "tail" : ": Show[Float]", "member" : "cats.instances.FloatInstances.catsStdShowForFloat", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForFloat:cats.Show[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForFloat", "tail" : ": CommutativeGroup[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdGroupForFloat", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdGroupForFloat:cats.kernel.CommutativeGroup[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForFloat", "tail" : ": Order[Float] with Hash[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdOrderForFloat", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForFloat:cats.kernel.Order[Float]withcats.kernel.Hash[Float]", "kind" : "implicit val"}, {"label" : "catsStdShowForLong", "tail" : ": Show[Long]", "member" : "cats.instances.LongInstances.catsStdShowForLong", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForLong:cats.Show[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForLong", "tail" : ": CommutativeGroup[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdGroupForLong", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdGroupForLong:cats.kernel.CommutativeGroup[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForLong", "tail" : ": Order[Long] with Hash[Long] with LowerBounded[Long] with UpperBounded[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdOrderForLong", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForLong:cats.kernel.Order[Long]withcats.kernel.Hash[Long]withcats.kernel.LowerBounded[Long]withcats.kernel.UpperBounded[Long]", "kind" : "implicit val"}, {"label" : "catsStdShowForChar", "tail" : ": Show[Char]", "member" : "cats.instances.CharInstances.catsStdShowForChar", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForChar:cats.Show[Char]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForChar", "tail" : ": CharOrder", "member" : "cats.kernel.instances.CharInstances.catsKernelStdOrderForChar", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForChar:cats.kernel.instances.CharOrder", "kind" : "implicit val"}, {"label" : "catsStdShowForInt", "tail" : ": Show[Int]", "member" : "cats.instances.IntInstances.catsStdShowForInt", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForInt:cats.Show[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForInt", "tail" : ": CommutativeGroup[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdGroupForInt", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdGroupForInt:cats.kernel.CommutativeGroup[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForInt", "tail" : ": Order[Int] with Hash[Int] with LowerBounded[Int] with UpperBounded[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdOrderForInt", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForInt:cats.kernel.Order[Int]withcats.kernel.Hash[Int]withcats.kernel.LowerBounded[Int]withcats.kernel.UpperBounded[Int]", "kind" : "implicit val"}, {"label" : "catsStdShowForString", "tail" : ": Show[String]", "member" : "cats.instances.StringInstances.catsStdShowForString", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsStdShowForString:cats.Show[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdMonoidForString", "tail" : ": Monoid[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdMonoidForString", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdMonoidForString:cats.kernel.Monoid[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForString", "tail" : ": Order[String] with Hash[String] with LowerBounded[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdOrderForString", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#catsKernelStdOrderForString:cats.kernel.Order[String]withcats.kernel.Hash[String]withcats.kernel.LowerBounded[String]", "kind" : "implicit val"}, {"label" : "afterEachScenario", "tail" : "(step: Step): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#afterEachScenario(step:com.github.agourlay.cornichon.core.Step):Unit", "kind" : "def"}, {"label" : "beforeEachScenario", "tail" : "(step: Step): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#beforeEachScenario(step:com.github.agourlay.cornichon.core.Step):Unit", "kind" : "def"}, {"label" : "afterFeature", "tail" : "(after: => Unit): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#afterFeature(after:=>Unit):Unit", "kind" : "def"}, {"label" : "beforeFeature", "tail" : "(before: => Unit): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#beforeFeature(before:=>Unit):Unit", "kind" : "def"}, {"label" : "registerMatchers", "tail" : "(): List[Matcher]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.registerMatchers", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#registerMatchers:List[com.github.agourlay.cornichon.matchers.Matcher]", "kind" : "def"}, {"label" : "registerExtractors", "tail" : "(): Map[String, Mapper]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.registerExtractors", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#registerExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper]", "kind" : "def"}, {"label" : "ec", "tail" : ": Scheduler", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.ec", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#ec:monix.execution.Scheduler", "kind" : "implicit lazy val"}, {"label" : "seed", "tail" : ": Option[Long]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.seed", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#seed:Option[Long]", "kind" : "lazy val"}, {"label" : "executeScenariosInParallel", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.executeScenariosInParallel", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#executeScenariosInParallel:Boolean", "kind" : "lazy val"}, {"label" : "afterEachScenario", "tail" : ": ListBuffer[Step]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#afterEachScenario:scala.collection.mutable.ListBuffer[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "beforeEachScenario", "tail" : ": ListBuffer[Step]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeEachScenario", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#beforeEachScenario:scala.collection.mutable.ListBuffer[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "afterFeature", "tail" : ": ListBuffer[() => Unit]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#afterFeature:scala.collection.mutable.ListBuffer[()=>Unit]", "kind" : "val"}, {"label" : "beforeFeature", "tail" : ": ListBuffer[() => Unit]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeFeature", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#beforeFeature:scala.collection.mutable.ListBuffer[()=>Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "feature", "tail" : "(): FeatureDef", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.feature", "link" : "com\/github\/agourlay\/cornichon\/CornichonFeature.html#feature:com.github.agourlay.cornichon.core.FeatureDef", "kind" : "abstract def"}], "shortDescription" : ""}], "com.github.agourlay.cornichon.kafka" : [{"name" : "com.github.agourlay.cornichon.kafka.KafkaConsumerConfig", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.kafka.KafkaConsumerConfig#<init>", "error" : "unsupported entity"}, {"label" : "heartbeatIntervalMsConfig", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.kafka.KafkaConsumerConfig.heartbeatIntervalMsConfig", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#heartbeatIntervalMsConfig:Int", "kind" : "val"}, {"label" : "sessionTimeoutMsConfig", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.kafka.KafkaConsumerConfig.sessionTimeoutMsConfig", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#sessionTimeoutMsConfig:Int", "kind" : "val"}, {"label" : "groupId", "tail" : ": String", "member" : "com.github.agourlay.cornichon.kafka.KafkaConsumerConfig.groupId", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#groupId:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaConsumerConfig.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.kafka.KafkaDsl", "trait" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html", "kind" : "trait", "members_trait" : [{"label" : "kafka", "tail" : "(topic: String): KafkaStepBuilder", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.kafka", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#kafka(topic:String):com.github.agourlay.cornichon.kafka.KafkaStepBuilder", "kind" : "def"}, {"label" : "read_from_topic", "tail" : "(topic: String, atLeastAmount: Int, timeoutMs: Int): Step", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.read_from_topic", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#read_from_topic(topic:String,atLeastAmount:Int,timeoutMs:Int):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "put_topic", "tail" : "(topic: String, key: String, message: String): Step", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.put_topic", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#put_topic(topic:String,key:String,message:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "featureConsumer", "tail" : ": KafkaConsumer[String, String]", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.featureConsumer", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#featureConsumer:org.apache.kafka.clients.consumer.KafkaConsumer[String,String]", "kind" : "lazy val"}, {"label" : "featureProducer", "tail" : ": KafkaProducer[String, String]", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.featureProducer", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#featureProducer:org.apache.kafka.clients.producer.KafkaProducer[String,String]", "kind" : "lazy val"}, {"label" : "kafkaConsumerConfig", "tail" : ": KafkaConsumerConfig", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.kafkaConsumerConfig", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#kafkaConsumerConfig:com.github.agourlay.cornichon.kafka.KafkaConsumerConfig", "kind" : "val"}, {"label" : "kafkaProducerConfig", "tail" : ": KafkaProducerConfig", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.kafkaProducerConfig", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#kafkaProducerConfig:com.github.agourlay.cornichon.kafka.KafkaProducerConfig", "kind" : "val"}, {"label" : "kafkaBootstrapServersPort", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.kafkaBootstrapServersPort", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#kafkaBootstrapServersPort:Int", "kind" : "lazy val"}, {"label" : "kafkaBootstrapServersHost", "tail" : ": String", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.kafkaBootstrapServersHost", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#kafkaBootstrapServersHost:String", "kind" : "lazy val"}, {"label" : "executeScenariosInParallel", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.kafka.KafkaDsl.executeScenariosInParallel", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#executeScenariosInParallel:Boolean", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.kafka.KafkaProducerConfig", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.kafka.KafkaProducerConfig#<init>", "error" : "unsupported entity"}, {"label" : "retriesConfig", "tail" : ": Option[Int]", "member" : "com.github.agourlay.cornichon.kafka.KafkaProducerConfig.retriesConfig", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#retriesConfig:Option[Int]", "kind" : "val"}, {"label" : "batchSizeInBytes", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.kafka.KafkaProducerConfig.batchSizeInBytes", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#batchSizeInBytes:Int", "kind" : "val"}, {"label" : "ack", "tail" : ": String", "member" : "com.github.agourlay.cornichon.kafka.KafkaProducerConfig.ack", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#ack:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaProducerConfig.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.kafka.KafkaStepBuilder", "shortDescription" : "", "members_case class" : [{"label" : "key_is", "tail" : "(expected: String): AssertStep", "member" : "com.github.agourlay.cornichon.kafka.KafkaStepBuilder.key_is", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#key_is(expected:String):com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"label" : "message_value", "tail" : "(): JsonStepBuilder", "member" : "com.github.agourlay.cornichon.kafka.KafkaStepBuilder.message_value", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#message_value:com.github.agourlay.cornichon.json.JsonSteps.JsonStepBuilder", "kind" : "def"}, {"label" : "topic_is", "tail" : "(expected: String): AssertStep", "member" : "com.github.agourlay.cornichon.kafka.KafkaStepBuilder.topic_is", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#topic_is(expected:String):com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.kafka.KafkaStepBuilder#<init>", "error" : "unsupported entity"}, {"label" : "sessionKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.kafka.KafkaStepBuilder.sessionKey", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#sessionKey:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/kafka\/KafkaStepBuilder.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.kafka.NotEnoughMessagesPolled", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.kafka.NotEnoughMessagesPolled.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.kafka.NotEnoughMessagesPolled#<init>", "error" : "unsupported entity"}, {"label" : "messagesPolled", "tail" : ": List[ConsumerRecord[String, String]]", "member" : "com.github.agourlay.cornichon.kafka.NotEnoughMessagesPolled.messagesPolled", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#messagesPolled:List[org.apache.kafka.clients.consumer.ConsumerRecord[String,String]]", "kind" : "val"}, {"label" : "atLeastExpected", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.kafka.NotEnoughMessagesPolled.atLeastExpected", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#atLeastExpected:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/kafka\/NotEnoughMessagesPolled.html", "kind" : "case class"}], "com.github.agourlay.cornichon.steps.cats" : [{"name" : "com.github.agourlay.cornichon.steps.cats.EffectStep", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html", "members_object" : [{"label" : "fromAsync", "tail" : "(title: String, effect: (ScenarioContext) => F[Session], show: Boolean)(arg0: Effect[F]): Step", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.fromAsync", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#fromAsync[F[_]](title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>F[com.github.agourlay.cornichon.core.Session],show:Boolean)(implicitevidence$3:cats.effect.Effect[F]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "fromSyncE", "tail" : "(title: String, effect: (ScenarioContext) => Either[CornichonError, Session], show: Boolean): Step", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.fromSyncE", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#fromSyncE(title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session],show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "fromSync", "tail" : "(title: String, effect: (ScenarioContext) => Session, show: Boolean): Step", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.fromSync", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#fromSync(title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>com.github.agourlay.cornichon.core.Session,show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "fromEitherT", "tail" : "(title: String, effect: (ScenarioContext) => EitherT[F, CornichonError, Session], show: Boolean)(arg0: Effect[F]): Step", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.fromEitherT", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#fromEitherT[F[_]](title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>cats.data.EitherT[F,com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session],show:Boolean)(implicitevidence$2:cats.effect.Effect[F]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "logOnSuccess", "tail" : "(result: Session, runState: RunState, executionTime: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.logOnSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#logOnSuccess(result:com.github.agourlay.cornichon.core.Session,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "def"}, {"label" : "onError", "tail" : "(errors: NonEmptyList[CornichonError], runState: RunState, executionTime: Duration): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.onError", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#onError(errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "def"}, {"label" : "runSessionValueStep", "tail" : "(runState: RunState): Task[Either[NonEmptyList[CornichonError], Session]]", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.runSessionValueStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#runSessionValueStep(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[Either[cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],com.github.agourlay.cornichon.core.Session]]", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.cats.EffectStep#<init>", "error" : "unsupported entity"}, {"label" : "show", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.show", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#show:Boolean", "kind" : "val"}, {"label" : "effect", "tail" : ": (ScenarioContext) => F[Either[CornichonError, Session]]", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.effect", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#effect:com.github.agourlay.cornichon.core.ScenarioContext=>F[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]]", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.cats.EffectStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#title:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.SessionValueStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/cats\/EffectStep.html", "kind" : "case class"}], "com.github.agourlay.cornichon.matchers" : [{"name" : "com.github.agourlay.cornichon.matchers.DuplicateMatcherDefinition", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.DuplicateMatcherDefinition.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.matchers.DuplicateMatcherDefinition#<init>", "error" : "unsupported entity"}, {"label" : "descriptions", "tail" : ": List[String]", "member" : "com.github.agourlay.cornichon.matchers.DuplicateMatcherDefinition.descriptions", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#descriptions:List[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.DuplicateMatcherDefinition.name", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/DuplicateMatcherDefinition.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.Matcher", "shortDescription" : "", "members_case class" : [{"label" : "pattern", "tail" : ": Pattern", "member" : "com.github.agourlay.cornichon.matchers.Matcher.pattern", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#pattern:java.util.regex.Pattern", "kind" : "lazy val"}, {"label" : "quotedFullKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.Matcher.quotedFullKey", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#quotedFullKey:String", "kind" : "lazy val"}, {"label" : "fullKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.Matcher.fullKey", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#fullKey:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.matchers.Matcher#<init>", "error" : "unsupported entity"}, {"label" : "predicate", "tail" : ": (Json) => Boolean", "member" : "com.github.agourlay.cornichon.matchers.Matcher.predicate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#predicate:io.circe.Json=>Boolean", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.Matcher.description", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#description:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.Matcher.key", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/Matcher.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherAssertion#<init>", "error" : "unsupported entity"}, {"label" : "jsonPath", "tail" : ": JsonPath", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertion.jsonPath", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#jsonPath:com.github.agourlay.cornichon.json.JsonPath", "kind" : "val"}, {"label" : "input", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertion.input", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#input:io.circe.Json", "kind" : "val"}, {"label" : "m", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertion.m", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#m:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "negate", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertion.negate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#negate:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#baseErrorMessage:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "negate", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionError.negate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#negate:Boolean", "kind" : "val"}, {"label" : "input", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionError.input", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#input:io.circe.Json", "kind" : "val"}, {"label" : "m", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionError.m", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#m:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#baseErrorMessage:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError.error", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#error:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "input", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError.input", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#input:io.circe.Json", "kind" : "val"}, {"label" : "m", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.MatcherAssertionEvaluationError.m", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#m:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherAssertionEvaluationError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.matchers.MatcherError.error", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#error:Throwable", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherError.input", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherKey", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.matchers.MatcherKey#<init>", "error" : "unsupported entity"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherKey.key", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherKey.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherParser", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html", "members_class" : [{"label" : "__SubParserInput", "tail" : "", "member" : "org.parboiled2.Parser.__SubParserInput", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__SubParserInputextendsParserInput", "kind" : "class"}, {"label" : "TracingBubbleException", "tail" : "", "member" : "org.parboiled2.Parser.TracingBubbleException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#TracingBubbleExceptionextendsRuntimeExceptionwithNoStackTrace", "kind" : "class"}, {"label" : "ActionOperator", "tail" : "", "member" : "org.parboiled2.RuleDSLActions.ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#ActionOperator[I<:<?>,O<:<?>,Ops<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "WithSeparatedBy", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#WithSeparatedBy[I<:<?>,O<:<?>]extendsAnyRef", "kind" : "trait"}, {"label" : "NTimes", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.NTimes", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#NTimesextendsAnyRef", "kind" : "sealed trait"}, {"label" : "CharRangeSupport", "tail" : "", "member" : "org.parboiled2.RuleDSLBasics.CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#CharRangeSupportextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Digits", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.Digits", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#Digits:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "Number", "tail" : "(): Rule[HNil, ::[Int, HNil]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.Number", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#Number:org.parboiled2.Rule[shapeless.HNil,Int::shapeless.HNil]", "kind" : "def"}, {"label" : "Ignore", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.Ignore", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#Ignore:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "MatcherTXT", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.MatcherTXT", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#MatcherTXT:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "MatcherRule", "tail" : "(): Rule[HNil, ::[MatcherKey, HNil]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.MatcherRule", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#MatcherRule:org.parboiled2.Rule[shapeless.HNil,com.github.agourlay.cornichon.matchers.MatcherKey::shapeless.HNil]", "kind" : "def"}, {"label" : "matchersRule", "tail" : "(): Rule[HNil, ::[Seq[MatcherKey], HNil]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.matchersRule", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#matchersRule:org.parboiled2.Rule[shapeless.HNil,Seq[com.github.agourlay.cornichon.matchers.MatcherKey]::shapeless.HNil]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherParser#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": ParserInput", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.input", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#input:org.parboiled2.ParserInput", "kind" : "val"}, {"label" : "__hardFail", "tail" : "(expected: String): Nothing", "member" : "org.parboiled2.Parser.__hardFail", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__hardFail(expected:String):Nothing", "kind" : "def"}, {"label" : "__matchMapWrapped", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMapWrapped", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchMapWrapped(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchMap", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMap", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchMap(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchNoneOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchNoneOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchNoneOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchAnyOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchAnyOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchAnyOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchIgnoreCaseStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchIgnoreCaseString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__matchString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__push", "tail" : "(value: Any): Boolean", "member" : "org.parboiled2.Parser.__push", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__push(value:Any):Boolean", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(prefix: List[NonTerminal], terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__bubbleUp(prefix:List[org.parboiled2.RuleTrace.NonTerminal],terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__bubbleUp(terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__registerMismatch", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__registerMismatch", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__registerMismatch():Boolean", "kind" : "def"}, {"label" : "__exitQuiet", "tail" : "(saved: Int): Unit", "member" : "org.parboiled2.Parser.__exitQuiet", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__exitQuiet(saved:Int):Unit", "kind" : "def"}, {"label" : "__enterQuiet", "tail" : "(): Int", "member" : "org.parboiled2.Parser.__enterQuiet", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__enterQuiet():Int", "kind" : "def"}, {"label" : "__exitAtomic", "tail" : "(saved: Boolean): Unit", "member" : "org.parboiled2.Parser.__exitAtomic", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__exitAtomic(saved:Boolean):Unit", "kind" : "def"}, {"label" : "__enterAtomic", "tail" : "(start: Int): Boolean", "member" : "org.parboiled2.Parser.__enterAtomic", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__enterAtomic(start:Int):Boolean", "kind" : "def"}, {"label" : "__exitNotPredicate", "tail" : "(saved: AnyRef): Unit", "member" : "org.parboiled2.Parser.__exitNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__exitNotPredicate(saved:AnyRef):Unit", "kind" : "def"}, {"label" : "__enterNotPredicate", "tail" : "(): AnyRef", "member" : "org.parboiled2.Parser.__enterNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__enterNotPredicate():AnyRef", "kind" : "def"}, {"label" : "__restoreState", "tail" : "(mark: Mark): Unit", "member" : "org.parboiled2.Parser.__restoreState", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__restoreState(mark:org.parboiled2.Parser.Mark):Unit", "kind" : "def"}, {"label" : "__saveState", "tail" : "(): Mark", "member" : "org.parboiled2.Parser.__saveState", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__saveState:org.parboiled2.Parser.Mark", "kind" : "def"}, {"label" : "__updateMaxCursor", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__updateMaxCursor", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__updateMaxCursor():Boolean", "kind" : "def"}, {"label" : "__advance", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__advance", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__advance():Boolean", "kind" : "def"}, {"label" : "__run", "tail" : "(rule: => RuleN[L])(scheme: DeliveryScheme[L]): Result", "member" : "org.parboiled2.Parser.__run", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__run[L<:shapeless.HList](rule:=>org.parboiled2.RuleN[L])(implicitscheme:org.parboiled2.Parser.DeliveryScheme[L]):scheme.Result", "kind" : "def"}, {"label" : "__inErrorAnalysis", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__inErrorAnalysis", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#__inErrorAnalysis:Boolean", "kind" : "def"}, {"label" : "copyStateFrom", "tail" : "(other: Parser, offset: Int): Unit", "member" : "org.parboiled2.Parser.copyStateFrom", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#copyStateFrom(other:org.parboiled2.Parser,offset:Int):Unit", "kind" : "def"}, {"label" : "formatError", "tail" : "(error: ParseError, formatter: ErrorFormatter): String", "member" : "org.parboiled2.Parser.formatError", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#formatError(error:org.parboiled2.ParseError,formatter:org.parboiled2.ErrorFormatter):String", "kind" : "def"}, {"label" : "errorTraceCollectionLimit", "tail" : "(): Int", "member" : "org.parboiled2.Parser.errorTraceCollectionLimit", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#errorTraceCollectionLimit:Int", "kind" : "def"}, {"label" : "valueStack", "tail" : "(): ValueStack", "member" : "org.parboiled2.Parser.valueStack", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#valueStack:org.parboiled2.ValueStack", "kind" : "def"}, {"label" : "charAtRC", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAtRC", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#charAtRC(offset:Int):Char", "kind" : "def"}, {"label" : "charAt", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAt", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#charAt(offset:Int):Char", "kind" : "def"}, {"label" : "lastChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.lastChar", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#lastChar:Char", "kind" : "def"}, {"label" : "cursorChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.cursorChar", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#cursorChar:Char", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Int", "member" : "org.parboiled2.Parser.cursor", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#cursor:Int", "kind" : "def"}, {"label" : "namedRule", "tail" : "(name: String)(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.namedRule", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#namedRule[I<:shapeless.HList,O<:shapeless.HList](name:String)(r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.rule", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#rule[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule2ActionOperator", "tail" : "(r: Rule[I, O])(ops: ActionOps[I, O]): ActionOperator[I, O, Out]", "member" : "org.parboiled2.RuleDSLActions.rule2ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#rule2ActionOperator[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitops:org.parboiled2.support.ActionOps[I,O]):RuleDSLActions.this.ActionOperator[I,O,ops.Out]", "kind" : "implicit def"}, {"label" : "drop", "tail" : "(h: HListable[T]): PopRule[Out]", "member" : "org.parboiled2.RuleDSLActions.drop", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#drop[T](implicith:org.parboiled2.support.HListable[T]):org.parboiled2.PopRule[h.Out]", "kind" : "def"}, {"label" : "push", "tail" : "(value: T)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLActions.push", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#push[T](value:T)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "run", "tail" : "(arg: T)(rr: RunResult[T]): Out", "member" : "org.parboiled2.RuleDSLActions.run", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#run[T](arg:T)(implicitrr:org.parboiled2.support.RunResult[T]):rr.Out", "kind" : "def"}, {"label" : "test", "tail" : "(condition: Boolean): Rule0", "member" : "org.parboiled2.RuleDSLActions.test", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#test(condition:Boolean):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "capture", "tail" : "(r: Rule[I, O])(p: Prepend[O, ::[String, HNil]]): Rule[I, Out]", "member" : "org.parboiled2.RuleDSLActions.capture", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#capture[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitp:shapeless.ops.hlist.Prepend[O,String::shapeless.HNil]):org.parboiled2.Rule[I,p.Out]", "kind" : "def"}, {"label" : "rule2WithSeparatedBy", "tail" : "(r: Rule[I, O] with Repeated): WithSeparatedBy[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.rule2WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#rule2WithSeparatedBy[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]withorg.parboiled2.Repeated):RuleDSLCombinators.this.WithSeparatedBy[I,O]", "kind" : "implicit def"}, {"label" : "range2NTimes", "tail" : "(range: Range): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.range2NTimes", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#range2NTimes(range:Range):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "int2NTimes", "tail" : "(i: Int): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.int2NTimes", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#int2NTimes(i:Int):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "runSubParser", "tail" : "(f: (ParserInput) => Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.runSubParser", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#runSubParser[I<:shapeless.HList,O<:shapeless.HList](f:org.parboiled2.ParserInput=>org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "quiet", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.quiet", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#quiet[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "atomic", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.atomic", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#atomic[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rule[_, _]): Rule0", "member" : "org.parboiled2.RuleDSLCombinators.&", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#&(r:org.parboiled2.Rule[_,_]):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, StrictOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.oneOrMore", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#oneOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.StrictOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, OptionalOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.zeroOrMore", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#zeroOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "optional", "tail" : "(r: Rule[I, O])(l: Lifter[Option, I, O]): Rule[In, OptionalOut]", "member" : "org.parboiled2.RuleDSLCombinators.optional", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#optional[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Option,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]", "kind" : "def"}, {"label" : "str2CharRangeSupport", "tail" : "(s: String): CharRangeSupport", "member" : "org.parboiled2.RuleDSLBasics.str2CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#str2CharRangeSupport(s:String):RuleDSLBasics.this.CharRangeSupport", "kind" : "implicit def"}, {"label" : "failX", "tail" : "(expected: String): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.failX", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#failX[I<:shapeless.HList,O<:shapeless.HList](expected:String):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "fail", "tail" : "(expected: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.fail", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#fail(expected:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MISMATCH", "tail" : "(): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#MISMATCH[I<:shapeless.HList,O<:shapeless.HList]:org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "MISMATCH0", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH0", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#MISMATCH0:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MATCH", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MATCH", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#MATCH:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "EOI", "tail" : "(): Char", "member" : "org.parboiled2.RuleDSLBasics.EOI", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#EOI:Char", "kind" : "def"}, {"label" : "ANY", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ANY", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#ANY:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#ignoreCase(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#ignoreCase(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "noneOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.noneOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#noneOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.anyOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#anyOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T], ignoreCase: Boolean)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#valueMap[T](m:Map[String,T],ignoreCase:Boolean)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T])(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#valueMap[T](m:Map[String,T])(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "implicit def"}, {"label" : "predicate", "tail" : "(p: CharPredicate): Rule0", "member" : "org.parboiled2.RuleDSLBasics.predicate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#predicate(p:org.parboiled2.CharPredicate):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "str", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.str", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#str(s:String):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "ch", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ch", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#ch(c:Char):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(input: String): Either[CornichonError, List[MatcherKey]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.parse", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#parse(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.matchers.MatcherKey]]", "kind" : "def"}, {"label" : "notAllowedInMatchers", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherParser.notAllowedInMatchers", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#notAllowedInMatchers:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParser.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherParsingError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherParsingError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherParsingError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherParsingError.error", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#error:String", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherParsingError.input", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherParsingError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherResolver", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html", "members_object" : [{"label" : "prepareMatchers", "tail" : "(matchers: List[Matcher], expected: Json, actual: Json, negate: Boolean): (Json, Json, List[MatcherAssertion])", "member" : "com.github.agourlay.cornichon.matchers.MatcherResolver.prepareMatchers", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#prepareMatchers(matchers:List[com.github.agourlay.cornichon.matchers.Matcher],expected:io.circe.Json,actual:io.circe.Json,negate:Boolean):(io.circe.Json,io.circe.Json,List[com.github.agourlay.cornichon.matchers.MatcherAssertion])", "kind" : "def"}, {"label" : "quoteMatchers", "tail" : "(input: String, matchersToQuote: List[Matcher]): String", "member" : "com.github.agourlay.cornichon.matchers.MatcherResolver.quoteMatchers", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#quoteMatchers(input:String,matchersToQuote:List[com.github.agourlay.cornichon.matchers.Matcher]):String", "kind" : "def"}, {"label" : "findAllMatchers", "tail" : "(allMatchers: Map[String, List[Matcher]])(input: String): Either[CornichonError, List[Matcher]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherResolver.findAllMatchers", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#findAllMatchers(allMatchers:Map[String,List[com.github.agourlay.cornichon.matchers.Matcher]])(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.matchers.Matcher]]", "kind" : "def"}, {"label" : "resolveMatcherKeys", "tail" : "(allMatchers: Map[String, List[Matcher]])(mk: MatcherKey): Either[CornichonError, Matcher]", "member" : "com.github.agourlay.cornichon.matchers.MatcherResolver.resolveMatcherKeys", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#resolveMatcherKeys(allMatchers:Map[String,List[com.github.agourlay.cornichon.matchers.Matcher]])(mk:com.github.agourlay.cornichon.matchers.MatcherKey):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.matchers.Matcher]", "kind" : "def"}, {"label" : "findMatcherKeys", "tail" : "(input: String): Either[CornichonError, List[MatcherKey]]", "member" : "com.github.agourlay.cornichon.matchers.MatcherResolver.findMatcherKeys", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#findMatcherKeys(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.matchers.MatcherKey]]", "kind" : "def"}, {"label" : "builtInMatchers", "tail" : ": List[Matcher]", "member" : "com.github.agourlay.cornichon.matchers.MatcherResolver.builtInMatchers", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#builtInMatchers:List[com.github.agourlay.cornichon.matchers.Matcher]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.matchers.Matchers", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html", "members_object" : [{"label" : "anyTime", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyTime", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyTime:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyDateTime", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyDateTime", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyDateTime:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyDate", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyDate", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyDate:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyAlphaNum", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyAlphaNum", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyAlphaNum:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyBoolean", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyBoolean", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyBoolean:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyUUID", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyUUID", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyUUID:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyNegativeInteger", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyNegativeInteger", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyNegativeInteger:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyPositiveInteger", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyPositiveInteger", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyPositiveInteger:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyInteger", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyInteger", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyInteger:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyObject", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyObject", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyObject:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyArray", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyArray", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyArray:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "anyString", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.anyString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#anyString:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "isNull", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.isNull", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#isNull:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "isPresent", "tail" : ": Matcher", "member" : "com.github.agourlay.cornichon.matchers.Matchers.isPresent", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#isPresent:com.github.agourlay.cornichon.matchers.Matcher", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/Matchers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.matchers.MatcherUndefined", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherUndefined.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.matchers.MatcherUndefined#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.matchers.MatcherUndefined.name", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/matchers\/MatcherUndefined.html", "kind" : "case class"}], "com.github.agourlay" : [], "com.github.agourlay.cornichon.steps.regular.assertStep" : [{"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "object" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html", "members_object" : [{"label" : "any", "tail" : "(assertions: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.any", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#any(assertions:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "all", "tail" : "(assertions: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.all", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#all(assertions:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "either", "tail" : "(v: Either[CornichonError, Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.either", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#either(v:Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "failWith", "tail" : "(error: CornichonError): Assertion { val validated: cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,Nothing] }", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.failWith", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#failWith(error:com.github.agourlay.cornichon.core.CornichonError):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion{valvalidated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,Nothing]}", "kind" : "def"}, {"label" : "failWith", "tail" : "(error: String): Assertion { val validated: cats.data.ValidatedNel[com.github.agourlay.cornichon.core.BasicError,Nothing] }", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.failWith", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#failWith(error:String):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion{valvalidated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.BasicError,Nothing]}", "kind" : "def"}, {"label" : "alwaysValid", "tail" : ": Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.alwaysValid", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#alwaysValid:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html", "kind" : "trait", "members_trait" : [{"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "validated", "tail" : "(): ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Assertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "shortDescription" : "", "members_case class" : [{"label" : "logOnSuccess", "tail" : "(result: Done, runState: RunState, executionTime: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.logOnSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#logOnSuccess(result:com.github.agourlay.cornichon.core.Done,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "def"}, {"label" : "onError", "tail" : "(errors: NonEmptyList[CornichonError], runState: RunState, executionTime: Duration): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.onError", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#onError(errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "def"}, {"label" : "runLogValueStep", "tail" : "(runState: RunState): Task[Either[NonEmptyList[CornichonError], Done]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.runLogValueStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#runLogValueStep(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[Either[cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],com.github.agourlay.cornichon.core.Done]]", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep#<init>", "error" : "unsupported entity"}, {"label" : "show", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.show", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#show:Boolean", "kind" : "val"}, {"label" : "action", "tail" : ": (ScenarioContext) => Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.action", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#action:com.github.agourlay.cornichon.core.ScenarioContext=>com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#title:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.LogValueStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/AssertStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.BetweenAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.BetweenAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.BetweenAssertion#<init>", "error" : "unsupported entity"}, {"label" : "high", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.BetweenAssertion.high", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#high:A", "kind" : "val"}, {"label" : "inspected", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.BetweenAssertion.inspected", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#inspected:A", "kind" : "val"}, {"label" : "low", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.BetweenAssertion.low", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#low:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/BetweenAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionAssertion", "shortDescription" : "", "members_class" : [{"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionAssertion#<init>", "error" : "unsupported entity"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "validated", "tail" : "(): ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "abstract def"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionAssertion.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertion#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertion.name", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#name:String", "kind" : "val"}, {"label" : "collection", "tail" : ": Iterable[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertion.collection", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#collection:Iterable[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertionError.name", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#name:String", "kind" : "val"}, {"label" : "collection", "tail" : ": Iterable[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionEmptyAssertionError.collection", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#collection:Iterable[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionEmptyAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertion#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertion.name", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#name:String", "kind" : "val"}, {"label" : "collection", "tail" : ": Iterable[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertion.collection", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#collection:Iterable[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertionError.name", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#name:String", "kind" : "val"}, {"label" : "collection", "tail" : ": Iterable[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionNotEmptyAssertionError.collection", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#collection:Iterable[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionNotEmptyAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElements", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElements.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElements#<init>", "error" : "unsupported entity"}, {"label" : "left", "tail" : ": Seq[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElements.left", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#left:Seq[A]", "kind" : "val"}, {"label" : "right", "tail" : ": Seq[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElements.right", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#right:Seq[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElements.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElementsAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElementsAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElementsAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "deleted", "tail" : ": Seq[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElementsAssertionError.deleted", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#deleted:Seq[A]", "kind" : "val"}, {"label" : "added", "tail" : ": Seq[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionsContainSameElementsAssertionError.added", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#added:Seq[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionsContainSameElementsAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertion#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertion.name", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#name:String", "kind" : "val"}, {"label" : "size", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertion.size", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#size:Int", "kind" : "val"}, {"label" : "collection", "tail" : ": Iterable[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertion.collection", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#collection:Iterable[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertionError.name", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#name:String", "kind" : "val"}, {"label" : "size", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertionError.size", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#size:Int", "kind" : "val"}, {"label" : "collection", "tail" : ": Iterable[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CollectionSizeAssertionError.collection", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#collection:Iterable[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CollectionSizeAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "customMessage", "tail" : ": () => String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError.customMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#customMessage:()=>String", "kind" : "val"}, {"label" : "actual", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError.actual", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#actual:A", "kind" : "val"}, {"label" : "expected", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError.expected", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#expected:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion", "shortDescription" : "", "members_case class" : [{"label" : "assertionError", "tail" : ": CustomMessageAssertionError[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion.assertionError", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#assertionError:com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageAssertionError[A]", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion#<init>", "error" : "unsupported entity"}, {"label" : "negate", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion.negate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#negate:Boolean", "kind" : "val"}, {"label" : "customMessage", "tail" : ": () => String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion.customMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#customMessage:()=>String", "kind" : "val"}, {"label" : "actual", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion.actual", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#actual:A", "kind" : "val"}, {"label" : "expected", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.CustomMessageEqualityAssertion.expected", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#expected:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/CustomMessageEqualityAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff", "object" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html", "members_object" : [{"label" : "intFloat", "tail" : ": Diff[Float]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.intFloat", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#intFloat:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Float]", "kind" : "implicit val"}, {"label" : "longDiff", "tail" : ": Diff[Long]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.longDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#longDiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Long]", "kind" : "implicit val"}, {"label" : "doubleDiff", "tail" : ": Diff[Double]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.doubleDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#doubleDiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Double]", "kind" : "implicit val"}, {"label" : "intDiff", "tail" : ": Diff[Int]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.intDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#intDiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Int]", "kind" : "implicit val"}, {"label" : "immutableSetDiff", "tail" : "(arg0: Show[A]): Diff[Set[A]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.immutableSetDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#immutableSetDiff[A](implicitevidence$7:cats.Show[A]):com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Set[A]]", "kind" : "implicit def"}, {"label" : "arrayDiff", "tail" : "(arg0: Show[A]): Diff[Array[A]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.arrayDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#arrayDiff[A](implicitevidence$6:cats.Show[A]):com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Array[A]]", "kind" : "implicit def"}, {"label" : "vectorDiff", "tail" : "(arg0: Show[A]): Diff[Vector[A]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.vectorDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#vectorDiff[A](implicitevidence$5:cats.Show[A]):com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Vector[A]]", "kind" : "implicit def"}, {"label" : "listDiff", "tail" : "(arg0: Show[A]): Diff[List[A]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.listDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#listDiff[A](implicitevidence$4:cats.Show[A]):com.github.agourlay.cornichon.steps.regular.assertStep.Diff[List[A]]", "kind" : "implicit def"}, {"label" : "seqDiff", "tail" : "(arg0: Show[A]): Diff[Seq[A]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.seqDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#seqDiff[A](implicitevidence$3:cats.Show[A]):com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Seq[A]]", "kind" : "implicit def"}, {"label" : "notOrderedCollectionDiff", "tail" : "(left: Set[A], right: Set[A])(arg0: Show[A]): String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.notOrderedCollectionDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#notOrderedCollectionDiff[A](left:Set[A],right:Set[A])(implicitevidence$2:cats.Show[A]):String", "kind" : "def"}, {"label" : "orderedCollectionDiff", "tail" : "(left: Seq[A], right: Seq[A])(arg0: Show[A]): String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.orderedCollectionDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#orderedCollectionDiff[A](left:Seq[A],right:Seq[A])(implicitevidence$1:cats.Show[A]):String", "kind" : "def"}, {"label" : "booleanDiff", "tail" : ": Diff[Boolean]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.booleanDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#booleanDiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[Boolean]", "kind" : "implicit val"}, {"label" : "stringDiff", "tail" : ": Diff[String]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.stringDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#stringDiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[String]", "kind" : "implicit val"}, {"label" : "jsonDiff", "tail" : ": Diff[Json]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.jsonDiff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#jsonDiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[io.circe.Json]", "kind" : "implicit val"}, {"label" : "showJsonPatch", "tail" : ": Show[JsonPatch[Json]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.showJsonPatch", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#showJsonPatch:cats.Show[diffson.jsonpatch.JsonPatch[io.circe.Json]]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(diff: Diff[A]): Diff[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.apply", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#apply[A](implicitdiff:com.github.agourlay.cornichon.steps.regular.assertStep.Diff[A]):com.github.agourlay.cornichon.steps.regular.assertStep.Diff[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "diff", "tail" : "(left: A, right: A): Option[String]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Diff.diff", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/Diff.html#diff(left:A,right:A):Option[String]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion", "shortDescription" : "", "members_class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion#<init>", "error" : "unsupported entity"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "assertionError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.assertionError", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#assertionError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "abstract val"}, {"label" : "negate", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.negate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#negate:Boolean", "kind" : "abstract val"}, {"label" : "actual", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.actual", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#actual:A", "kind" : "abstract val"}, {"label" : "expected", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.expected", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html#expected:A", "kind" : "abstract val"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/EqualityAssertion.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder", "shortDescription" : "", "members_class" : [{"label" : "isBetween", "tail" : "(less: A, greater: A): AssertStep", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder.isBetween", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#isBetween(less:A,greater:A):com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"label" : "isGreaterThan", "tail" : "(greaterThan: A): AssertStep", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder.isGreaterThan", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#isGreaterThan(greaterThan:A):com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"label" : "isLessThan", "tail" : "(lessThan: A): AssertStep", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder.isLessThan", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#isLessThan(lessThan:A):com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"label" : "is", "tail" : "(expected: A): AssertStep", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder.is", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#is(expected:A):com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sessionExtractor", "tail" : "(sc: ScenarioContext): Either[CornichonError, (A, Option[() => String])]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder.sessionExtractor", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#sessionExtractor(sc:com.github.agourlay.cornichon.core.ScenarioContext):Either[com.github.agourlay.cornichon.core.CornichonError,(A,Option[()=>String])]", "kind" : "abstract def"}, {"label" : "baseTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder.baseTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html#baseTitle:String", "kind" : "abstract val"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericAssertStepBuilder.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder", "shortDescription" : "", "members_class" : [{"label" : "isEmpty", "tail" : "(): AssertStep", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder.isEmpty", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#isEmpty:com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"label" : "isNotEmpty", "tail" : "(): AssertStep", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder.isNotEmpty", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#isNotEmpty:com.github.agourlay.cornichon.steps.regular.assertStep.AssertStep", "kind" : "def"}, {"label" : "size", "tail" : "(): GenericAssertStepBuilder[Int]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder.size", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#size:com.github.agourlay.cornichon.steps.regular.assertStep.GenericAssertStepBuilder[Int]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sessionExtractor", "tail" : "(sc: ScenarioContext): Either[CornichonError, Iterable[A]]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder.sessionExtractor", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#sessionExtractor(sc:com.github.agourlay.cornichon.core.ScenarioContext):Either[com.github.agourlay.cornichon.core.CornichonError,Iterable[A]]", "kind" : "abstract def"}, {"label" : "baseTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericCollectionAssertStepBuilder.baseTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html#baseTitle:String", "kind" : "abstract val"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericCollectionAssertStepBuilder.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertion", "shortDescription" : "", "members_case class" : [{"label" : "assertionError", "tail" : ": GenericEqualityAssertionError[A]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertion.assertionError", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#assertionError:com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError[A]", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertion#<init>", "error" : "unsupported entity"}, {"label" : "negate", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertion.negate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#negate:Boolean", "kind" : "val"}, {"label" : "actual", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertion.actual", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#actual:A", "kind" : "val"}, {"label" : "expected", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertion.expected", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#expected:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.EqualityAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "negate", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError.negate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#negate:Boolean", "kind" : "val"}, {"label" : "actual", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError.actual", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#actual:A", "kind" : "val"}, {"label" : "expected", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GenericEqualityAssertionError.expected", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#expected:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GenericEqualityAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertion#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertion.right", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#right:A", "kind" : "val"}, {"label" : "left", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertion.left", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#left:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertionError.right", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#right:A", "kind" : "val"}, {"label" : "left", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.GreaterThanAssertionError.left", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#left:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/GreaterThanAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertion#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertion.right", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#right:A", "kind" : "val"}, {"label" : "left", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertion.left", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#left:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertionError.right", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#right:A", "kind" : "val"}, {"label" : "left", "tail" : ": A", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.LessThanAssertionError.left", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#left:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/LessThanAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.OrderAssertion", "shortDescription" : "", "members_class" : [{"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.OrderAssertion#<init>", "error" : "unsupported entity"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "validated", "tail" : "(): ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "abstract def"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/OrderAssertion.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertion#<init>", "error" : "unsupported entity"}, {"label" : "expectedRegex", "tail" : ": Regex", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertion.expectedRegex", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#expectedRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertion.input", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#baseErrorMessage:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "expectedRegex", "tail" : ": Regex", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertionError.expectedRegex", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#expectedRegex:scala.util.matching.Regex", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.RegexAssertionError.input", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/RegexAssertionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringAssertion", "shortDescription" : "", "members_class" : [{"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringAssertion#<init>", "error" : "unsupported entity"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "validated", "tail" : "(): ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "abstract def"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringAssertion.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertion", "shortDescription" : "", "members_case class" : [{"label" : "validated", "tail" : ": ValidatedNel[CornichonError, Done]", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertion.validated", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#validated:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Done]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertion#<init>", "error" : "unsupported entity"}, {"label" : "expectedPart", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertion.expectedPart", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#expectedPart:String", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertion.input", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "or", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.or", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#or(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "andAll", "tail" : "(others: Seq[Assertion]): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.andAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#andAll(others:Seq[com.github.agourlay.cornichon.steps.regular.assertStep.Assertion]):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "and", "tail" : "(other: Assertion): Assertion", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.Assertion.and", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#and(other:com.github.agourlay.cornichon.steps.regular.assertStep.Assertion):com.github.agourlay.cornichon.steps.regular.assertStep.Assertion", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertion.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#baseErrorMessage:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertionError#<init>", "error" : "unsupported entity"}, {"label" : "expectedPart", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertionError.expectedPart", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#expectedPart:String", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.assertStep.StringContainsAssertionError.input", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/assertStep\/StringContainsAssertionError.html", "kind" : "case class"}], "com.github.agourlay.cornichon.http.server" : [{"name" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html", "members_object" : [{"label" : "SessionKeys", "tail" : "", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.SessionKeys", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#SessionKeys", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "requestsResults", "tail" : "(mockRequestHandler: MockServerRequestHandler): Session", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.requestsResults", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#requestsResults(mockRequestHandler:com.github.agourlay.cornichon.http.server.MockServerRequestHandler):com.github.agourlay.cornichon.core.Session", "kind" : "def"}, {"label" : "use", "tail" : "(outsideRunState: RunState)(f: (RunState) => Task[A]): Task[(Session, A)]", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.use", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#use[A](outsideRunState:com.github.agourlay.cornichon.core.RunState)(f:com.github.agourlay.cornichon.core.RunState=>monix.eval.Task[A]):monix.eval.Task[(com.github.agourlay.cornichon.core.Session,A)]", "kind" : "def"}, {"label" : "closingTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.closingTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#closingTitle:String", "kind" : "val"}, {"label" : "openingTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.openingTitle", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#openingTitle:String", "kind" : "val"}, {"label" : "sessionTarget", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.sessionTarget", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#sessionTarget:String", "kind" : "val"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.scheduler", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#scheduler:monix.execution.Scheduler", "kind" : "implicit val"}, {"member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource#<init>", "error" : "unsupported entity"}, {"label" : "maxPortBindingRetries", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.maxPortBindingRetries", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#maxPortBindingRetries:Int", "kind" : "val"}, {"label" : "portRange", "tail" : ": Option[Range]", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.portRange", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#portRange:Option[Range]", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.label", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#label:String", "kind" : "val"}, {"label" : "interface", "tail" : ": Option[String]", "member" : "com.github.agourlay.cornichon.http.server.HttpMockServerResource.interface", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#interface:Option[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/server\/HttpMockServerResource.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.server.MockHttpServer", "shortDescription" : "", "members_class" : [{"label" : "useServer", "tail" : "(): Task[A]", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServer.useServer", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#useServer():monix.eval.Task[A]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.server.MockHttpServer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServer.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.http.server.MockHttpServerError", "case object" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html", "shortDescription" : "", "members_case object" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#baseErrorMessage:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerError$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#baseErrorMessage:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError#<init>", "error" : "unsupported entity"}, {"label" : "interface", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError.interface", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#interface:String", "kind" : "val"}, {"label" : "maxPortBindingRetries", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError.maxPortBindingRetries", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#maxPortBindingRetries:Int", "kind" : "val"}, {"label" : "label", "tail" : ": String", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError.label", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#label:String", "kind" : "val"}, {"label" : "e", "tail" : ": Exception", "member" : "com.github.agourlay.cornichon.http.server.MockHttpServerStartError.e", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#e:Exception", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/http\/server\/MockHttpServerStartError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler", "shortDescription" : "", "members_class" : [{"label" : "saveRequest", "tail" : "(rawReq: Request[Task]): Task[Boolean]", "member" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler.saveRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#saveRequest(rawReq:org.http4s.Request[monix.eval.Task]):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "httpMethodMapper", "tail" : "(method: Method): HttpMethod", "member" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler.httpMethodMapper", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#httpMethodMapper(method:org.http4s.Method):com.github.agourlay.cornichon.http.HttpMethod", "kind" : "def"}, {"label" : "replyWithDelay", "tail" : "(t: Task[Response[Task]]): Task[Response[Task]]", "member" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler.replyWithDelay", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#replyWithDelay(t:monix.eval.Task[org.http4s.Response[monix.eval.Task]]):monix.eval.Task[org.http4s.Response[monix.eval.Task]]", "kind" : "def"}, {"label" : "mockService", "tail" : ": HttpRoutes[Task]", "member" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler.mockService", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#mockService:org.http4s.HttpRoutes[monix.eval.Task]", "kind" : "val"}, {"label" : "fetchRecordedRequestsAsJson", "tail" : "(): Vector[Json]", "member" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler.fetchRecordedRequestsAsJson", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#fetchRecordedRequestsAsJson():Vector[io.circe.Json]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.server.MockServerRequestHandler#<init>", "error" : "unsupported entity"}, {"label" : "liftG", "tail" : ": FunctionK[Task, Task]", "member" : "org.http4s.dsl.Http4sDsl.liftG", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#liftG:cats.arrow.FunctionK[F,F]", "kind" : "val"}, {"label" : "UUIDVar", "tail" : ": org.http4s.dsl.impl.UUIDVar.type", "member" : "org.http4s.dsl.Http4sDsl2.UUIDVar", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UUIDVar:org.http4s.dsl.impl.UUIDVar.type", "kind" : "val"}, {"label" : "LongVar", "tail" : ": org.http4s.dsl.impl.LongVar.type", "member" : "org.http4s.dsl.Http4sDsl2.LongVar", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#LongVar:org.http4s.dsl.impl.LongVar.type", "kind" : "val"}, {"label" : "IntVar", "tail" : ": org.http4s.dsl.impl.IntVar.type", "member" : "org.http4s.dsl.Http4sDsl2.IntVar", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#IntVar:org.http4s.dsl.impl.IntVar.type", "kind" : "val"}, {"label" : "→", "tail" : ": org.http4s.dsl.impl.->.type", "member" : "org.http4s.dsl.Http4sDsl2.→", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#→:org.http4s.dsl.impl.->.type", "kind" : "val"}, {"label" : "+&", "tail" : ": org.http4s.dsl.impl.+&.type", "member" : "org.http4s.dsl.Http4sDsl2.+&", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#+&:org.http4s.dsl.impl.+&.type", "kind" : "val"}, {"label" : "\/:", "tail" : ": org.http4s.dsl.impl.\/:.type", "member" : "org.http4s.dsl.Http4sDsl2.\/:", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#\/::org.http4s.dsl.impl.\/:.type", "kind" : "val"}, {"label" : "->", "tail" : ": org.http4s.dsl.impl.->.type", "member" : "org.http4s.dsl.Http4sDsl2.->", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#->:org.http4s.dsl.impl.->.type", "kind" : "val"}, {"label" : "~", "tail" : ": org.http4s.dsl.impl.~.type", "member" : "org.http4s.dsl.Http4sDsl2.~", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#~:org.http4s.dsl.impl.~.type", "kind" : "val"}, {"label" : ":?", "tail" : ": org.http4s.dsl.impl.:?.type", "member" : "org.http4s.dsl.Http4sDsl2.:?", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#:?:org.http4s.dsl.impl.:?.type", "kind" : "val"}, {"label" : "\/", "tail" : ": org.http4s.dsl.impl.\/.type", "member" : "org.http4s.dsl.Http4sDsl2.\/", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#\/:org.http4s.dsl.impl.\/.type", "kind" : "val"}, {"label" : "Root", "tail" : ": org.http4s.dsl.impl.Root.type", "member" : "org.http4s.dsl.Http4sDsl2.Root", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Root:org.http4s.dsl.impl.Root.type", "kind" : "val"}, {"label" : "Path", "tail" : ": org.http4s.dsl.impl.Path.type", "member" : "org.http4s.dsl.Http4sDsl2.Path", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Path:org.http4s.dsl.impl.Path.type", "kind" : "val"}, {"label" : "http4sNetworkAuthenticationRequiredSyntax", "tail" : "(status: org.http4s.Status.NetworkAuthenticationRequired.type): NetworkAuthenticationRequiredOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNetworkAuthenticationRequiredSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNetworkAuthenticationRequiredSyntax(status:org.http4s.Status.NetworkAuthenticationRequired.type):org.http4s.dsl.impl.Responses.NetworkAuthenticationRequiredOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNotExtendedSyntax", "tail" : "(status: org.http4s.Status.NotExtended.type): NotExtendedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNotExtendedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNotExtendedSyntax(status:org.http4s.Status.NotExtended.type):org.http4s.dsl.impl.Responses.NotExtendedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sLoopDetectedSyntax", "tail" : "(status: org.http4s.Status.LoopDetected.type): LoopDetectedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sLoopDetectedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sLoopDetectedSyntax(status:org.http4s.Status.LoopDetected.type):org.http4s.dsl.impl.Responses.LoopDetectedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sInsufficientStorageSyntax", "tail" : "(status: org.http4s.Status.InsufficientStorage.type): InsufficientStorageOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sInsufficientStorageSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sInsufficientStorageSyntax(status:org.http4s.Status.InsufficientStorage.type):org.http4s.dsl.impl.Responses.InsufficientStorageOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sVariantAlsoNegotiatesSyntax", "tail" : "(status: org.http4s.Status.VariantAlsoNegotiates.type): VariantAlsoNegotiatesOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sVariantAlsoNegotiatesSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sVariantAlsoNegotiatesSyntax(status:org.http4s.Status.VariantAlsoNegotiates.type):org.http4s.dsl.impl.Responses.VariantAlsoNegotiatesOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sHttpVersionNotSupportedSyntax", "tail" : "(status: org.http4s.Status.HttpVersionNotSupported.type): HttpVersionNotSupportedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sHttpVersionNotSupportedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sHttpVersionNotSupportedSyntax(status:org.http4s.Status.HttpVersionNotSupported.type):org.http4s.dsl.impl.Responses.HttpVersionNotSupportedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sGatewayTimeoutSyntax", "tail" : "(status: org.http4s.Status.GatewayTimeout.type): GatewayTimeoutOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sGatewayTimeoutSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sGatewayTimeoutSyntax(status:org.http4s.Status.GatewayTimeout.type):org.http4s.dsl.impl.Responses.GatewayTimeoutOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sServiceUnavailableSyntax", "tail" : "(status: org.http4s.Status.ServiceUnavailable.type): ServiceUnavailableOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sServiceUnavailableSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sServiceUnavailableSyntax(status:org.http4s.Status.ServiceUnavailable.type):org.http4s.dsl.impl.Responses.ServiceUnavailableOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sBadGatewaySyntax", "tail" : "(status: org.http4s.Status.BadGateway.type): BadGatewayOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sBadGatewaySyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sBadGatewaySyntax(status:org.http4s.Status.BadGateway.type):org.http4s.dsl.impl.Responses.BadGatewayOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNotImplementedSyntax", "tail" : "(status: org.http4s.Status.NotImplemented.type): NotImplementedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNotImplementedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNotImplementedSyntax(status:org.http4s.Status.NotImplemented.type):org.http4s.dsl.impl.Responses.NotImplementedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sInternalServerErrorSyntax", "tail" : "(status: org.http4s.Status.InternalServerError.type): InternalServerErrorOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sInternalServerErrorSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sInternalServerErrorSyntax(status:org.http4s.Status.InternalServerError.type):org.http4s.dsl.impl.Responses.InternalServerErrorOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sUnavailableForLegalReasonsSyntax", "tail" : "(status: org.http4s.Status.UnavailableForLegalReasons.type): UnavailableForLegalReasonsOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sUnavailableForLegalReasonsSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sUnavailableForLegalReasonsSyntax(status:org.http4s.Status.UnavailableForLegalReasons.type):org.http4s.dsl.impl.Responses.UnavailableForLegalReasonsOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sRequestHeaderFieldsTooLargeSyntax", "tail" : "(status: org.http4s.Status.RequestHeaderFieldsTooLarge.type): RequestHeaderFieldsTooLargeOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sRequestHeaderFieldsTooLargeSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sRequestHeaderFieldsTooLargeSyntax(status:org.http4s.Status.RequestHeaderFieldsTooLarge.type):org.http4s.dsl.impl.Responses.RequestHeaderFieldsTooLargeOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sTooManyRequestsSyntax", "tail" : "(status: org.http4s.Status.TooManyRequests.type): TooManyRequestsOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sTooManyRequestsSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sTooManyRequestsSyntax(status:org.http4s.Status.TooManyRequests.type):org.http4s.dsl.impl.Responses.TooManyRequestsOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sPreconditionRequiredSyntax", "tail" : "(status: org.http4s.Status.PreconditionRequired.type): PreconditionRequiredOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sPreconditionRequiredSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sPreconditionRequiredSyntax(status:org.http4s.Status.PreconditionRequired.type):org.http4s.dsl.impl.Responses.PreconditionRequiredOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sUpgradeRequiredSyntax", "tail" : "(status: org.http4s.Status.UpgradeRequired.type): UpgradeRequiredOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sUpgradeRequiredSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sUpgradeRequiredSyntax(status:org.http4s.Status.UpgradeRequired.type):org.http4s.dsl.impl.Responses.UpgradeRequiredOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sTooEarlySyntax", "tail" : "(status: TooEarly.type): TooEarlyOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sTooEarlySyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sTooEarlySyntax(status:org.http4s.Status.TooEarly.type):org.http4s.dsl.impl.Responses.TooEarlyOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sFailedDependencySyntax", "tail" : "(status: org.http4s.Status.FailedDependency.type): FailedDependencyOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sFailedDependencySyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sFailedDependencySyntax(status:org.http4s.Status.FailedDependency.type):org.http4s.dsl.impl.Responses.FailedDependencyOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sLockedSyntax", "tail" : "(status: org.http4s.Status.Locked.type): LockedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sLockedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sLockedSyntax(status:org.http4s.Status.Locked.type):org.http4s.dsl.impl.Responses.LockedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sUnprocessableEntitySyntax", "tail" : "(status: org.http4s.Status.UnprocessableEntity.type): UnprocessableEntityOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sUnprocessableEntitySyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sUnprocessableEntitySyntax(status:org.http4s.Status.UnprocessableEntity.type):org.http4s.dsl.impl.Responses.UnprocessableEntityOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sMisdirectedRequestSyntax", "tail" : "(status: MisdirectedRequest.type): MisdirectedRequestOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sMisdirectedRequestSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMisdirectedRequestSyntax(status:org.http4s.Status.MisdirectedRequest.type):org.http4s.dsl.impl.Responses.MisdirectedRequestOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sExpectationFailedSyntax", "tail" : "(status: org.http4s.Status.ExpectationFailed.type): ExpectationFailedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sExpectationFailedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sExpectationFailedSyntax(status:org.http4s.Status.ExpectationFailed.type):org.http4s.dsl.impl.Responses.ExpectationFailedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sRangeNotSatisfiableSyntax", "tail" : "(status: org.http4s.Status.RangeNotSatisfiable.type): RangeNotSatisfiableOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sRangeNotSatisfiableSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sRangeNotSatisfiableSyntax(status:org.http4s.Status.RangeNotSatisfiable.type):org.http4s.dsl.impl.Responses.RangeNotSatisfiableOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sUnsupportedMediaTypeSyntax", "tail" : "(status: org.http4s.Status.UnsupportedMediaType.type): UnsupportedMediaTypeOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sUnsupportedMediaTypeSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sUnsupportedMediaTypeSyntax(status:org.http4s.Status.UnsupportedMediaType.type):org.http4s.dsl.impl.Responses.UnsupportedMediaTypeOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sUriTooLongSyntax", "tail" : "(status: org.http4s.Status.UriTooLong.type): UriTooLongOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sUriTooLongSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sUriTooLongSyntax(status:org.http4s.Status.UriTooLong.type):org.http4s.dsl.impl.Responses.UriTooLongOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sPayloadTooLargeSyntax", "tail" : "(status: org.http4s.Status.PayloadTooLarge.type): PayloadTooLargeOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sPayloadTooLargeSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sPayloadTooLargeSyntax(status:org.http4s.Status.PayloadTooLarge.type):org.http4s.dsl.impl.Responses.PayloadTooLargeOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sPreconditionFailedSyntax", "tail" : "(status: org.http4s.Status.PreconditionFailed.type): PreconditionFailedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sPreconditionFailedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sPreconditionFailedSyntax(status:org.http4s.Status.PreconditionFailed.type):org.http4s.dsl.impl.Responses.PreconditionFailedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sLengthRequiredSyntax", "tail" : "(status: org.http4s.Status.LengthRequired.type): LengthRequiredOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sLengthRequiredSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sLengthRequiredSyntax(status:org.http4s.Status.LengthRequired.type):org.http4s.dsl.impl.Responses.LengthRequiredOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sGoneSyntax", "tail" : "(status: org.http4s.Status.Gone.type): GoneOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sGoneSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sGoneSyntax(status:org.http4s.Status.Gone.type):org.http4s.dsl.impl.Responses.GoneOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sConflictSyntax", "tail" : "(status: org.http4s.Status.Conflict.type): ConflictOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sConflictSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sConflictSyntax(status:org.http4s.Status.Conflict.type):org.http4s.dsl.impl.Responses.ConflictOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sRequestTimeoutSyntax", "tail" : "(status: org.http4s.Status.RequestTimeout.type): RequestTimeoutOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sRequestTimeoutSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sRequestTimeoutSyntax(status:org.http4s.Status.RequestTimeout.type):org.http4s.dsl.impl.Responses.RequestTimeoutOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sProxyAuthenticationRequiredSyntax", "tail" : "(status: org.http4s.Status.ProxyAuthenticationRequired.type): ProxyAuthenticationRequiredOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sProxyAuthenticationRequiredSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sProxyAuthenticationRequiredSyntax(status:org.http4s.Status.ProxyAuthenticationRequired.type):org.http4s.dsl.impl.Responses.ProxyAuthenticationRequiredOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNotAcceptableSyntax", "tail" : "(status: org.http4s.Status.NotAcceptable.type): NotAcceptableOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNotAcceptableSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNotAcceptableSyntax(status:org.http4s.Status.NotAcceptable.type):org.http4s.dsl.impl.Responses.NotAcceptableOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sMethodNotAllowedSyntax", "tail" : "(status: org.http4s.Status.MethodNotAllowed.type): MethodNotAllowedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sMethodNotAllowedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMethodNotAllowedSyntax(status:org.http4s.Status.MethodNotAllowed.type):org.http4s.dsl.impl.Responses.MethodNotAllowedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNotFoundSyntax", "tail" : "(status: org.http4s.Status.NotFound.type): NotFoundOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNotFoundSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNotFoundSyntax(status:org.http4s.Status.NotFound.type):org.http4s.dsl.impl.Responses.NotFoundOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sForbiddenSyntax", "tail" : "(status: org.http4s.Status.Forbidden.type): ForbiddenOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sForbiddenSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sForbiddenSyntax(status:org.http4s.Status.Forbidden.type):org.http4s.dsl.impl.Responses.ForbiddenOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sPaymentRequiredSyntax", "tail" : "(status: org.http4s.Status.PaymentRequired.type): PaymentRequiredOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sPaymentRequiredSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sPaymentRequiredSyntax(status:org.http4s.Status.PaymentRequired.type):org.http4s.dsl.impl.Responses.PaymentRequiredOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sUnauthorizedSyntax", "tail" : "(status: org.http4s.Status.Unauthorized.type): UnauthorizedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sUnauthorizedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sUnauthorizedSyntax(status:org.http4s.Status.Unauthorized.type):org.http4s.dsl.impl.Responses.UnauthorizedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sBadRequestSyntax", "tail" : "(status: org.http4s.Status.BadRequest.type): BadRequestOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sBadRequestSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sBadRequestSyntax(status:org.http4s.Status.BadRequest.type):org.http4s.dsl.impl.Responses.BadRequestOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sPermanentRedirectSyntax", "tail" : "(status: org.http4s.Status.PermanentRedirect.type): PermanentRedirectOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sPermanentRedirectSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sPermanentRedirectSyntax(status:org.http4s.Status.PermanentRedirect.type):org.http4s.dsl.impl.Responses.PermanentRedirectOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sTemporaryRedirectSyntax", "tail" : "(status: org.http4s.Status.TemporaryRedirect.type): TemporaryRedirectOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sTemporaryRedirectSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sTemporaryRedirectSyntax(status:org.http4s.Status.TemporaryRedirect.type):org.http4s.dsl.impl.Responses.TemporaryRedirectOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNotModifiedSyntax", "tail" : "(status: org.http4s.Status.NotModified.type): NotModifiedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNotModifiedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNotModifiedSyntax(status:org.http4s.Status.NotModified.type):org.http4s.dsl.impl.Responses.NotModifiedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sSeeOtherSyntax", "tail" : "(status: org.http4s.Status.SeeOther.type): SeeOtherOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sSeeOtherSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sSeeOtherSyntax(status:org.http4s.Status.SeeOther.type):org.http4s.dsl.impl.Responses.SeeOtherOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sFoundSyntax", "tail" : "(status: org.http4s.Status.Found.type): FoundOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sFoundSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sFoundSyntax(status:org.http4s.Status.Found.type):org.http4s.dsl.impl.Responses.FoundOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sMovedPermanentlySyntax", "tail" : "(status: org.http4s.Status.MovedPermanently.type): MovedPermanentlyOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sMovedPermanentlySyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMovedPermanentlySyntax(status:org.http4s.Status.MovedPermanently.type):org.http4s.dsl.impl.Responses.MovedPermanentlyOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sMultipleChoicesSyntax", "tail" : "(status: org.http4s.Status.MultipleChoices.type): MultipleChoicesOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sMultipleChoicesSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMultipleChoicesSyntax(status:org.http4s.Status.MultipleChoices.type):org.http4s.dsl.impl.Responses.MultipleChoicesOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sIMUsedSyntax", "tail" : "(status: org.http4s.Status.IMUsed.type): IMUsedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sIMUsedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sIMUsedSyntax(status:org.http4s.Status.IMUsed.type):org.http4s.dsl.impl.Responses.IMUsedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sAlreadyReportedSyntax", "tail" : "(status: org.http4s.Status.AlreadyReported.type): AlreadyReportedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sAlreadyReportedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sAlreadyReportedSyntax(status:org.http4s.Status.AlreadyReported.type):org.http4s.dsl.impl.Responses.AlreadyReportedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sMultiStatusSyntax", "tail" : "(status: org.http4s.Status.MultiStatus.type): MultiStatusOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sMultiStatusSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMultiStatusSyntax(status:org.http4s.Status.MultiStatus.type):org.http4s.dsl.impl.Responses.MultiStatusOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sPartialContentSyntax", "tail" : "(status: org.http4s.Status.PartialContent.type): PartialContentOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sPartialContentSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sPartialContentSyntax(status:org.http4s.Status.PartialContent.type):org.http4s.dsl.impl.Responses.PartialContentOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sResetContentSyntax", "tail" : "(status: org.http4s.Status.ResetContent.type): ResetContentOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sResetContentSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sResetContentSyntax(status:org.http4s.Status.ResetContent.type):org.http4s.dsl.impl.Responses.ResetContentOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNoContentSyntax", "tail" : "(status: org.http4s.Status.NoContent.type): NoContentOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNoContentSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNoContentSyntax(status:org.http4s.Status.NoContent.type):org.http4s.dsl.impl.Responses.NoContentOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sNonAuthoritativeInformationSyntax", "tail" : "(status: org.http4s.Status.NonAuthoritativeInformation.type): NonAuthoritativeInformationOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sNonAuthoritativeInformationSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sNonAuthoritativeInformationSyntax(status:org.http4s.Status.NonAuthoritativeInformation.type):org.http4s.dsl.impl.Responses.NonAuthoritativeInformationOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sAcceptedSyntax", "tail" : "(status: org.http4s.Status.Accepted.type): AcceptedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sAcceptedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sAcceptedSyntax(status:org.http4s.Status.Accepted.type):org.http4s.dsl.impl.Responses.AcceptedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sCreatedSyntax", "tail" : "(status: org.http4s.Status.Created.type): CreatedOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sCreatedSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sCreatedSyntax(status:org.http4s.Status.Created.type):org.http4s.dsl.impl.Responses.CreatedOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sOkSyntax", "tail" : "(status: org.http4s.Status.Ok.type): OkOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sOkSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sOkSyntax(status:org.http4s.Status.Ok.type):org.http4s.dsl.impl.Responses.OkOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sEarlyHintsSyntax", "tail" : "(status: EarlyHints.type): EarlyHintsOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sEarlyHintsSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sEarlyHintsSyntax(status:org.http4s.Status.EarlyHints.type):org.http4s.dsl.impl.Responses.EarlyHintsOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sSwitchingProtocolsSyntax", "tail" : "(status: org.http4s.Status.SwitchingProtocols.type): SwitchingProtocolsOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sSwitchingProtocolsSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sSwitchingProtocolsSyntax(status:org.http4s.Status.SwitchingProtocols.type):org.http4s.dsl.impl.Responses.SwitchingProtocolsOps[F,G]", "kind" : "implicit def"}, {"label" : "http4sContinueSyntax", "tail" : "(status: org.http4s.Status.Continue.type): ContinueOps[Task, Task]", "member" : "org.http4s.dsl.impl.Responses.http4sContinueSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sContinueSyntax(status:org.http4s.Status.Continue.type):org.http4s.dsl.impl.Responses.ContinueOps[F,G]", "kind" : "implicit def"}, {"label" : "NetworkAuthenticationRequired", "tail" : ": org.http4s.Status.NetworkAuthenticationRequired.type", "member" : "org.http4s.dsl.impl.Statuses.NetworkAuthenticationRequired", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NetworkAuthenticationRequired:org.http4s.Status.NetworkAuthenticationRequired.type", "kind" : "val"}, {"label" : "NotExtended", "tail" : ": org.http4s.Status.NotExtended.type", "member" : "org.http4s.dsl.impl.Statuses.NotExtended", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NotExtended:org.http4s.Status.NotExtended.type", "kind" : "val"}, {"label" : "LoopDetected", "tail" : ": org.http4s.Status.LoopDetected.type", "member" : "org.http4s.dsl.impl.Statuses.LoopDetected", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#LoopDetected:org.http4s.Status.LoopDetected.type", "kind" : "val"}, {"label" : "InsufficientStorage", "tail" : ": org.http4s.Status.InsufficientStorage.type", "member" : "org.http4s.dsl.impl.Statuses.InsufficientStorage", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#InsufficientStorage:org.http4s.Status.InsufficientStorage.type", "kind" : "val"}, {"label" : "VariantAlsoNegotiates", "tail" : ": org.http4s.Status.VariantAlsoNegotiates.type", "member" : "org.http4s.dsl.impl.Statuses.VariantAlsoNegotiates", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#VariantAlsoNegotiates:org.http4s.Status.VariantAlsoNegotiates.type", "kind" : "val"}, {"label" : "HttpVersionNotSupported", "tail" : ": org.http4s.Status.HttpVersionNotSupported.type", "member" : "org.http4s.dsl.impl.Statuses.HttpVersionNotSupported", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#HttpVersionNotSupported:org.http4s.Status.HttpVersionNotSupported.type", "kind" : "val"}, {"label" : "GatewayTimeout", "tail" : ": org.http4s.Status.GatewayTimeout.type", "member" : "org.http4s.dsl.impl.Statuses.GatewayTimeout", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#GatewayTimeout:org.http4s.Status.GatewayTimeout.type", "kind" : "val"}, {"label" : "ServiceUnavailable", "tail" : ": org.http4s.Status.ServiceUnavailable.type", "member" : "org.http4s.dsl.impl.Statuses.ServiceUnavailable", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#ServiceUnavailable:org.http4s.Status.ServiceUnavailable.type", "kind" : "val"}, {"label" : "BadGateway", "tail" : ": org.http4s.Status.BadGateway.type", "member" : "org.http4s.dsl.impl.Statuses.BadGateway", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#BadGateway:org.http4s.Status.BadGateway.type", "kind" : "val"}, {"label" : "NotImplemented", "tail" : ": org.http4s.Status.NotImplemented.type", "member" : "org.http4s.dsl.impl.Statuses.NotImplemented", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NotImplemented:org.http4s.Status.NotImplemented.type", "kind" : "val"}, {"label" : "InternalServerError", "tail" : ": org.http4s.Status.InternalServerError.type", "member" : "org.http4s.dsl.impl.Statuses.InternalServerError", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#InternalServerError:org.http4s.Status.InternalServerError.type", "kind" : "val"}, {"label" : "UnavailableForLegalReasons", "tail" : ": org.http4s.Status.UnavailableForLegalReasons.type", "member" : "org.http4s.dsl.impl.Statuses.UnavailableForLegalReasons", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UnavailableForLegalReasons:org.http4s.Status.UnavailableForLegalReasons.type", "kind" : "val"}, {"label" : "RequestHeaderFieldsTooLarge", "tail" : ": org.http4s.Status.RequestHeaderFieldsTooLarge.type", "member" : "org.http4s.dsl.impl.Statuses.RequestHeaderFieldsTooLarge", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#RequestHeaderFieldsTooLarge:org.http4s.Status.RequestHeaderFieldsTooLarge.type", "kind" : "val"}, {"label" : "TooManyRequests", "tail" : ": org.http4s.Status.TooManyRequests.type", "member" : "org.http4s.dsl.impl.Statuses.TooManyRequests", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#TooManyRequests:org.http4s.Status.TooManyRequests.type", "kind" : "val"}, {"label" : "PreconditionRequired", "tail" : ": org.http4s.Status.PreconditionRequired.type", "member" : "org.http4s.dsl.impl.Statuses.PreconditionRequired", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PreconditionRequired:org.http4s.Status.PreconditionRequired.type", "kind" : "val"}, {"label" : "UpgradeRequired", "tail" : ": org.http4s.Status.UpgradeRequired.type", "member" : "org.http4s.dsl.impl.Statuses.UpgradeRequired", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UpgradeRequired:org.http4s.Status.UpgradeRequired.type", "kind" : "val"}, {"label" : "FailedDependency", "tail" : ": org.http4s.Status.FailedDependency.type", "member" : "org.http4s.dsl.impl.Statuses.FailedDependency", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#FailedDependency:org.http4s.Status.FailedDependency.type", "kind" : "val"}, {"label" : "Locked", "tail" : ": org.http4s.Status.Locked.type", "member" : "org.http4s.dsl.impl.Statuses.Locked", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Locked:org.http4s.Status.Locked.type", "kind" : "val"}, {"label" : "UnprocessableEntity", "tail" : ": org.http4s.Status.UnprocessableEntity.type", "member" : "org.http4s.dsl.impl.Statuses.UnprocessableEntity", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UnprocessableEntity:org.http4s.Status.UnprocessableEntity.type", "kind" : "val"}, {"label" : "ExpectationFailed", "tail" : ": org.http4s.Status.ExpectationFailed.type", "member" : "org.http4s.dsl.impl.Statuses.ExpectationFailed", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#ExpectationFailed:org.http4s.Status.ExpectationFailed.type", "kind" : "val"}, {"label" : "RangeNotSatisfiable", "tail" : ": org.http4s.Status.RangeNotSatisfiable.type", "member" : "org.http4s.dsl.impl.Statuses.RangeNotSatisfiable", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#RangeNotSatisfiable:org.http4s.Status.RangeNotSatisfiable.type", "kind" : "val"}, {"label" : "UnsupportedMediaType", "tail" : ": org.http4s.Status.UnsupportedMediaType.type", "member" : "org.http4s.dsl.impl.Statuses.UnsupportedMediaType", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UnsupportedMediaType:org.http4s.Status.UnsupportedMediaType.type", "kind" : "val"}, {"label" : "UriTooLong", "tail" : ": org.http4s.Status.UriTooLong.type", "member" : "org.http4s.dsl.impl.Statuses.UriTooLong", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UriTooLong:org.http4s.Status.UriTooLong.type", "kind" : "val"}, {"label" : "PayloadTooLarge", "tail" : ": org.http4s.Status.PayloadTooLarge.type", "member" : "org.http4s.dsl.impl.Statuses.PayloadTooLarge", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PayloadTooLarge:org.http4s.Status.PayloadTooLarge.type", "kind" : "val"}, {"label" : "PreconditionFailed", "tail" : ": org.http4s.Status.PreconditionFailed.type", "member" : "org.http4s.dsl.impl.Statuses.PreconditionFailed", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PreconditionFailed:org.http4s.Status.PreconditionFailed.type", "kind" : "val"}, {"label" : "LengthRequired", "tail" : ": org.http4s.Status.LengthRequired.type", "member" : "org.http4s.dsl.impl.Statuses.LengthRequired", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#LengthRequired:org.http4s.Status.LengthRequired.type", "kind" : "val"}, {"label" : "Gone", "tail" : ": org.http4s.Status.Gone.type", "member" : "org.http4s.dsl.impl.Statuses.Gone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Gone:org.http4s.Status.Gone.type", "kind" : "val"}, {"label" : "Conflict", "tail" : ": org.http4s.Status.Conflict.type", "member" : "org.http4s.dsl.impl.Statuses.Conflict", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Conflict:org.http4s.Status.Conflict.type", "kind" : "val"}, {"label" : "RequestTimeout", "tail" : ": org.http4s.Status.RequestTimeout.type", "member" : "org.http4s.dsl.impl.Statuses.RequestTimeout", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#RequestTimeout:org.http4s.Status.RequestTimeout.type", "kind" : "val"}, {"label" : "ProxyAuthenticationRequired", "tail" : ": org.http4s.Status.ProxyAuthenticationRequired.type", "member" : "org.http4s.dsl.impl.Statuses.ProxyAuthenticationRequired", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#ProxyAuthenticationRequired:org.http4s.Status.ProxyAuthenticationRequired.type", "kind" : "val"}, {"label" : "NotAcceptable", "tail" : ": org.http4s.Status.NotAcceptable.type", "member" : "org.http4s.dsl.impl.Statuses.NotAcceptable", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NotAcceptable:org.http4s.Status.NotAcceptable.type", "kind" : "val"}, {"label" : "MethodNotAllowed", "tail" : ": org.http4s.Status.MethodNotAllowed.type", "member" : "org.http4s.dsl.impl.Statuses.MethodNotAllowed", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#MethodNotAllowed:org.http4s.Status.MethodNotAllowed.type", "kind" : "val"}, {"label" : "NotFound", "tail" : ": org.http4s.Status.NotFound.type", "member" : "org.http4s.dsl.impl.Statuses.NotFound", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NotFound:org.http4s.Status.NotFound.type", "kind" : "val"}, {"label" : "Forbidden", "tail" : ": org.http4s.Status.Forbidden.type", "member" : "org.http4s.dsl.impl.Statuses.Forbidden", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Forbidden:org.http4s.Status.Forbidden.type", "kind" : "val"}, {"label" : "PaymentRequired", "tail" : ": org.http4s.Status.PaymentRequired.type", "member" : "org.http4s.dsl.impl.Statuses.PaymentRequired", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PaymentRequired:org.http4s.Status.PaymentRequired.type", "kind" : "val"}, {"label" : "Unauthorized", "tail" : ": org.http4s.Status.Unauthorized.type", "member" : "org.http4s.dsl.impl.Statuses.Unauthorized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Unauthorized:org.http4s.Status.Unauthorized.type", "kind" : "val"}, {"label" : "BadRequest", "tail" : ": org.http4s.Status.BadRequest.type", "member" : "org.http4s.dsl.impl.Statuses.BadRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#BadRequest:org.http4s.Status.BadRequest.type", "kind" : "val"}, {"label" : "PermanentRedirect", "tail" : ": org.http4s.Status.PermanentRedirect.type", "member" : "org.http4s.dsl.impl.Statuses.PermanentRedirect", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PermanentRedirect:org.http4s.Status.PermanentRedirect.type", "kind" : "val"}, {"label" : "TemporaryRedirect", "tail" : ": org.http4s.Status.TemporaryRedirect.type", "member" : "org.http4s.dsl.impl.Statuses.TemporaryRedirect", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#TemporaryRedirect:org.http4s.Status.TemporaryRedirect.type", "kind" : "val"}, {"label" : "UseProxy", "tail" : ": org.http4s.Status.UseProxy.type", "member" : "org.http4s.dsl.impl.Statuses.UseProxy", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#UseProxy:org.http4s.Status.UseProxy.type", "kind" : "val"}, {"label" : "NotModified", "tail" : ": org.http4s.Status.NotModified.type", "member" : "org.http4s.dsl.impl.Statuses.NotModified", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NotModified:org.http4s.Status.NotModified.type", "kind" : "val"}, {"label" : "SeeOther", "tail" : ": org.http4s.Status.SeeOther.type", "member" : "org.http4s.dsl.impl.Statuses.SeeOther", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#SeeOther:org.http4s.Status.SeeOther.type", "kind" : "val"}, {"label" : "Found", "tail" : ": org.http4s.Status.Found.type", "member" : "org.http4s.dsl.impl.Statuses.Found", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Found:org.http4s.Status.Found.type", "kind" : "val"}, {"label" : "MovedPermanently", "tail" : ": org.http4s.Status.MovedPermanently.type", "member" : "org.http4s.dsl.impl.Statuses.MovedPermanently", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#MovedPermanently:org.http4s.Status.MovedPermanently.type", "kind" : "val"}, {"label" : "MultipleChoices", "tail" : ": org.http4s.Status.MultipleChoices.type", "member" : "org.http4s.dsl.impl.Statuses.MultipleChoices", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#MultipleChoices:org.http4s.Status.MultipleChoices.type", "kind" : "val"}, {"label" : "IMUsed", "tail" : ": org.http4s.Status.IMUsed.type", "member" : "org.http4s.dsl.impl.Statuses.IMUsed", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#IMUsed:org.http4s.Status.IMUsed.type", "kind" : "val"}, {"label" : "AlreadyReported", "tail" : ": org.http4s.Status.AlreadyReported.type", "member" : "org.http4s.dsl.impl.Statuses.AlreadyReported", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#AlreadyReported:org.http4s.Status.AlreadyReported.type", "kind" : "val"}, {"label" : "MultiStatus", "tail" : ": org.http4s.Status.MultiStatus.type", "member" : "org.http4s.dsl.impl.Statuses.MultiStatus", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#MultiStatus:org.http4s.Status.MultiStatus.type", "kind" : "val"}, {"label" : "PartialContent", "tail" : ": org.http4s.Status.PartialContent.type", "member" : "org.http4s.dsl.impl.Statuses.PartialContent", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PartialContent:org.http4s.Status.PartialContent.type", "kind" : "val"}, {"label" : "ResetContent", "tail" : ": org.http4s.Status.ResetContent.type", "member" : "org.http4s.dsl.impl.Statuses.ResetContent", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#ResetContent:org.http4s.Status.ResetContent.type", "kind" : "val"}, {"label" : "NoContent", "tail" : ": org.http4s.Status.NoContent.type", "member" : "org.http4s.dsl.impl.Statuses.NoContent", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NoContent:org.http4s.Status.NoContent.type", "kind" : "val"}, {"label" : "NonAuthoritativeInformation", "tail" : ": org.http4s.Status.NonAuthoritativeInformation.type", "member" : "org.http4s.dsl.impl.Statuses.NonAuthoritativeInformation", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#NonAuthoritativeInformation:org.http4s.Status.NonAuthoritativeInformation.type", "kind" : "val"}, {"label" : "Accepted", "tail" : ": org.http4s.Status.Accepted.type", "member" : "org.http4s.dsl.impl.Statuses.Accepted", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Accepted:org.http4s.Status.Accepted.type", "kind" : "val"}, {"label" : "Created", "tail" : ": org.http4s.Status.Created.type", "member" : "org.http4s.dsl.impl.Statuses.Created", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Created:org.http4s.Status.Created.type", "kind" : "val"}, {"label" : "Ok", "tail" : ": org.http4s.Status.Ok.type", "member" : "org.http4s.dsl.impl.Statuses.Ok", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Ok:org.http4s.Status.Ok.type", "kind" : "val"}, {"label" : "Processing", "tail" : ": org.http4s.Status.Processing.type", "member" : "org.http4s.dsl.impl.Statuses.Processing", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Processing:org.http4s.Status.Processing.type", "kind" : "val"}, {"label" : "SwitchingProtocols", "tail" : ": org.http4s.Status.SwitchingProtocols.type", "member" : "org.http4s.dsl.impl.Statuses.SwitchingProtocols", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#SwitchingProtocols:org.http4s.Status.SwitchingProtocols.type", "kind" : "val"}, {"label" : "Continue", "tail" : ": org.http4s.Status.Continue.type", "member" : "org.http4s.dsl.impl.Statuses.Continue", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Continue:org.http4s.Status.Continue.type", "kind" : "val"}, {"label" : "http4sMethodConcatSyntax", "tail" : "(methods: MethodConcat): MethodConcatOps", "member" : "org.http4s.dsl.RequestDsl.http4sMethodConcatSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMethodConcatSyntax(methods:RequestDsl.this.MethodConcat):org.http4s.dsl.Http4sDsl.MethodConcatOps", "kind" : "implicit def"}, {"label" : "http4sMethodSyntax", "tail" : "(method: Method): MethodOps", "member" : "org.http4s.dsl.RequestDsl.http4sMethodSyntax", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#http4sMethodSyntax(method:org.http4s.Method):org.http4s.dsl.Http4sDsl.MethodOps", "kind" : "implicit def"}, {"label" : "OptionalValidatingQueryParamDecoderMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.OptionalValidatingQueryParamDecoderMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#OptionalValidatingQueryParamDecoderMatcher[T<:<?>]=org.http4s.dsl.impl.OptionalValidatingQueryParamDecoderMatcher[T]", "kind" : "type"}, {"label" : "FlagQueryParamMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.FlagQueryParamMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#FlagQueryParamMatcher=org.http4s.dsl.impl.FlagQueryParamMatcher", "kind" : "type"}, {"label" : "ValidatingQueryParamDecoderMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.ValidatingQueryParamDecoderMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#ValidatingQueryParamDecoderMatcher[T<:<?>]=org.http4s.dsl.impl.ValidatingQueryParamDecoderMatcher[T]", "kind" : "type"}, {"label" : "OptionalQueryParamMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.OptionalQueryParamMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#OptionalQueryParamMatcher[T<:<?>]=org.http4s.dsl.impl.OptionalQueryParamMatcher[T]", "kind" : "type"}, {"label" : "OptionalMultiQueryParamDecoderMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.OptionalMultiQueryParamDecoderMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#OptionalMultiQueryParamDecoderMatcher[T<:<?>]=org.http4s.dsl.impl.OptionalMultiQueryParamDecoderMatcher[T]", "kind" : "type"}, {"label" : "OptionalQueryParamDecoderMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.OptionalQueryParamDecoderMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#OptionalQueryParamDecoderMatcher[T<:<?>]=org.http4s.dsl.impl.OptionalQueryParamDecoderMatcher[T]", "kind" : "type"}, {"label" : "QueryParamMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.QueryParamMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#QueryParamMatcher[T<:<?>]=org.http4s.dsl.impl.QueryParamMatcher[T]", "kind" : "type"}, {"label" : "QueryParamDecoderMatcher", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.QueryParamDecoderMatcher", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#QueryParamDecoderMatcher[T<:<?>]=org.http4s.dsl.impl.QueryParamDecoderMatcher[T]", "kind" : "type"}, {"label" : "MethodConcat", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.MethodConcat", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#MethodConcat=org.http4s.dsl.impl.MethodConcat", "kind" : "type"}, {"label" : "\/", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.\/", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#\/=org.http4s.dsl.impl.\/", "kind" : "type"}, {"label" : "Root", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.Root", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Root=org.http4s.dsl.impl.Root.type", "kind" : "type"}, {"label" : "Path", "tail" : "", "member" : "org.http4s.dsl.RequestDsl.Path", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#Path=org.http4s.dsl.impl.Path", "kind" : "type"}, {"label" : "PATCH", "tail" : ": org.http4s.Method.PATCH", "member" : "org.http4s.dsl.impl.Methods.PATCH", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PATCH:org.http4s.Method.PATCH.type", "kind" : "val"}, {"label" : "TRACE", "tail" : ": org.http4s.Method.TRACE", "member" : "org.http4s.dsl.impl.Methods.TRACE", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#TRACE:org.http4s.Method.TRACE.type", "kind" : "val"}, {"label" : "OPTIONS", "tail" : ": org.http4s.Method.OPTIONS", "member" : "org.http4s.dsl.impl.Methods.OPTIONS", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#OPTIONS:org.http4s.Method.OPTIONS.type", "kind" : "val"}, {"label" : "CONNECT", "tail" : ": org.http4s.Method.CONNECT", "member" : "org.http4s.dsl.impl.Methods.CONNECT", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#CONNECT:org.http4s.Method.CONNECT.type", "kind" : "val"}, {"label" : "DELETE", "tail" : ": org.http4s.Method.DELETE", "member" : "org.http4s.dsl.impl.Methods.DELETE", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#DELETE:org.http4s.Method.DELETE.type", "kind" : "val"}, {"label" : "PUT", "tail" : ": org.http4s.Method.PUT", "member" : "org.http4s.dsl.impl.Methods.PUT", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#PUT:org.http4s.Method.PUT.type", "kind" : "val"}, {"label" : "POST", "tail" : ": org.http4s.Method.POST", "member" : "org.http4s.dsl.impl.Methods.POST", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#POST:org.http4s.Method.POST.type", "kind" : "val"}, {"label" : "HEAD", "tail" : ": org.http4s.Method.HEAD", "member" : "org.http4s.dsl.impl.Methods.HEAD", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#HEAD:org.http4s.Method.HEAD.type", "kind" : "val"}, {"label" : "GET", "tail" : ": org.http4s.Method.GET", "member" : "org.http4s.dsl.impl.Methods.GET", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#GET:org.http4s.Method.GET.type", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerRequestHandler.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder", "shortDescription" : "", "members_class" : [{"label" : "getDelay", "tail" : "(): Long", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.getDelay", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#getDelay:Long", "kind" : "def"}, {"label" : "setDelay", "tail" : "(newDelay: Long): Unit", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.setDelay", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#setDelay(newDelay:Long):Unit", "kind" : "def"}, {"label" : "getResponse", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.getResponse", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#getResponse:String", "kind" : "def"}, {"label" : "setResponse", "tail" : "(newResponse: String): Unit", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.setResponse", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#setResponse(newResponse:String):Unit", "kind" : "def"}, {"label" : "getBadRequestMode", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.getBadRequestMode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#getBadRequestMode:Boolean", "kind" : "def"}, {"label" : "toggleBadRequestMode", "tail" : "(): Unit", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.toggleBadRequestMode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#toggleBadRequestMode():Unit", "kind" : "def"}, {"label" : "getErrorMode", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.getErrorMode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#getErrorMode:Boolean", "kind" : "def"}, {"label" : "toggleErrorMode", "tail" : "(): Unit", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.toggleErrorMode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#toggleErrorMode():Unit", "kind" : "def"}, {"label" : "clearRegisteredRequest", "tail" : "(): Unit", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.clearRegisteredRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#clearRegisteredRequest():Unit", "kind" : "def"}, {"label" : "registerRequest", "tail" : "(req: HttpRequest[String]): Boolean", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.registerRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#registerRequest(req:com.github.agourlay.cornichon.http.HttpRequest[String]):Boolean", "kind" : "def"}, {"label" : "getReceivedRequest", "tail" : "(): Vector[HttpRequest[String]]", "member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder.getReceivedRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#getReceivedRequest:scala.collection.immutable.Vector[com.github.agourlay.cornichon.http.HttpRequest[String]]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.server.MockServerStateHolder#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/http\/server\/MockServerStateHolder.html", "kind" : "class"}], "com.github.agourlay.cornichon.http.steps" : [{"name" : "com.github.agourlay.cornichon.http.steps.HeadersSteps", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html", "members_object" : [{"label" : "headersContainFieldWithNameError", "tail" : "(name: String, sourceHeaders: Seq[(String, String)]): String", "member" : "com.github.agourlay.cornichon.http.steps.HeadersSteps.headersContainFieldWithNameError", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#headersContainFieldWithNameError(name:String,sourceHeaders:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "headersDoesNotContainFieldWithNameError", "tail" : "(name: String, sourceHeaders: Seq[(String, String)]): String", "member" : "com.github.agourlay.cornichon.http.steps.HeadersSteps.headersDoesNotContainFieldWithNameError", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#headersDoesNotContainFieldWithNameError(name:String,sourceHeaders:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "headersDoesNotContainError", "tail" : "(expected: String, sourceArray: String): String", "member" : "com.github.agourlay.cornichon.http.steps.HeadersSteps.headersDoesNotContainError", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#headersDoesNotContainError(expected:String,sourceArray:String):String", "kind" : "def"}, {"label" : "HeadersNameStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.http.steps.HeadersSteps.HeadersNameStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#HeadersNameStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "HeadersStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.http.steps.HeadersSteps.HeadersStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#HeadersStepBuilder", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HeadersSteps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.steps.HttpListenSteps", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html", "members_object" : [{"label" : "HttpListenStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.http.steps.HttpListenSteps.HttpListenStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#HttpListenStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/HttpListenSteps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.http.steps.StatusSteps", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html", "members_object" : [{"label" : "statusKindError", "tail" : "(expectedKind: Int, actualStatus: String, session: Session): String", "member" : "com.github.agourlay.cornichon.http.steps.StatusSteps.statusKindError", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#statusKindError(expectedKind:Int,actualStatus:String,session:com.github.agourlay.cornichon.core.Session):String", "kind" : "def"}, {"label" : "statusError", "tail" : "(expected: Int, actual: String, session: Session): String", "member" : "com.github.agourlay.cornichon.http.steps.StatusSteps.statusError", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#statusError(expected:Int,actual:String,session:com.github.agourlay.cornichon.core.Session):String", "kind" : "def"}, {"label" : "StatusStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.http.steps.StatusSteps.StatusStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#StatusStepBuilder", "kind" : "case object"}, {"label" : "StatusKind", "tail" : "", "member" : "com.github.agourlay.cornichon.http.steps.StatusSteps.StatusKind", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#StatusKind", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/steps\/StatusSteps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com" : [], "com.github.agourlay.cornichon.steps.check" : [{"name" : "com.github.agourlay.cornichon.steps.check.ForAllStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.check.ForAllStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.ForAllStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#title:String", "kind" : "val"}, {"label" : "baseTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.ForAllStep.baseTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#baseTitle:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.ForAllStep#<init>", "error" : "unsupported entity"}, {"label" : "maxNumberOfRuns", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.check.ForAllStep.maxNumberOfRuns", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#maxNumberOfRuns:Int", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.ForAllStep.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/ForAllStep.html", "kind" : "case class"}], "com.github.agourlay.cornichon.core" : [{"name" : "com.github.agourlay.cornichon.core.AfterFeatureError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.AfterFeatureError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.AfterFeatureError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.AfterFeatureError#<init>", "error" : "unsupported entity"}, {"label" : "originalError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.core.AfterFeatureError.originalError", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#originalError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/AfterFeatureError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.BasicError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.BasicError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.BasicError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.BasicError.error", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#error:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/BasicError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.BeforeFeatureError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.BeforeFeatureError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.BeforeFeatureError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.BeforeFeatureError#<init>", "error" : "unsupported entity"}, {"label" : "originalError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.core.BeforeFeatureError.originalError", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#originalError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/BeforeFeatureError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.Config", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/Config$.html", "members_object" : [{"label" : "hint", "tail" : ": ProductHint[Config]", "member" : "com.github.agourlay.cornichon.core.Config.hint", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#hint:pureconfig.generic.ProductHint[com.github.agourlay.cornichon.core.Config]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Config$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.github.agourlay.cornichon.core.Config#<init>", "error" : "unsupported entity"}, {"label" : "followRedirect", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.followRedirect", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#followRedirect:Boolean", "kind" : "val"}, {"label" : "disableCertificateVerification", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.disableCertificateVerification", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#disableCertificateVerification:Boolean", "kind" : "val"}, {"label" : "addAcceptGzipByDefault", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.addAcceptGzipByDefault", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#addAcceptGzipByDefault:Boolean", "kind" : "val"}, {"label" : "failOnDuplicateHeaders", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.failOnDuplicateHeaders", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#failOnDuplicateHeaders:Boolean", "kind" : "val"}, {"label" : "warnOnDuplicateHeaders", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.warnOnDuplicateHeaders", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#warnOnDuplicateHeaders:Boolean", "kind" : "val"}, {"label" : "traceRequests", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.traceRequests", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#traceRequests:Boolean", "kind" : "val"}, {"label" : "globalBaseUrl", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.Config.globalBaseUrl", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#globalBaseUrl:String", "kind" : "val"}, {"label" : "requestTimeout", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.core.Config.requestTimeout", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#requestTimeout:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "scenarioExecutionParallelismFactor", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.Config.scenarioExecutionParallelismFactor", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#scenarioExecutionParallelismFactor:Int", "kind" : "val"}, {"label" : "executeScenariosInParallel", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Config.executeScenariosInParallel", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#executeScenariosInParallel:Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Config.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/Config.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.CornichonError", "object" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html", "members_object" : [{"label" : "fromEither", "tail" : "", "member" : "com.github.agourlay.cornichon.core.CornichonError.fromEither", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#fromEither[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "catchThrowable", "tail" : "(f: => A): Either[CornichonError, A]", "member" : "com.github.agourlay.cornichon.core.CornichonError.catchThrowable", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#catchThrowable[A](f:=>A):Either[com.github.agourlay.cornichon.core.CornichonError,A]", "kind" : "def"}, {"label" : "fromThrowable", "tail" : "(exception: Throwable): CornichonError", "member" : "com.github.agourlay.cornichon.core.CornichonError.fromThrowable", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#fromThrowable(exception:Throwable):com.github.agourlay.cornichon.core.CornichonError", "kind" : "def"}, {"label" : "fromString", "tail" : "(error: String): CornichonError", "member" : "com.github.agourlay.cornichon.core.CornichonError.fromString", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#fromString(error:String):com.github.agourlay.cornichon.core.CornichonError", "kind" : "def"}, {"label" : "genStacktrace", "tail" : "(exception: Throwable): String", "member" : "com.github.agourlay.cornichon.core.CornichonError.genStacktrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#genStacktrace(exception:Throwable):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html", "kind" : "trait", "members_trait" : [{"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.CornichonError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonError.html#baseErrorMessage:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.CornichonException", "shortDescription" : "", "members_case class" : [{"label" : "getMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.CornichonException.getMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#getMessage():String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.CornichonException#<init>", "error" : "unsupported entity"}, {"label" : "m", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonException.m", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#m:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "scala.util.control.NoStackTrace.fillInStackTrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/CornichonException.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.DebugLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.DebugLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.DebugLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.DebugLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.DebugLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.DebugLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/DebugLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.Done", "case object" : "com\/github\/agourlay\/cornichon\/core\/Done$.html", "shortDescription" : "", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Done.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case object" : [{"label" : "monoid", "tail" : ": Monoid[Done]", "member" : "com.github.agourlay.cornichon.core.Done.monoid", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#monoid:cats.kernel.Monoid[com.github.agourlay.cornichon.core.Done]", "kind" : "implicit val"}, {"label" : "taskDone", "tail" : ": Task[Done.type]", "member" : "com.github.agourlay.cornichon.core.Done.taskDone", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#taskDone:monix.eval.Task[com.github.agourlay.cornichon.core.Done.type]", "kind" : "val"}, {"label" : "futureDone", "tail" : ": Future[Done.type]", "member" : "com.github.agourlay.cornichon.core.Done.futureDone", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#futureDone:scala.concurrent.Future[com.github.agourlay.cornichon.core.Done.type]", "kind" : "val"}, {"label" : "validDone", "tail" : ": Valid[Done.type]", "member" : "com.github.agourlay.cornichon.core.Done.validDone", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#validDone:cats.data.Validated.Valid[com.github.agourlay.cornichon.core.Done.type]", "kind" : "val"}, {"label" : "rightDone", "tail" : ": Right[Nothing, Done.type]", "member" : "com.github.agourlay.cornichon.core.Done.rightDone", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#rightDone:scala.util.Right[Nothing,com.github.agourlay.cornichon.core.Done.type]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Done$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/core\/Done.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.core.EmptyKey", "case object" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html", "shortDescription" : "", "members_case object" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.EmptyKey.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#baseErrorMessage:String", "kind" : "lazy val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/EmptyKey$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.core.FailedStep", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html", "members_object" : [{"label" : "fromSingle", "tail" : "(step: Step, error: CornichonError): FailedStep", "member" : "com.github.agourlay.cornichon.core.FailedStep.fromSingle", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#fromSingle(step:com.github.agourlay.cornichon.core.Step,error:com.github.agourlay.cornichon.core.CornichonError):com.github.agourlay.cornichon.core.FailedStep", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "messageForFailedStep", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailedStep.messageForFailedStep", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#messageForFailedStep:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.FailedStep#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": NonEmptyList[CornichonError]", "member" : "com.github.agourlay.cornichon.core.FailedStep.errors", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "step", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.core.FailedStep.step", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#step:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/FailedStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.FailureLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailureLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.FailureLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.FailureLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.FailureLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailureLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/FailureLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.FailureScenarioReport", "shortDescription" : "", "members_case class" : [{"label" : "renderedLogs", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.renderedLogs", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#renderedLogs:String", "kind" : "lazy val"}, {"label" : "renderedColoredLogs", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.renderedColoredLogs", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#renderedColoredLogs:String", "kind" : "lazy val"}, {"label" : "logs", "tail" : ": List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.logs", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#logs:List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "lazy val"}, {"label" : "msg", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.msg", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#msg:String", "kind" : "val"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.isSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#isSuccess:Boolean", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.core.FailureScenarioReport#<init>", "error" : "unsupported entity"}, {"label" : "seed", "tail" : ": Long", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.seed", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#seed:Long", "kind" : "val"}, {"label" : "duration", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "logStack", "tail" : ": List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.logStack", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#logStack:List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "val"}, {"label" : "session", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.session", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "failedSteps", "tail" : ": NonEmptyList[FailedStep]", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.failedSteps", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#failedSteps:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.FailedStep]", "kind" : "val"}, {"label" : "scenarioName", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FailureScenarioReport.scenarioName", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#scenarioName:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/FailureScenarioReport.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.FeatureContext", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html", "members_object" : [{"label" : "empty", "tail" : ": FeatureContext", "member" : "com.github.agourlay.cornichon.core.FeatureContext.empty", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#empty:com.github.agourlay.cornichon.core.FeatureContext", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "isPending", "tail" : "(scenario: Scenario): Boolean", "member" : "com.github.agourlay.cornichon.core.FeatureContext.isPending", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#isPending(scenario:com.github.agourlay.cornichon.core.Scenario):Boolean", "kind" : "def"}, {"label" : "isIgnored", "tail" : "(scenario: Scenario): Option[String]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.isIgnored", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#isIgnored(scenario:com.github.agourlay.cornichon.core.Scenario):Option[String]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.FeatureContext#<init>", "error" : "unsupported entity"}, {"label" : "allMatchers", "tail" : ": Map[String, List[Matcher]]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.allMatchers", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#allMatchers:Map[String,List[com.github.agourlay.cornichon.matchers.Matcher]]", "kind" : "val"}, {"label" : "customExtractors", "tail" : ": Map[String, Mapper]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.customExtractors", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#customExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper]", "kind" : "val"}, {"label" : "withSeed", "tail" : ": Option[Long]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.withSeed", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#withSeed:Option[Long]", "kind" : "val"}, {"label" : "focusedScenarios", "tail" : ": Set[String]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.focusedScenarios", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#focusedScenarios:Set[String]", "kind" : "val"}, {"label" : "featureIgnored", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.FeatureContext.featureIgnored", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#featureIgnored:Boolean", "kind" : "val"}, {"label" : "finallySteps", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.finallySteps", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#finallySteps:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "beforeSteps", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.core.FeatureContext.beforeSteps", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#beforeSteps:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/FeatureContext.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.FeatureDef", "shortDescription" : "", "members_case class" : [{"label" : "focusedScenarios", "tail" : ": Set[String]", "member" : "com.github.agourlay.cornichon.core.FeatureDef.focusedScenarios", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#focusedScenarios:Set[String]", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.core.FeatureDef#<init>", "error" : "unsupported entity"}, {"label" : "ignored", "tail" : ": Option[String]", "member" : "com.github.agourlay.cornichon.core.FeatureDef.ignored", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#ignored:Option[String]", "kind" : "val"}, {"label" : "scenarios", "tail" : ": List[Scenario]", "member" : "com.github.agourlay.cornichon.core.FeatureDef.scenarios", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#scenarios:List[com.github.agourlay.cornichon.core.Scenario]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.FeatureDef.name", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/FeatureDef.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.FeatureRunner", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html", "members_object" : [{"label" : "availaibleProcessors", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.FeatureRunner.availaibleProcessors", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#availaibleProcessors:Int", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "runFeature", "tail" : "(filterScenario: (Scenario) => Boolean)(scenarioResultHandler: (ScenarioReport) => ScenarioReport): Task[List[ScenarioReport]]", "member" : "com.github.agourlay.cornichon.core.FeatureRunner.runFeature", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#runFeature(filterScenario:com.github.agourlay.cornichon.core.Scenario=>Boolean)(scenarioResultHandler:com.github.agourlay.cornichon.core.ScenarioReport=>com.github.agourlay.cornichon.core.ScenarioReport):monix.eval.Task[List[com.github.agourlay.cornichon.core.ScenarioReport]]", "kind" : "final def"}, {"label" : "runScenario", "tail" : "(s: Scenario): Task[ScenarioReport]", "member" : "com.github.agourlay.cornichon.core.FeatureRunner.runScenario", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#runScenario(s:com.github.agourlay.cornichon.core.Scenario):monix.eval.Task[com.github.agourlay.cornichon.core.ScenarioReport]", "kind" : "final def"}, {"member" : "com.github.agourlay.cornichon.core.FeatureRunner#<init>", "error" : "unsupported entity"}, {"label" : "explicitSeed", "tail" : ": Option[Long]", "member" : "com.github.agourlay.cornichon.core.FeatureRunner.explicitSeed", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#explicitSeed:Option[Long]", "kind" : "val"}, {"label" : "baseFeature", "tail" : ": BaseFeature", "member" : "com.github.agourlay.cornichon.core.FeatureRunner.baseFeature", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#baseFeature:com.github.agourlay.cornichon.dsl.BaseFeature", "kind" : "val"}, {"label" : "featureDef", "tail" : ": FeatureDef", "member" : "com.github.agourlay.cornichon.core.FeatureRunner.featureDef", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#featureDef:com.github.agourlay.cornichon.core.FeatureDef", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/FeatureRunner.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.Generator", "trait" : "com\/github\/agourlay\/cornichon\/core\/Generator.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "value", "tail" : "(session: Session): () => A", "member" : "com.github.agourlay.cornichon.core.Generator.value", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#value(session:com.github.agourlay.cornichon.core.Session):()=>A", "kind" : "abstract def"}, {"label" : "name", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Generator.name", "link" : "com\/github\/agourlay\/cornichon\/core\/Generator.html#name:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.HooksFeatureError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.HooksFeatureError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.HooksFeatureError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.HooksFeatureError#<init>", "error" : "unsupported entity"}, {"label" : "afterError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.core.HooksFeatureError.afterError", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#afterError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "beforeError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.core.HooksFeatureError.beforeError", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#beforeError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/HooksFeatureError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport", "shortDescription" : "", "members_case class" : [{"label" : "duration", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport.isSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#isSuccess:Boolean", "kind" : "val"}, {"label" : "logs", "tail" : ": Nil.type", "member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport.logs", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#logs:scala.collection.immutable.Nil.type", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport#<init>", "error" : "unsupported entity"}, {"label" : "session", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport.session", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "reason", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport.reason", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#reason:String", "kind" : "val"}, {"label" : "scenarioName", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.IgnoreScenarioReport.scenarioName", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#scenarioName:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/IgnoreScenarioReport.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.IllegalKey", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.IllegalKey.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.IllegalKey#<init>", "error" : "unsupported entity"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.IllegalKey.key", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/IllegalKey.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.IndexNotFoundForKey", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.IndexNotFoundForKey.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.IndexNotFoundForKey#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Vector[String]", "member" : "com.github.agourlay.cornichon.core.IndexNotFoundForKey.values", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#values:Vector[String]", "kind" : "val"}, {"label" : "index", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.IndexNotFoundForKey.index", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#index:Int", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.IndexNotFoundForKey.key", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/IndexNotFoundForKey.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.InfoLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.InfoLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.InfoLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.InfoLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.InfoLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.InfoLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/InfoLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.KeyNotFoundInSession", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.KeyNotFoundInSession.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#baseErrorMessage:String", "kind" : "lazy val"}, {"label" : "similarKeysMsg", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.KeyNotFoundInSession.similarKeysMsg", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#similarKeysMsg:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.KeyNotFoundInSession#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.KeyNotFoundInSession.s", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#s:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.KeyNotFoundInSession.key", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/KeyNotFoundInSession.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.KeyWithoutPreviousValue", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.KeyWithoutPreviousValue.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.KeyWithoutPreviousValue#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.KeyWithoutPreviousValue.s", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#s:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.KeyWithoutPreviousValue.key", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/KeyWithoutPreviousValue.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.LogDecoratorStep", "trait" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html", "kind" : "trait", "members_trait" : [{"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logStackOnNestedSuccess", "tail" : "(resultLogStack: List[LogInstruction], depth: Int, executionTime: Duration): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.logStackOnNestedSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#logStackOnNestedSuccess(resultLogStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,executionTime:scala.concurrent.duration.Duration):List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "abstract def"}, {"label" : "logStackOnNestedError", "tail" : "(resultLogStack: List[LogInstruction], depth: Int, executionTime: Duration): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.logStackOnNestedError", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#logStackOnNestedError(resultLogStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,executionTime:scala.concurrent.duration.Duration):List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "abstract def"}, {"label" : "nestedToRun", "tail" : "(): (Session) => List[Step]", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.nestedToRun", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#nestedToRun:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Step.title", "link" : "com\/github\/agourlay\/cornichon\/core\/LogDecoratorStep.html#title:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.LogInstruction", "object" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html", "members_object" : [{"label" : "printLogs", "tail" : "(logs: List[LogInstruction]): Unit", "member" : "com.github.agourlay.cornichon.core.LogInstruction.printLogs", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#printLogs(logs:List[com.github.agourlay.cornichon.core.LogInstruction]):Unit", "kind" : "def"}, {"label" : "renderLogs", "tail" : "(logs: List[LogInstruction], colorized: Boolean): String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.renderLogs", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#renderLogs(logs:List[com.github.agourlay.cornichon.core.LogInstruction],colorized:Boolean):String", "kind" : "def"}, {"label" : "physicalMargin", "tail" : ": StringOps", "member" : "com.github.agourlay.cornichon.core.LogInstruction.physicalMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#physicalMargin:collection.immutable.StringOps", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html", "kind" : "trait", "members_trait" : [{"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "colorized", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#colorized:String", "kind" : "abstract def"}, {"label" : "duration", "tail" : "(): Option[Duration]", "member" : "com.github.agourlay.cornichon.core.LogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "abstract def"}, {"label" : "marginNb", "tail" : "(): Int", "member" : "com.github.agourlay.cornichon.core.LogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#marginNb:Int", "kind" : "abstract def"}, {"label" : "message", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/LogInstruction.html#message:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.LogValueStep", "trait" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html", "kind" : "trait", "members_trait" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.LogValueStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logOnSuccess", "tail" : "(result: A, runState: RunState, executionTime: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.core.LogValueStep.logOnSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#logOnSuccess(result:A,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(errors: NonEmptyList[CornichonError], runState: RunState, executionTime: Duration): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.core.LogValueStep.onError", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#onError(errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "abstract def"}, {"label" : "runLogValueStep", "tail" : "(runState: RunState): Task[Either[NonEmptyList[CornichonError], A]]", "member" : "com.github.agourlay.cornichon.core.LogValueStep.runLogValueStep", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#runLogValueStep(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[Either[cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],A]]", "kind" : "abstract def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.Step.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Step.title", "link" : "com\/github\/agourlay\/cornichon\/core\/LogValueStep.html#title:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.MutableRandomContext", "shortDescription" : "", "members_class" : [{"label" : "uniqueLong", "tail" : "(): Long", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.uniqueLong", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#uniqueLong():Long", "kind" : "def"}, {"label" : "shuffle", "tail" : "(xs: Iterable[T]): Iterable[T]", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.shuffle", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#shuffle[T](xs:Iterable[T]):Iterable[T]", "kind" : "def"}, {"label" : "alphanumeric", "tail" : "(length: Int): String", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.alphanumeric", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#alphanumeric(length:Int):String", "kind" : "def"}, {"label" : "nextPrintableChar", "tail" : "(): Char", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextPrintableChar", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextPrintableChar():Char", "kind" : "def"}, {"label" : "nextString", "tail" : "(length: Int): String", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextString", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextString(length:Int):String", "kind" : "def"}, {"label" : "nextLong", "tail" : "(): Long", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextLong", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextLong():Long", "kind" : "def"}, {"label" : "nextInt", "tail" : "(n: Int): Int", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextInt", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextInt(n:Int):Int", "kind" : "def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextInt", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextInt():Int", "kind" : "def"}, {"label" : "nextGaussian", "tail" : "(): Double", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextGaussian", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextGaussian():Double", "kind" : "def"}, {"label" : "nextFloat", "tail" : "(): Float", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextFloat", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextFloat():Float", "kind" : "def"}, {"label" : "nextDouble", "tail" : "(): Double", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextDouble", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextDouble():Double", "kind" : "def"}, {"label" : "nextBoolean", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.nextBoolean", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#nextBoolean():Boolean", "kind" : "def"}, {"label" : "initialSeed", "tail" : ": Long", "member" : "com.github.agourlay.cornichon.core.MutableRandomContext.initialSeed", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#initialSeed:Long", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.core.MutableRandomContext#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/core\/MutableRandomContext.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.core.NoOpStep", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html", "members_object" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.NoOpStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.NoOpStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.NoOpStep.title", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#title:String", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoOpStep$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.core.NoShowLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.NoShowLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.NoShowLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.NoShowLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.NoShowLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.NoShowLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/NoShowLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.NoValue", "case object" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html", "trait" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html", "members_case object" : [{"label" : "seededNoValueGenerator", "tail" : ": (RandomContext) => Generator[NoValue]", "member" : "com.github.agourlay.cornichon.core.NoValue.seededNoValueGenerator", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#seededNoValueGenerator:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[com.github.agourlay.cornichon.core.NoValue]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.NoValueGenerator", "case object" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html", "shortDescription" : "", "members_case object" : [{"label" : "value", "tail" : "(session: Session): () => NoValue.type", "member" : "com.github.agourlay.cornichon.core.NoValueGenerator.value", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#value(session:com.github.agourlay.cornichon.core.Session):()=>com.github.agourlay.cornichon.core.NoValue.type", "kind" : "def"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.NoValueGenerator.name", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/NoValueGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.core.OptionalValueGenerator", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : "(session: Session): () => A", "member" : "com.github.agourlay.cornichon.core.OptionalValueGenerator.value", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#value(session:com.github.agourlay.cornichon.core.Session):()=>A", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.OptionalValueGenerator#<init>", "error" : "unsupported entity"}, {"label" : "gen", "tail" : ": () => Option[A]", "member" : "com.github.agourlay.cornichon.core.OptionalValueGenerator.gen", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#gen:()=>Option[A]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.OptionalValueGenerator.name", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/OptionalValueGenerator.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.PendingScenarioReport", "shortDescription" : "", "members_case class" : [{"label" : "duration", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.core.PendingScenarioReport.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.PendingScenarioReport.isSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#isSuccess:Boolean", "kind" : "val"}, {"label" : "logs", "tail" : ": Nil.type", "member" : "com.github.agourlay.cornichon.core.PendingScenarioReport.logs", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#logs:scala.collection.immutable.Nil.type", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.core.PendingScenarioReport#<init>", "error" : "unsupported entity"}, {"label" : "session", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.PendingScenarioReport.session", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "scenarioName", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.PendingScenarioReport.scenarioName", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#scenarioName:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/PendingScenarioReport.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.RandomContext", "object" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html", "members_object" : [{"label" : "fromSeed", "tail" : "(seed: Long): RandomContext", "member" : "com.github.agourlay.cornichon.core.RandomContext.fromSeed", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#fromSeed(seed:Long):com.github.agourlay.cornichon.core.RandomContext", "kind" : "def"}, {"label" : "fromOptSeed", "tail" : "(withSeed: Option[Long]): RandomContext", "member" : "com.github.agourlay.cornichon.core.RandomContext.fromOptSeed", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#fromOptSeed(withSeed:Option[Long]):com.github.agourlay.cornichon.core.RandomContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "shuffle", "tail" : "(xs: Iterable[T]): Iterable[T]", "member" : "com.github.agourlay.cornichon.core.RandomContext.shuffle", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#shuffle[T](xs:Iterable[T]):Iterable[T]", "kind" : "abstract def"}, {"label" : "alphanumeric", "tail" : "(length: Int): String", "member" : "com.github.agourlay.cornichon.core.RandomContext.alphanumeric", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#alphanumeric(length:Int):String", "kind" : "abstract def"}, {"label" : "nextPrintableChar", "tail" : "(): Char", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextPrintableChar", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextPrintableChar():Char", "kind" : "abstract def"}, {"label" : "nextString", "tail" : "(length: Int): String", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextString", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextString(length:Int):String", "kind" : "abstract def"}, {"label" : "uniqueLong", "tail" : "(): Long", "member" : "com.github.agourlay.cornichon.core.RandomContext.uniqueLong", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#uniqueLong():Long", "kind" : "abstract def"}, {"label" : "nextLong", "tail" : "(): Long", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextLong", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextLong():Long", "kind" : "abstract def"}, {"label" : "nextInt", "tail" : "(n: Int): Int", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextInt", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextInt(n:Int):Int", "kind" : "abstract def"}, {"label" : "nextInt", "tail" : "(): Int", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextInt", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextInt():Int", "kind" : "abstract def"}, {"label" : "nextGaussian", "tail" : "(): Double", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextGaussian", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextGaussian():Double", "kind" : "abstract def"}, {"label" : "nextFloat", "tail" : "(): Float", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextFloat", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextFloat():Float", "kind" : "abstract def"}, {"label" : "nextDouble", "tail" : "(): Double", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextDouble", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextDouble():Double", "kind" : "abstract def"}, {"label" : "nextBoolean", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.core.RandomContext.nextBoolean", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#nextBoolean():Boolean", "kind" : "abstract def"}, {"label" : "initialSeed", "tail" : ": Long", "member" : "com.github.agourlay.cornichon.core.RandomContext.initialSeed", "link" : "com\/github\/agourlay\/cornichon\/core\/RandomContext.html#initialSeed:Long", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.RunState", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html", "members_object" : [{"label" : "fromFeatureContext", "tail" : "(featureContext: FeatureContext, session: Session, logStack: List[LogInstruction], depth: Int, cleanupSteps: List[Step]): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.fromFeatureContext", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#fromFeatureContext(featureContext:com.github.agourlay.cornichon.core.FeatureContext,session:com.github.agourlay.cornichon.core.Session,logStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,cleanupSteps:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "scenarioContext", "tail" : ": ScenarioContext", "member" : "com.github.agourlay.cornichon.core.RunState.scenarioContext", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#scenarioContext:com.github.agourlay.cornichon.core.ScenarioContext", "kind" : "lazy val"}, {"label" : "mergeNested", "tail" : "(r: RunState, extraLogStack: List[LogInstruction]): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.mergeNested", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#mergeNested(r:com.github.agourlay.cornichon.core.RunState,extraLogStack:List[com.github.agourlay.cornichon.core.LogInstruction]):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "mergeNested", "tail" : "(r: RunState): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.mergeNested", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#mergeNested(r:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "resetCleanupSteps", "tail" : ": RunState", "member" : "com.github.agourlay.cornichon.core.RunState.resetCleanupSteps", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#resetCleanupSteps:com.github.agourlay.cornichon.core.RunState", "kind" : "lazy val"}, {"label" : "registerCleanupSteps", "tail" : "(add: List[Step]): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.registerCleanupSteps", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#registerCleanupSteps(add:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "registerCleanupStep", "tail" : "(add: Step): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.registerCleanupStep", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#registerCleanupStep(add:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "recordLog", "tail" : "(add: LogInstruction): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.recordLog", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#recordLog(add:com.github.agourlay.cornichon.core.LogInstruction):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "recordLogStack", "tail" : "(add: List[LogInstruction]): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.recordLogStack", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#recordLogStack(add:List[com.github.agourlay.cornichon.core.LogInstruction]):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "withLog", "tail" : "(log: LogInstruction): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.withLog", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#withLog(log:com.github.agourlay.cornichon.core.LogInstruction):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "mergeSessions", "tail" : "(other: Session): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.mergeSessions", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#mergeSessions(other:com.github.agourlay.cornichon.core.Session):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "addToSession", "tail" : "(key: String, value: String): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.addToSession", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#addToSession(key:String,value:String):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "addToSession", "tail" : "(tuples: Seq[(String, String)]): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.addToSession", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#addToSession(tuples:Seq[(String,String)]):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "withSession", "tail" : "(s: Session): RunState", "member" : "com.github.agourlay.cornichon.core.RunState.withSession", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#withSession(s:com.github.agourlay.cornichon.core.Session):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "sameLevelContext", "tail" : ": RunState", "member" : "com.github.agourlay.cornichon.core.RunState.sameLevelContext", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#sameLevelContext:com.github.agourlay.cornichon.core.RunState", "kind" : "lazy val"}, {"label" : "nestedContext", "tail" : ": RunState", "member" : "com.github.agourlay.cornichon.core.RunState.nestedContext", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#nestedContext:com.github.agourlay.cornichon.core.RunState", "kind" : "lazy val"}, {"label" : "resetLogStack", "tail" : ": RunState", "member" : "com.github.agourlay.cornichon.core.RunState.resetLogStack", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#resetLogStack:com.github.agourlay.cornichon.core.RunState", "kind" : "lazy val"}, {"label" : "goDeeper", "tail" : ": RunState", "member" : "com.github.agourlay.cornichon.core.RunState.goDeeper", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#goDeeper:com.github.agourlay.cornichon.core.RunState", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.RunState#<init>", "error" : "unsupported entity"}, {"label" : "cleanupSteps", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.core.RunState.cleanupSteps", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#cleanupSteps:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "depth", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.RunState.depth", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#depth:Int", "kind" : "val"}, {"label" : "logStack", "tail" : ": List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.RunState.logStack", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#logStack:List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "val"}, {"label" : "session", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.RunState.session", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "randomContext", "tail" : ": RandomContext", "member" : "com.github.agourlay.cornichon.core.RunState.randomContext", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#randomContext:com.github.agourlay.cornichon.core.RandomContext", "kind" : "val"}, {"label" : "allMatchers", "tail" : ": Map[String, List[Matcher]]", "member" : "com.github.agourlay.cornichon.core.RunState.allMatchers", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#allMatchers:Map[String,List[com.github.agourlay.cornichon.matchers.Matcher]]", "kind" : "val"}, {"label" : "customExtractors", "tail" : ": Map[String, Mapper]", "member" : "com.github.agourlay.cornichon.core.RunState.customExtractors", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#customExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/RunState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/RunState.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.Scenario", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.core.Scenario#<init>", "error" : "unsupported entity"}, {"label" : "focused", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Scenario.focused", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#focused:Boolean", "kind" : "val"}, {"label" : "pending", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.Scenario.pending", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#pending:Boolean", "kind" : "val"}, {"label" : "ignored", "tail" : ": Option[String]", "member" : "com.github.agourlay.cornichon.core.Scenario.ignored", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#ignored:Option[String]", "kind" : "val"}, {"label" : "steps", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.core.Scenario.steps", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#steps:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.Scenario.name", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/Scenario.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.ScenarioContext", "object" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html", "members_object" : [{"label" : "empty", "tail" : ": ScenarioContext", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.empty", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#empty:com.github.agourlay.cornichon.core.ScenarioContext", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "findAllMatchers", "tail" : "(input: String): Either[CornichonError, List[Matcher]]", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.findAllMatchers", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#findAllMatchers(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.matchers.Matcher]]", "kind" : "abstract def"}, {"label" : "fillPlaceholders", "tail" : "(params: Seq[(String, String)]): Either[CornichonError, List[(String, String)]]", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.fillPlaceholders", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#fillPlaceholders(params:Seq[(String,String)]):Either[com.github.agourlay.cornichon.core.CornichonError,List[(String,String)]]", "kind" : "abstract def"}, {"label" : "fillSessionPlaceholders", "tail" : "(input: String): Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.fillSessionPlaceholders", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#fillSessionPlaceholders(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "abstract def"}, {"label" : "fillPlaceholders", "tail" : "(input: String): Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.fillPlaceholders", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#fillPlaceholders(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "abstract def"}, {"label" : "fillPlaceholders", "tail" : "(input: A)(arg0: Resolvable[A]): Either[CornichonError, A]", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.fillPlaceholders", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#fillPlaceholders[A](input:A)(implicitevidence$1:com.github.agourlay.cornichon.resolver.Resolvable[A]):Either[com.github.agourlay.cornichon.core.CornichonError,A]", "kind" : "abstract def"}, {"label" : "session", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.session", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "abstract val"}, {"label" : "randomContext", "tail" : ": RandomContext", "member" : "com.github.agourlay.cornichon.core.ScenarioContext.randomContext", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioContext.html#randomContext:com.github.agourlay.cornichon.core.RandomContext", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.ScenarioReport", "object" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html", "members_object" : [{"label" : "build", "tail" : "(scenarioName: String, runState: RunState, result: ValidatedNel[FailedStep, Done], duration: FiniteDuration): ScenarioReport", "member" : "com.github.agourlay.cornichon.core.ScenarioReport.build", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#build(scenarioName:String,runState:com.github.agourlay.cornichon.core.RunState,result:cats.data.ValidatedNel[com.github.agourlay.cornichon.core.FailedStep,com.github.agourlay.cornichon.core.Done],duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.core.ScenarioReport", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "duration", "tail" : "(): FiniteDuration", "member" : "com.github.agourlay.cornichon.core.ScenarioReport.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "abstract def"}, {"label" : "logs", "tail" : "(): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.ScenarioReport.logs", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#logs:List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "abstract def"}, {"label" : "session", "tail" : "(): Session", "member" : "com.github.agourlay.cornichon.core.ScenarioReport.session", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "abstract def"}, {"label" : "scenarioName", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.ScenarioReport.scenarioName", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#scenarioName:String", "kind" : "abstract def"}, {"label" : "isSuccess", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.core.ScenarioReport.isSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioReport.html#isSuccess:Boolean", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.ScenarioRunner", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html", "members_object" : [{"label" : "runStepsShortCircuiting", "tail" : "(steps: List[Step], runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.ScenarioRunner.runStepsShortCircuiting", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#runStepsShortCircuiting(steps:List[com.github.agourlay.cornichon.core.Step],runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "final def"}, {"label" : "runScenario", "tail" : "(session: Session, context: FeatureContext)(scenario: Scenario): Task[ScenarioReport]", "member" : "com.github.agourlay.cornichon.core.ScenarioRunner.runScenario", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#runScenario(session:com.github.agourlay.cornichon.core.Session,context:com.github.agourlay.cornichon.core.FeatureContext)(scenario:com.github.agourlay.cornichon.core.Scenario):monix.eval.Task[com.github.agourlay.cornichon.core.ScenarioReport]", "kind" : "final def"}, {"label" : "handleThrowable", "tail" : "(currentStep: Step, runState: RunState, error: Throwable): (RunState, Either[FailedStep, Done])", "member" : "com.github.agourlay.cornichon.core.ScenarioRunner.handleThrowable", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#handleThrowable(currentStep:com.github.agourlay.cornichon.core.Step,runState:com.github.agourlay.cornichon.core.RunState,error:Throwable):(com.github.agourlay.cornichon.core.RunState,Either[com.github.agourlay.cornichon.core.FailedStep,com.github.agourlay.cornichon.core.Done])", "kind" : "def"}, {"label" : "handleErrors", "tail" : "(currentStep: Step, runState: RunState, errors: NonEmptyList[CornichonError]): (RunState, Either[FailedStep, Done])", "member" : "com.github.agourlay.cornichon.core.ScenarioRunner.handleErrors", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#handleErrors(currentStep:com.github.agourlay.cornichon.core.Step,runState:com.github.agourlay.cornichon.core.RunState,errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]):(com.github.agourlay.cornichon.core.RunState,Either[com.github.agourlay.cornichon.core.FailedStep,com.github.agourlay.cornichon.core.Done])", "kind" : "def"}, {"label" : "errorsToFailureStep", "tail" : "(currentStep: Step, depth: Int, errors: NonEmptyList[CornichonError], duration: Option[Duration]): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.core.ScenarioRunner.errorsToFailureStep", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#errorsToFailureStep(currentStep:com.github.agourlay.cornichon.core.Step,depth:Int,errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],duration:Option[scala.concurrent.duration.Duration]):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "def"}, {"label" : "successLog", "tail" : "(title: String, depth: Int, show: Boolean, duration: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.core.ScenarioRunner.successLog", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#successLog(title:String,depth:Int,show:Boolean,duration:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.core.ScenarioTitleLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.ScenarioTitleLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.ScenarioTitleLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.ScenarioTitleLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.ScenarioTitleLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.ScenarioTitleLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/ScenarioTitleLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.Session", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/Session$.html", "members_object" : [{"label" : "showSession", "tail" : ": Show[Session]", "member" : "com.github.agourlay.cornichon.core.Session.showSession", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#showSession:cats.Show[com.github.agourlay.cornichon.core.Session]", "kind" : "implicit val"}, {"label" : "monoidSession", "tail" : ": Monoid[Session]", "member" : "com.github.agourlay.cornichon.core.Session.monoidSession", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#monoidSession:cats.kernel.Monoid[com.github.agourlay.cornichon.core.Session]", "kind" : "implicit val"}, {"label" : "notAllowedInKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.Session.notAllowedInKey", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#notAllowedInKey:String", "kind" : "val"}, {"label" : "newEmpty", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.Session.newEmpty", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#newEmpty:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Session$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "rollbackKey", "tail" : "(key: String): Either[KeyNotFoundInSession, Session]", "member" : "com.github.agourlay.cornichon.core.Session.rollbackKey", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#rollbackKey(key:String):Either[com.github.agourlay.cornichon.core.KeyNotFoundInSession,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "removeKey", "tail" : "(key: String): Session", "member" : "com.github.agourlay.cornichon.core.Session.removeKey", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#removeKey(key:String):com.github.agourlay.cornichon.core.Session", "kind" : "def"}, {"label" : "addValuesUnsafe", "tail" : "(tuples: (String, String)*): Session", "member" : "com.github.agourlay.cornichon.core.Session.addValuesUnsafe", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#addValuesUnsafe(tuples:(String,String)*):com.github.agourlay.cornichon.core.Session", "kind" : "def"}, {"label" : "addValues", "tail" : "(tuples: (String, String)*): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.core.Session.addValues", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#addValues(tuples:(String,String)*):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "addValueUnsafe", "tail" : "(key: String, value: String): Session", "member" : "com.github.agourlay.cornichon.core.Session.addValueUnsafe", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#addValueUnsafe(key:String,value:String):com.github.agourlay.cornichon.core.Session", "kind" : "def"}, {"label" : "addValue", "tail" : "(key: String, value: String): Either[CornichonError, Session]", "member" : "com.github.agourlay.cornichon.core.Session.addValue", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#addValue(key:String,value:String):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]", "kind" : "def"}, {"label" : "getMandatoryPrevious", "tail" : "(key: String): Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.core.Session.getMandatoryPrevious", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getMandatoryPrevious(key:String):Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "def"}, {"label" : "getPrevious", "tail" : "(key: String): Either[CornichonError, Option[String]]", "member" : "com.github.agourlay.cornichon.core.Session.getPrevious", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getPrevious(key:String):Either[com.github.agourlay.cornichon.core.CornichonError,Option[String]]", "kind" : "def"}, {"label" : "getHistory", "tail" : "(key: String): Either[KeyNotFoundInSession, Vector[String]]", "member" : "com.github.agourlay.cornichon.core.Session.getHistory", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getHistory(key:String):Either[com.github.agourlay.cornichon.core.KeyNotFoundInSession,Vector[String]]", "kind" : "def"}, {"label" : "getList", "tail" : "(keys: Seq[String]): Either[CornichonError, List[String]]", "member" : "com.github.agourlay.cornichon.core.Session.getList", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getList(keys:Seq[String]):Either[com.github.agourlay.cornichon.core.CornichonError,List[String]]", "kind" : "def"}, {"label" : "getUnsafe", "tail" : "(key: String, stackingIndex: Option[Int]): String", "member" : "com.github.agourlay.cornichon.core.Session.getUnsafe", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getUnsafe(key:String,stackingIndex:Option[Int]):String", "kind" : "def"}, {"label" : "get", "tail" : "(sessionKey: SessionKey): Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.core.Session.get", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#get(sessionKey:com.github.agourlay.cornichon.core.SessionKey):Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "def"}, {"label" : "get", "tail" : "(key: String, stackingIndex: Option[Int]): Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.core.Session.get", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#get(key:String,stackingIndex:Option[Int]):Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "def"}, {"label" : "getOpt", "tail" : "(key: String, stackingIndex: Option[Int]): Option[String]", "member" : "com.github.agourlay.cornichon.core.Session.getOpt", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getOpt(key:String,stackingIndex:Option[Int]):Option[String]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.Session#<init>", "error" : "unsupported entity"}, {"label" : "content", "tail" : ": Map[String, Vector[String]]", "member" : "com.github.agourlay.cornichon.core.Session.content", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#content:Map[String,Vector[String]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Session.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/Session.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.SessionKey", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html", "members_object" : [{"label" : "showSessionKey", "tail" : ": Show[SessionKey]", "member" : "com.github.agourlay.cornichon.core.SessionKey.showSessionKey", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#showSessionKey:cats.Show[com.github.agourlay.cornichon.core.SessionKey]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "atIndex", "tail" : "(index: Int): SessionKey", "member" : "com.github.agourlay.cornichon.core.SessionKey.atIndex", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#atIndex(index:Int):com.github.agourlay.cornichon.core.SessionKey", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.SessionKey#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Option[Int]", "member" : "com.github.agourlay.cornichon.core.SessionKey.index", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#index:Option[Int]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.SessionKey.name", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/SessionKey.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.SessionValueGenerator", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : "(session: Session): () => A", "member" : "com.github.agourlay.cornichon.core.SessionValueGenerator.value", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#value(session:com.github.agourlay.cornichon.core.Session):()=>A", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.SessionValueGenerator#<init>", "error" : "unsupported entity"}, {"label" : "gen", "tail" : ": (Session) => A", "member" : "com.github.agourlay.cornichon.core.SessionValueGenerator.gen", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#gen:com.github.agourlay.cornichon.core.Session=>A", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.SessionValueGenerator.name", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/SessionValueGenerator.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.SessionValueStep", "trait" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html", "kind" : "trait", "members_trait" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.SessionValueStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "logOnSuccess", "tail" : "(result: Session, runState: RunState, executionTime: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.core.SessionValueStep.logOnSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#logOnSuccess(result:com.github.agourlay.cornichon.core.Session,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "abstract def"}, {"label" : "onError", "tail" : "(errors: NonEmptyList[CornichonError], runState: RunState, executionTime: Duration): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.core.SessionValueStep.onError", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#onError(errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "abstract def"}, {"label" : "runSessionValueStep", "tail" : "(runState: RunState): Task[Either[NonEmptyList[CornichonError], Session]]", "member" : "com.github.agourlay.cornichon.core.SessionValueStep.runSessionValueStep", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#runSessionValueStep(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[Either[cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],com.github.agourlay.cornichon.core.Session]]", "kind" : "abstract def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.Step.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Step.title", "link" : "com\/github\/agourlay\/cornichon\/core\/SessionValueStep.html#title:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.SimpleWrapperStep", "trait" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html", "kind" : "trait", "members_trait" : [{"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "indentLog", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.indentLog", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#indentLog:Boolean", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "onNestedSuccess", "tail" : "(resultRunState: RunState, runState: RunState, executionTime: Duration): RunState", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.onNestedSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#onNestedSuccess(resultRunState:com.github.agourlay.cornichon.core.RunState,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.RunState", "kind" : "abstract def"}, {"label" : "onNestedError", "tail" : "(failedStep: FailedStep, resultRunState: RunState, runState: RunState, executionTime: Duration): (RunState, FailedStep)", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.onNestedError", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#onNestedError(failedStep:com.github.agourlay.cornichon.core.FailedStep,resultRunState:com.github.agourlay.cornichon.core.RunState,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.RunState,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "abstract def"}, {"label" : "nestedToRun", "tail" : "(): List[Step]", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.nestedToRun", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#nestedToRun:List[com.github.agourlay.cornichon.core.Step]", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Step.title", "link" : "com\/github\/agourlay\/cornichon\/core\/SimpleWrapperStep.html#title:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.Step", "object" : "com\/github\/agourlay\/cornichon\/core\/Step$.html", "members_object" : [{"label" : "eval", "tail" : "(f: => Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.eval", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#eval(f:=>com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Step$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/core\/Step.html", "kind" : "trait", "members_trait" : [{"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.Step.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "abstract val"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.Step.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "abstract def"}, {"label" : "title", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Step.title", "link" : "com\/github\/agourlay\/cornichon\/core\/Step.html#title:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.core.StepExecutionError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.StepExecutionError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.StepExecutionError#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.core.StepExecutionError.e", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#e:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/StepExecutionError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.SuccessLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.SuccessLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.SuccessLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.SuccessLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.SuccessLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.SuccessLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/SuccessLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.SuccessScenarioReport", "shortDescription" : "", "members_case class" : [{"label" : "shouldShowLogs", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.shouldShowLogs", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#shouldShowLogs:Boolean", "kind" : "lazy val"}, {"label" : "logs", "tail" : ": List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.logs", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#logs:List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "lazy val"}, {"label" : "isSuccess", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.isSuccess", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#isSuccess:Boolean", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport#<init>", "error" : "unsupported entity"}, {"label" : "seed", "tail" : ": Long", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.seed", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#seed:Long", "kind" : "val"}, {"label" : "duration", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "logStack", "tail" : ": List[LogInstruction]", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.logStack", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#logStack:List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "val"}, {"label" : "session", "tail" : ": Session", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.session", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#session:com.github.agourlay.cornichon.core.Session", "kind" : "val"}, {"label" : "scenarioName", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.SuccessScenarioReport.scenarioName", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#scenarioName:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/SuccessScenarioReport.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.ValueGenerator", "shortDescription" : "", "members_case class" : [{"label" : "value", "tail" : "(session: Session): () => A", "member" : "com.github.agourlay.cornichon.core.ValueGenerator.value", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#value(session:com.github.agourlay.cornichon.core.Session):()=>A", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.core.ValueGenerator#<init>", "error" : "unsupported entity"}, {"label" : "gen", "tail" : ": () => A", "member" : "com.github.agourlay.cornichon.core.ValueGenerator.gen", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#gen:()=>A", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.ValueGenerator.name", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#name:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/ValueGenerator.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.WarningLogInstruction", "shortDescription" : "", "members_case class" : [{"label" : "colorized", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.WarningLogInstruction.colorized", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#colorized:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.core.WarningLogInstruction#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": Option[Duration]", "member" : "com.github.agourlay.cornichon.core.WarningLogInstruction.duration", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#duration:Option[scala.concurrent.duration.Duration]", "kind" : "val"}, {"label" : "marginNb", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.core.WarningLogInstruction.marginNb", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#marginNb:Int", "kind" : "val"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.WarningLogInstruction.message", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#message:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "completeMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.completeMessage", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#completeMessage:String", "kind" : "lazy val"}, {"label" : "fullMargin", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.LogInstruction.fullMargin", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#fullMargin:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/core\/WarningLogInstruction.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.core.WrapperStep", "trait" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html", "kind" : "trait", "members_trait" : [{"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.Step.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "abstract val"}, {"label" : "title", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.Step.title", "link" : "com\/github\/agourlay\/cornichon\/core\/WrapperStep.html#title:String", "kind" : "abstract def"}], "shortDescription" : ""}], "com.github" : [], "com.github.agourlay.cornichon.http.client" : [{"name" : "com.github.agourlay.cornichon.http.client.Http4sClient", "shortDescription" : "", "members_class" : [{"label" : "parseUri", "tail" : "(uri: String): Either[CornichonError, Uri]", "member" : "com.github.agourlay.cornichon.http.client.Http4sClient.parseUri", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#parseUri(uri:String):Either[com.github.agourlay.cornichon.core.CornichonError,org.http4s.Uri]", "kind" : "def"}, {"label" : "paramsFromUrl", "tail" : "(url: String): Either[CornichonError, List[(String, String)]]", "member" : "com.github.agourlay.cornichon.http.client.Http4sClient.paramsFromUrl", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#paramsFromUrl(url:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[(String,String)]]", "kind" : "def"}, {"label" : "shutdown", "tail" : "(): Task[Done]", "member" : "com.github.agourlay.cornichon.http.client.Http4sClient.shutdown", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#shutdown():monix.eval.Task[com.github.agourlay.cornichon.core.Done]", "kind" : "def"}, {"label" : "openStream", "tail" : "(req: HttpStreamedRequest, t: FiniteDuration): Task[Either[CornichonError, CornichonHttpResponse]]", "member" : "com.github.agourlay.cornichon.http.client.Http4sClient.openStream", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#openStream(req:com.github.agourlay.cornichon.http.HttpStreamedRequest,t:scala.concurrent.duration.FiniteDuration):monix.eval.Task[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.http.CornichonHttpResponse]]", "kind" : "def"}, {"label" : "runRequest", "tail" : "(cReq: HttpRequest[A], t: FiniteDuration)(arg0: Show[A], ee: EntityEncoder[Task, A]): EitherT[Task, CornichonError, CornichonHttpResponse]", "member" : "com.github.agourlay.cornichon.http.client.Http4sClient.runRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#runRequest[A](cReq:com.github.agourlay.cornichon.http.HttpRequest[A],t:scala.concurrent.duration.FiniteDuration)(implicitevidence$1:cats.Show[A],implicitee:org.http4s.EntityEncoder[monix.eval.Task,A]):cats.data.EitherT[monix.eval.Task,com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.http.CornichonHttpResponse]", "kind" : "def"}, {"label" : "addQueryParams", "tail" : "(uri: Uri, moreParams: Seq[(String, String)]): Uri", "member" : "com.github.agourlay.cornichon.http.client.Http4sClient.addQueryParams", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#addQueryParams(uri:org.http4s.Uri,moreParams:Seq[(String,String)]):org.http4s.Uri", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.client.Http4sClient#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/http\/client\/Http4sClient.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.http.client.HttpClient", "trait" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "paramsFromUrl", "tail" : "(url: String): Either[CornichonError, Seq[(String, String)]]", "member" : "com.github.agourlay.cornichon.http.client.HttpClient.paramsFromUrl", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#paramsFromUrl(url:String):Either[com.github.agourlay.cornichon.core.CornichonError,Seq[(String,String)]]", "kind" : "abstract def"}, {"label" : "shutdown", "tail" : "(): Task[Done]", "member" : "com.github.agourlay.cornichon.http.client.HttpClient.shutdown", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#shutdown():monix.eval.Task[com.github.agourlay.cornichon.core.Done]", "kind" : "abstract def"}, {"label" : "openStream", "tail" : "(req: HttpStreamedRequest, t: FiniteDuration): Task[Either[CornichonError, CornichonHttpResponse]]", "member" : "com.github.agourlay.cornichon.http.client.HttpClient.openStream", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#openStream(req:com.github.agourlay.cornichon.http.HttpStreamedRequest,t:scala.concurrent.duration.FiniteDuration):monix.eval.Task[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.http.CornichonHttpResponse]]", "kind" : "abstract def"}, {"label" : "runRequest", "tail" : "(cReq: HttpRequest[A], t: FiniteDuration)(arg0: Show[A], ee: EntityEncoder[Task, A]): EitherT[Task, CornichonError, CornichonHttpResponse]", "member" : "com.github.agourlay.cornichon.http.client.HttpClient.runRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/HttpClient.html#runRequest[A](cReq:com.github.agourlay.cornichon.http.HttpRequest[A],t:scala.concurrent.duration.FiniteDuration)(implicitevidence$1:cats.Show[A],implicitee:org.http4s.EntityEncoder[monix.eval.Task,A]):cats.data.EitherT[monix.eval.Task,com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.http.CornichonHttpResponse]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.http.client.NoOpHttpClient", "shortDescription" : "", "members_class" : [{"label" : "paramsFromUrl", "tail" : "(url: String): Right[Nothing, Nil.type]", "member" : "com.github.agourlay.cornichon.http.client.NoOpHttpClient.paramsFromUrl", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#paramsFromUrl(url:String):scala.util.Right[Nothing,scala.collection.immutable.Nil.type]", "kind" : "def"}, {"label" : "shutdown", "tail" : "(): Task[Done.type]", "member" : "com.github.agourlay.cornichon.http.client.NoOpHttpClient.shutdown", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#shutdown():monix.eval.Task[com.github.agourlay.cornichon.core.Done.type]", "kind" : "def"}, {"label" : "openStream", "tail" : "(req: HttpStreamedRequest, t: FiniteDuration): Task[Either[Nothing, CornichonHttpResponse]]", "member" : "com.github.agourlay.cornichon.http.client.NoOpHttpClient.openStream", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#openStream(req:com.github.agourlay.cornichon.http.HttpStreamedRequest,t:scala.concurrent.duration.FiniteDuration):monix.eval.Task[Either[Nothing,com.github.agourlay.cornichon.http.CornichonHttpResponse]]", "kind" : "def"}, {"label" : "runRequest", "tail" : "(cReq: HttpRequest[A], t: FiniteDuration)(arg0: Show[A], ee: EntityEncoder[Task, A]): EitherT[Task, CornichonError, CornichonHttpResponse]", "member" : "com.github.agourlay.cornichon.http.client.NoOpHttpClient.runRequest", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#runRequest[A](cReq:com.github.agourlay.cornichon.http.HttpRequest[A],t:scala.concurrent.duration.FiniteDuration)(implicitevidence$1:cats.Show[A],implicitee:org.http4s.EntityEncoder[monix.eval.Task,A]):cats.data.EitherT[monix.eval.Task,com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.http.CornichonHttpResponse]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.http.client.NoOpHttpClient#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/http\/client\/NoOpHttpClient.html", "kind" : "class"}], "com.github.agourlay.cornichon.json" : [{"name" : "com.github.agourlay.cornichon.json.ArrayFieldProjection", "shortDescription" : "", "members_case class" : [{"label" : "pretty", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.ArrayFieldProjection.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#pretty:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.json.ArrayFieldProjection#<init>", "error" : "unsupported entity"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.ArrayFieldProjection.field", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#field:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldProjection.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.ArrayFieldSelection", "shortDescription" : "", "members_case class" : [{"label" : "pretty", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.ArrayFieldSelection.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#pretty:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.json.ArrayFieldSelection#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.json.ArrayFieldSelection.index", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#index:Int", "kind" : "val"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.ArrayFieldSelection.field", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#field:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/ArrayFieldSelection.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.CornichonJson", "object" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html", "members_object" : [{"label" : "GqlHelper", "tail" : "", "member" : "com.github.agourlay.cornichon.json.CornichonJson.GqlHelper", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#GqlHelperextendsAnyVal", "kind" : "implicit final class"}, {"label" : "sessionJson", "tail" : "", "member" : "com.github.agourlay.cornichon.json.CornichonJson.sessionJson", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#sessionJsonextendsAnyRef", "kind" : "implicit class"}, {"label" : "findAllPathWithValue", "tail" : "(values: List[String], json: Json): List[JsonPath]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.findAllPathWithValue", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#findAllPathWithValue(values:List[String],json:io.circe.Json):List[com.github.agourlay.cornichon.json.JsonPath]", "kind" : "def"}, {"label" : "whitelistingValue", "tail" : "(first: Json, second: Json): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.whitelistingValue", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#whitelistingValue(first:io.circe.Json,second:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "decodeAs", "tail" : "(json: Json)(arg0: Decoder[A]): Either[CornichonError, A]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.decodeAs", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#decodeAs[A](json:io.circe.Json)(implicitevidence$5:io.circe.Decoder[A]):Either[com.github.agourlay.cornichon.core.CornichonError,A]", "kind" : "def"}, {"label" : "diffPatch", "tail" : "(first: Json, second: Json): JsonPatch[Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.diffPatch", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#diffPatch(first:io.circe.Json,second:io.circe.Json):diffson.jsonpatch.JsonPatch[io.circe.Json]", "kind" : "def"}, {"label" : "prettyPrint", "tail" : "(json: Json): String", "member" : "com.github.agourlay.cornichon.json.CornichonJson.prettyPrint", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#prettyPrint(json:io.circe.Json):String", "kind" : "def"}, {"label" : "extract", "tail" : "(json: Json, path: String): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.extract", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#extract(json:io.circe.Json,path:String):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "jsonStringValue", "tail" : "(j: Json): String", "member" : "com.github.agourlay.cornichon.json.CornichonJson.jsonStringValue", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#jsonStringValue(j:io.circe.Json):String", "kind" : "def"}, {"label" : "removeFieldsByPath", "tail" : "(input: Json, paths: Seq[JsonPath]): Json", "member" : "com.github.agourlay.cornichon.json.CornichonJson.removeFieldsByPath", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#removeFieldsByPath(input:io.circe.Json,paths:Seq[com.github.agourlay.cornichon.json.JsonPath]):io.circe.Json", "kind" : "def"}, {"label" : "selectMandatoryArrayJsonPath", "tail" : "(json: String, path: JsonPath): Either[CornichonError, Vector[Json]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.selectMandatoryArrayJsonPath", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#selectMandatoryArrayJsonPath(json:String,path:com.github.agourlay.cornichon.json.JsonPath):Either[com.github.agourlay.cornichon.core.CornichonError,Vector[io.circe.Json]]", "kind" : "def"}, {"label" : "parseArray", "tail" : "(input: String): Either[CornichonError, Vector[Json]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseArray", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseArray(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,Vector[io.circe.Json]]", "kind" : "def"}, {"label" : "jsonArrayValues", "tail" : "(json: Json): Either[CornichonError, Vector[Json]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.jsonArrayValues", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#jsonArrayValues(json:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,Vector[io.circe.Json]]", "kind" : "def"}, {"label" : "parseGraphQLJson", "tail" : "(input: String): Either[MalformedGraphQLJsonError[String], Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseGraphQLJson", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseGraphQLJson(input:String):Either[com.github.agourlay.cornichon.json.MalformedGraphQLJsonError[String],io.circe.Json]", "kind" : "def"}, {"label" : "parseDataTableRaw", "tail" : "(table: String): Either[CornichonError, List[Map[String, String]]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDataTableRaw", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseDataTableRaw(table:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[Map[String,String]]]", "kind" : "def"}, {"label" : "parseDataTable", "tail" : "(table: String): Either[CornichonError, List[JsonObject]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDataTable", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseDataTable(table:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[io.circe.JsonObject]]", "kind" : "def"}, {"label" : "isJsonString", "tail" : "(s: String): Boolean", "member" : "com.github.agourlay.cornichon.json.CornichonJson.isJsonString", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#isJsonString(s:String):Boolean", "kind" : "def"}, {"label" : "parseString", "tail" : "(s: String): Either[MalformedJsonError[String], Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseString", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseString(s:String):Either[com.github.agourlay.cornichon.json.MalformedJsonError[String],io.circe.Json]", "kind" : "def"}, {"label" : "parseDslJsonUnsafe", "tail" : "(input: A)(arg0: Encoder[A], arg1: Show[A]): Json", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDslJsonUnsafe", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseDslJsonUnsafe[A](input:A)(implicitevidence$3:io.circe.Encoder[A],implicitevidence$4:cats.Show[A]):io.circe.Json", "kind" : "def"}, {"label" : "parseDslJson", "tail" : "(input: A)(arg0: Encoder[A], arg1: Show[A]): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDslJson", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#parseDslJson[A](input:A)(implicitevidence$1:io.circe.Encoder[A],implicitevidence$2:cats.Show[A]):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html", "kind" : "trait", "members_trait" : [{"label" : "findAllPathWithValue", "tail" : "(values: List[String], json: Json): List[JsonPath]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.findAllPathWithValue", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#findAllPathWithValue(values:List[String],json:io.circe.Json):List[com.github.agourlay.cornichon.json.JsonPath]", "kind" : "def"}, {"label" : "whitelistingValue", "tail" : "(first: Json, second: Json): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.whitelistingValue", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#whitelistingValue(first:io.circe.Json,second:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "decodeAs", "tail" : "(json: Json)(arg0: Decoder[A]): Either[CornichonError, A]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.decodeAs", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#decodeAs[A](json:io.circe.Json)(implicitevidence$5:io.circe.Decoder[A]):Either[com.github.agourlay.cornichon.core.CornichonError,A]", "kind" : "def"}, {"label" : "diffPatch", "tail" : "(first: Json, second: Json): JsonPatch[Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.diffPatch", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#diffPatch(first:io.circe.Json,second:io.circe.Json):diffson.jsonpatch.JsonPatch[io.circe.Json]", "kind" : "def"}, {"label" : "prettyPrint", "tail" : "(json: Json): String", "member" : "com.github.agourlay.cornichon.json.CornichonJson.prettyPrint", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#prettyPrint(json:io.circe.Json):String", "kind" : "def"}, {"label" : "extract", "tail" : "(json: Json, path: String): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.extract", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#extract(json:io.circe.Json,path:String):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "jsonStringValue", "tail" : "(j: Json): String", "member" : "com.github.agourlay.cornichon.json.CornichonJson.jsonStringValue", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#jsonStringValue(j:io.circe.Json):String", "kind" : "def"}, {"label" : "removeFieldsByPath", "tail" : "(input: Json, paths: Seq[JsonPath]): Json", "member" : "com.github.agourlay.cornichon.json.CornichonJson.removeFieldsByPath", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#removeFieldsByPath(input:io.circe.Json,paths:Seq[com.github.agourlay.cornichon.json.JsonPath]):io.circe.Json", "kind" : "def"}, {"label" : "selectMandatoryArrayJsonPath", "tail" : "(json: String, path: JsonPath): Either[CornichonError, Vector[Json]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.selectMandatoryArrayJsonPath", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#selectMandatoryArrayJsonPath(json:String,path:com.github.agourlay.cornichon.json.JsonPath):Either[com.github.agourlay.cornichon.core.CornichonError,Vector[io.circe.Json]]", "kind" : "def"}, {"label" : "parseArray", "tail" : "(input: String): Either[CornichonError, Vector[Json]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseArray", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseArray(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,Vector[io.circe.Json]]", "kind" : "def"}, {"label" : "jsonArrayValues", "tail" : "(json: Json): Either[CornichonError, Vector[Json]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.jsonArrayValues", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#jsonArrayValues(json:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,Vector[io.circe.Json]]", "kind" : "def"}, {"label" : "parseGraphQLJson", "tail" : "(input: String): Either[MalformedGraphQLJsonError[String], Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseGraphQLJson", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseGraphQLJson(input:String):Either[com.github.agourlay.cornichon.json.MalformedGraphQLJsonError[String],io.circe.Json]", "kind" : "def"}, {"label" : "parseDataTableRaw", "tail" : "(table: String): Either[CornichonError, List[Map[String, String]]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDataTableRaw", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseDataTableRaw(table:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[Map[String,String]]]", "kind" : "def"}, {"label" : "parseDataTable", "tail" : "(table: String): Either[CornichonError, List[JsonObject]]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDataTable", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseDataTable(table:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[io.circe.JsonObject]]", "kind" : "def"}, {"label" : "isJsonString", "tail" : "(s: String): Boolean", "member" : "com.github.agourlay.cornichon.json.CornichonJson.isJsonString", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#isJsonString(s:String):Boolean", "kind" : "def"}, {"label" : "parseString", "tail" : "(s: String): Either[MalformedJsonError[String], Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseString", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseString(s:String):Either[com.github.agourlay.cornichon.json.MalformedJsonError[String],io.circe.Json]", "kind" : "def"}, {"label" : "parseDslJsonUnsafe", "tail" : "(input: A)(arg0: Encoder[A], arg1: Show[A]): Json", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDslJsonUnsafe", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseDslJsonUnsafe[A](input:A)(implicitevidence$3:io.circe.Encoder[A],implicitevidence$4:cats.Show[A]):io.circe.Json", "kind" : "def"}, {"label" : "parseDslJson", "tail" : "(input: A)(arg0: Encoder[A], arg1: Show[A]): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.CornichonJson.parseDslJson", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#parseDslJson[A](input:A)(implicitevidence$1:io.circe.Encoder[A],implicitevidence$2:cats.Show[A]):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/CornichonJson.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.json.FieldSelection", "shortDescription" : "", "members_case class" : [{"label" : "pretty", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.FieldSelection.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#pretty:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.json.FieldSelection#<init>", "error" : "unsupported entity"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.FieldSelection.field", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#field:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/FieldSelection.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.GqlString", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html", "members_object" : [{"label" : "gqlEncode", "tail" : ": Encoder[GqlString]", "member" : "com.github.agourlay.cornichon.json.GqlString.gqlEncode", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#gqlEncode:io.circe.Encoder[com.github.agourlay.cornichon.json.GqlString]", "kind" : "implicit val"}, {"label" : "gqlShow", "tail" : ": Show[GqlString]", "member" : "com.github.agourlay.cornichon.json.GqlString.gqlShow", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#gqlShow:cats.Show[com.github.agourlay.cornichon.json.GqlString]", "kind" : "implicit val"}, {"label" : "gqlResolvableForm", "tail" : ": Resolvable[GqlString]", "member" : "com.github.agourlay.cornichon.json.GqlString.gqlResolvableForm", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#gqlResolvableForm:com.github.agourlay.cornichon.resolver.Resolvable[com.github.agourlay.cornichon.json.GqlString]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.github.agourlay.cornichon.json.GqlString#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.GqlString.input", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/GqlString.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.JsonAssertionErrors", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html", "members_object" : [{"label" : "MatchersNotSupportedInAsArray", "tail" : "", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.MatchersNotSupportedInAsArray", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#MatchersNotSupportedInAsArrayextendsCornichonErrorwithProductwithSerializable", "kind" : "case class"}, {"label" : "arrayContainsError", "tail" : "(expected: Vector[Json], sourceArray: Vector[Json], contains: Boolean): String", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.arrayContainsError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#arrayContainsError(expected:Vector[io.circe.Json],sourceArray:Vector[io.circe.Json],contains:Boolean):String", "kind" : "def"}, {"label" : "jsonArrayNotEmptyError", "tail" : "(context: String): String", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.jsonArrayNotEmptyError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#jsonArrayNotEmptyError(context:String):String", "kind" : "def"}, {"label" : "arraySizeError", "tail" : "(expected: Int, arrayElements: Vector[Json]): String", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.arraySizeError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#arraySizeError(expected:Int,arrayElements:Vector[io.circe.Json]):String", "kind" : "def"}, {"label" : "UseIgnoringEach", "tail" : "", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.UseIgnoringEach", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#UseIgnoringEach", "kind" : "object"}, {"label" : "InvalidIgnoringConfigError", "tail" : "", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.InvalidIgnoringConfigError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#InvalidIgnoringConfigError", "kind" : "object"}, {"label" : "keyIsAbsentError", "tail" : "(keyName: String, source: String): String", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.keyIsAbsentError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#keyIsAbsentError(keyName:String,source:String):String", "kind" : "def"}, {"label" : "keyIsPresentError", "tail" : "(keyName: String, source: Json): String", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.keyIsPresentError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#keyIsPresentError(keyName:String,source:io.circe.Json):String", "kind" : "def"}, {"label" : "keyIsNotNullError", "tail" : "(keyName: String, source: String): String", "member" : "com.github.agourlay.cornichon.json.JsonAssertionErrors.keyIsNotNullError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#keyIsNotNullError(keyName:String,source:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonAssertionErrors$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.json.JsonDecodingFailure", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonDecodingFailure.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.JsonDecodingFailure#<init>", "error" : "unsupported entity"}, {"label" : "actualType", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonDecodingFailure.actualType", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#actualType:String", "kind" : "val"}, {"label" : "json", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.json.JsonDecodingFailure.json", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#json:io.circe.Json", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/JsonDecodingFailure.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.JsonDsl", "trait" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html", "kind" : "trait", "members_trait" : [{"label" : "show_key_as_json", "tail" : "(key: String, index: Option[Int]): Step", "member" : "com.github.agourlay.cornichon.json.JsonDsl.show_key_as_json", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#show_key_as_json(key:String,index:Option[Int]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.json.JsonError", "trait" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html", "kind" : "trait", "members_trait" : [{"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.core.CornichonError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonError.html#baseErrorMessage:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.json.JsonPath", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html", "members_object" : [{"label" : "runStrict", "tail" : "(path: String, json: String): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.JsonPath.runStrict", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#runStrict(path:String,json:String):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "run", "tail" : "(path: String, json: String): Either[CornichonError, Option[Json]]", "member" : "com.github.agourlay.cornichon.json.JsonPath.run", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#run(path:String,json:String):Either[com.github.agourlay.cornichon.core.CornichonError,Option[io.circe.Json]]", "kind" : "def"}, {"label" : "runStrict", "tail" : "(path: String, json: Json): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.JsonPath.runStrict", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#runStrict(path:String,json:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "run", "tail" : "(path: String, json: Json): Either[CornichonError, Option[Json]]", "member" : "com.github.agourlay.cornichon.json.JsonPath.run", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#run(path:String,json:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,Option[io.circe.Json]]", "kind" : "def"}, {"label" : "parse", "tail" : "(path: String): Either[CornichonError, JsonPath]", "member" : "com.github.agourlay.cornichon.json.JsonPath.parse", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#parse(path:String):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.json.JsonPath]", "kind" : "def"}, {"label" : "show", "tail" : ": Show[JsonPath]", "member" : "com.github.agourlay.cornichon.json.JsonPath.show", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#show:cats.Show[com.github.agourlay.cornichon.json.JsonPath]", "kind" : "implicit val"}, {"label" : "rootPath", "tail" : ": JsonPath", "member" : "com.github.agourlay.cornichon.json.JsonPath.rootPath", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#rootPath:com.github.agourlay.cornichon.json.JsonPath", "kind" : "val"}, {"label" : "root", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPath.root", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#root:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "removeFromJson", "tail" : "(input: Json): Json", "member" : "com.github.agourlay.cornichon.json.JsonPath.removeFromJson", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#removeFromJson(input:io.circe.Json):io.circe.Json", "kind" : "def"}, {"label" : "runStrict", "tail" : "(json: String): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.JsonPath.runStrict", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#runStrict(json:String):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "run", "tail" : "(json: String): Either[CornichonError, Option[Json]]", "member" : "com.github.agourlay.cornichon.json.JsonPath.run", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#run(json:String):Either[com.github.agourlay.cornichon.core.CornichonError,Option[io.circe.Json]]", "kind" : "def"}, {"label" : "runStrict", "tail" : "(superSet: Json): Either[CornichonError, Json]", "member" : "com.github.agourlay.cornichon.json.JsonPath.runStrict", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#runStrict(superSet:io.circe.Json):Either[com.github.agourlay.cornichon.core.CornichonError,io.circe.Json]", "kind" : "def"}, {"label" : "run", "tail" : "(superSet: Json): Option[Json]", "member" : "com.github.agourlay.cornichon.json.JsonPath.run", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#run(superSet:io.circe.Json):Option[io.circe.Json]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.json.JsonPath#<init>", "error" : "unsupported entity"}, {"label" : "operations", "tail" : ": List[JsonPathOperation]", "member" : "com.github.agourlay.cornichon.json.JsonPath.operations", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#operations:List[com.github.agourlay.cornichon.json.JsonPathOperation]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/JsonPath.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.JsonPathError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPathError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.JsonPathError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.json.JsonPathError.error", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#error:Throwable", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPathError.input", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/JsonPathError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.JsonPathOperation", "trait" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pretty", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.json.JsonPathOperation.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#pretty:String", "kind" : "abstract def"}, {"label" : "field", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.json.JsonPathOperation.field", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathOperation.html#field:String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.json.JsonPathParser", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html", "members_class" : [{"label" : "__SubParserInput", "tail" : "", "member" : "org.parboiled2.Parser.__SubParserInput", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__SubParserInputextendsParserInput", "kind" : "class"}, {"label" : "TracingBubbleException", "tail" : "", "member" : "org.parboiled2.Parser.TracingBubbleException", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#TracingBubbleExceptionextendsRuntimeExceptionwithNoStackTrace", "kind" : "class"}, {"label" : "ActionOperator", "tail" : "", "member" : "org.parboiled2.RuleDSLActions.ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#ActionOperator[I<:<?>,O<:<?>,Ops<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "WithSeparatedBy", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#WithSeparatedBy[I<:<?>,O<:<?>]extendsAnyRef", "kind" : "trait"}, {"label" : "NTimes", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.NTimes", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#NTimesextendsAnyRef", "kind" : "sealed trait"}, {"label" : "CharRangeSupport", "tail" : "", "member" : "org.parboiled2.RuleDSLBasics.CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#CharRangeSupportextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Digits", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.Digits", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#Digits:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "Number", "tail" : "(): Rule[HNil, ::[Int, HNil]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.Number", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#Number:org.parboiled2.Rule[shapeless.HNil,Int::shapeless.HNil]", "kind" : "def"}, {"label" : "FieldWithDot", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.FieldWithDot", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#FieldWithDot:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "Field", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.Field", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#Field:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "optIndex", "tail" : "(): Rule[HNil, ::[Option[Any], HNil]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.optIndex", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#optIndex:org.parboiled2.Rule[shapeless.HNil,Option[Any]::shapeless.HNil]", "kind" : "def"}, {"label" : "SegmentRule", "tail" : "(): Rule[HNil, ::[JsonPathOperation, HNil]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.SegmentRule", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#SegmentRule:org.parboiled2.Rule[shapeless.HNil,com.github.agourlay.cornichon.json.JsonPathOperation::shapeless.HNil]", "kind" : "def"}, {"label" : "placeholdersRule", "tail" : "(): Rule[HNil, ::[Seq[JsonPathOperation], HNil]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.placeholdersRule", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#placeholdersRule:org.parboiled2.Rule[shapeless.HNil,Seq[com.github.agourlay.cornichon.json.JsonPathOperation]::shapeless.HNil]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.json.JsonPathParser#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": ParserInput", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.input", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#input:org.parboiled2.ParserInput", "kind" : "val"}, {"label" : "__hardFail", "tail" : "(expected: String): Nothing", "member" : "org.parboiled2.Parser.__hardFail", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__hardFail(expected:String):Nothing", "kind" : "def"}, {"label" : "__matchMapWrapped", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMapWrapped", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchMapWrapped(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchMap", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMap", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchMap(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchNoneOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchNoneOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchNoneOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchAnyOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchAnyOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchAnyOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchIgnoreCaseStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchIgnoreCaseString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__matchString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__push", "tail" : "(value: Any): Boolean", "member" : "org.parboiled2.Parser.__push", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__push(value:Any):Boolean", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(prefix: List[NonTerminal], terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__bubbleUp(prefix:List[org.parboiled2.RuleTrace.NonTerminal],terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__bubbleUp(terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__registerMismatch", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__registerMismatch", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__registerMismatch():Boolean", "kind" : "def"}, {"label" : "__exitQuiet", "tail" : "(saved: Int): Unit", "member" : "org.parboiled2.Parser.__exitQuiet", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__exitQuiet(saved:Int):Unit", "kind" : "def"}, {"label" : "__enterQuiet", "tail" : "(): Int", "member" : "org.parboiled2.Parser.__enterQuiet", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__enterQuiet():Int", "kind" : "def"}, {"label" : "__exitAtomic", "tail" : "(saved: Boolean): Unit", "member" : "org.parboiled2.Parser.__exitAtomic", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__exitAtomic(saved:Boolean):Unit", "kind" : "def"}, {"label" : "__enterAtomic", "tail" : "(start: Int): Boolean", "member" : "org.parboiled2.Parser.__enterAtomic", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__enterAtomic(start:Int):Boolean", "kind" : "def"}, {"label" : "__exitNotPredicate", "tail" : "(saved: AnyRef): Unit", "member" : "org.parboiled2.Parser.__exitNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__exitNotPredicate(saved:AnyRef):Unit", "kind" : "def"}, {"label" : "__enterNotPredicate", "tail" : "(): AnyRef", "member" : "org.parboiled2.Parser.__enterNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__enterNotPredicate():AnyRef", "kind" : "def"}, {"label" : "__restoreState", "tail" : "(mark: Mark): Unit", "member" : "org.parboiled2.Parser.__restoreState", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__restoreState(mark:org.parboiled2.Parser.Mark):Unit", "kind" : "def"}, {"label" : "__saveState", "tail" : "(): Mark", "member" : "org.parboiled2.Parser.__saveState", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__saveState:org.parboiled2.Parser.Mark", "kind" : "def"}, {"label" : "__updateMaxCursor", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__updateMaxCursor", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__updateMaxCursor():Boolean", "kind" : "def"}, {"label" : "__advance", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__advance", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__advance():Boolean", "kind" : "def"}, {"label" : "__run", "tail" : "(rule: => RuleN[L])(scheme: DeliveryScheme[L]): Result", "member" : "org.parboiled2.Parser.__run", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__run[L<:shapeless.HList](rule:=>org.parboiled2.RuleN[L])(implicitscheme:org.parboiled2.Parser.DeliveryScheme[L]):scheme.Result", "kind" : "def"}, {"label" : "__inErrorAnalysis", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__inErrorAnalysis", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#__inErrorAnalysis:Boolean", "kind" : "def"}, {"label" : "copyStateFrom", "tail" : "(other: Parser, offset: Int): Unit", "member" : "org.parboiled2.Parser.copyStateFrom", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#copyStateFrom(other:org.parboiled2.Parser,offset:Int):Unit", "kind" : "def"}, {"label" : "formatError", "tail" : "(error: ParseError, formatter: ErrorFormatter): String", "member" : "org.parboiled2.Parser.formatError", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#formatError(error:org.parboiled2.ParseError,formatter:org.parboiled2.ErrorFormatter):String", "kind" : "def"}, {"label" : "errorTraceCollectionLimit", "tail" : "(): Int", "member" : "org.parboiled2.Parser.errorTraceCollectionLimit", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#errorTraceCollectionLimit:Int", "kind" : "def"}, {"label" : "valueStack", "tail" : "(): ValueStack", "member" : "org.parboiled2.Parser.valueStack", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#valueStack:org.parboiled2.ValueStack", "kind" : "def"}, {"label" : "charAtRC", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAtRC", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#charAtRC(offset:Int):Char", "kind" : "def"}, {"label" : "charAt", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAt", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#charAt(offset:Int):Char", "kind" : "def"}, {"label" : "lastChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.lastChar", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#lastChar:Char", "kind" : "def"}, {"label" : "cursorChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.cursorChar", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#cursorChar:Char", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Int", "member" : "org.parboiled2.Parser.cursor", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#cursor:Int", "kind" : "def"}, {"label" : "namedRule", "tail" : "(name: String)(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.namedRule", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#namedRule[I<:shapeless.HList,O<:shapeless.HList](name:String)(r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.rule", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#rule[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule2ActionOperator", "tail" : "(r: Rule[I, O])(ops: ActionOps[I, O]): ActionOperator[I, O, Out]", "member" : "org.parboiled2.RuleDSLActions.rule2ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#rule2ActionOperator[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitops:org.parboiled2.support.ActionOps[I,O]):RuleDSLActions.this.ActionOperator[I,O,ops.Out]", "kind" : "implicit def"}, {"label" : "drop", "tail" : "(h: HListable[T]): PopRule[Out]", "member" : "org.parboiled2.RuleDSLActions.drop", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#drop[T](implicith:org.parboiled2.support.HListable[T]):org.parboiled2.PopRule[h.Out]", "kind" : "def"}, {"label" : "push", "tail" : "(value: T)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLActions.push", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#push[T](value:T)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "run", "tail" : "(arg: T)(rr: RunResult[T]): Out", "member" : "org.parboiled2.RuleDSLActions.run", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#run[T](arg:T)(implicitrr:org.parboiled2.support.RunResult[T]):rr.Out", "kind" : "def"}, {"label" : "test", "tail" : "(condition: Boolean): Rule0", "member" : "org.parboiled2.RuleDSLActions.test", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#test(condition:Boolean):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "capture", "tail" : "(r: Rule[I, O])(p: Prepend[O, ::[String, HNil]]): Rule[I, Out]", "member" : "org.parboiled2.RuleDSLActions.capture", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#capture[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitp:shapeless.ops.hlist.Prepend[O,String::shapeless.HNil]):org.parboiled2.Rule[I,p.Out]", "kind" : "def"}, {"label" : "rule2WithSeparatedBy", "tail" : "(r: Rule[I, O] with Repeated): WithSeparatedBy[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.rule2WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#rule2WithSeparatedBy[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]withorg.parboiled2.Repeated):RuleDSLCombinators.this.WithSeparatedBy[I,O]", "kind" : "implicit def"}, {"label" : "range2NTimes", "tail" : "(range: Range): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.range2NTimes", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#range2NTimes(range:Range):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "int2NTimes", "tail" : "(i: Int): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.int2NTimes", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#int2NTimes(i:Int):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "runSubParser", "tail" : "(f: (ParserInput) => Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.runSubParser", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#runSubParser[I<:shapeless.HList,O<:shapeless.HList](f:org.parboiled2.ParserInput=>org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "quiet", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.quiet", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#quiet[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "atomic", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.atomic", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#atomic[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rule[_, _]): Rule0", "member" : "org.parboiled2.RuleDSLCombinators.&", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#&(r:org.parboiled2.Rule[_,_]):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, StrictOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.oneOrMore", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#oneOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.StrictOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, OptionalOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.zeroOrMore", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#zeroOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "optional", "tail" : "(r: Rule[I, O])(l: Lifter[Option, I, O]): Rule[In, OptionalOut]", "member" : "org.parboiled2.RuleDSLCombinators.optional", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#optional[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Option,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]", "kind" : "def"}, {"label" : "str2CharRangeSupport", "tail" : "(s: String): CharRangeSupport", "member" : "org.parboiled2.RuleDSLBasics.str2CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#str2CharRangeSupport(s:String):RuleDSLBasics.this.CharRangeSupport", "kind" : "implicit def"}, {"label" : "failX", "tail" : "(expected: String): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.failX", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#failX[I<:shapeless.HList,O<:shapeless.HList](expected:String):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "fail", "tail" : "(expected: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.fail", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#fail(expected:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MISMATCH", "tail" : "(): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#MISMATCH[I<:shapeless.HList,O<:shapeless.HList]:org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "MISMATCH0", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH0", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#MISMATCH0:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MATCH", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MATCH", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#MATCH:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "EOI", "tail" : "(): Char", "member" : "org.parboiled2.RuleDSLBasics.EOI", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#EOI:Char", "kind" : "def"}, {"label" : "ANY", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ANY", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#ANY:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#ignoreCase(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#ignoreCase(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "noneOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.noneOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#noneOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.anyOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#anyOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T], ignoreCase: Boolean)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#valueMap[T](m:Map[String,T],ignoreCase:Boolean)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T])(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#valueMap[T](m:Map[String,T])(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "implicit def"}, {"label" : "predicate", "tail" : "(p: CharPredicate): Rule0", "member" : "org.parboiled2.RuleDSLBasics.predicate", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#predicate(p:org.parboiled2.CharPredicate):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "str", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.str", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#str(s:String):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "ch", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ch", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#ch(c:Char):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parseJsonPath", "tail" : "(input: String): Either[CornichonError, List[JsonPathOperation]]", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.parseJsonPath", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#parseJsonPath(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.json.JsonPathOperation]]", "kind" : "def"}, {"label" : "notAllowedInField", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPathParser.notAllowedInField", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#notAllowedInField:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParser.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.json.JsonPathParsingError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPathParsingError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.JsonPathParsingError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPathParsingError.error", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#error:String", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.JsonPathParsingError.input", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/JsonPathParsingError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.JsonSteps", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html", "members_object" : [{"label" : "JsonArrayStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.json.JsonSteps.JsonArrayStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#JsonArrayStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "JsonStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.json.JsonSteps.JsonStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#JsonStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "JsonValuesStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.json.JsonSteps.JsonValuesStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#JsonValuesStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/JsonSteps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.json.MalformedGraphQLJsonError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.MalformedGraphQLJsonError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.MalformedGraphQLJsonError#<init>", "error" : "unsupported entity"}, {"label" : "exception", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.json.MalformedGraphQLJsonError.exception", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#exception:Throwable", "kind" : "val"}, {"label" : "input", "tail" : ": A", "member" : "com.github.agourlay.cornichon.json.MalformedGraphQLJsonError.input", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#input:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/MalformedGraphQLJsonError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.MalformedJsonError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.MalformedJsonError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.MalformedJsonError#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.MalformedJsonError.message", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#message:String", "kind" : "val"}, {"label" : "input", "tail" : ": A", "member" : "com.github.agourlay.cornichon.json.MalformedJsonError.input", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#input:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/MalformedJsonError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.NotAnArrayError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.NotAnArrayError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.NotAnArrayError#<init>", "error" : "unsupported entity"}, {"label" : "badPayload", "tail" : ": A", "member" : "com.github.agourlay.cornichon.json.NotAnArrayError.badPayload", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#badPayload:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/NotAnArrayError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.NotStringFieldError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.NotStringFieldError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.NotStringFieldError#<init>", "error" : "unsupported entity"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.NotStringFieldError.field", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#field:String", "kind" : "val"}, {"label" : "input", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.json.NotStringFieldError.input", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#input:io.circe.Json", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/NotStringFieldError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.PathSelectsNothing", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.PathSelectsNothing.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.PathSelectsNothing#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.json.PathSelectsNothing.input", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#input:io.circe.Json", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.PathSelectsNothing.path", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#path:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/PathSelectsNothing.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.RootArrayElementSelection", "shortDescription" : "", "members_case class" : [{"label" : "pretty", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.RootArrayElementSelection.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#pretty:String", "kind" : "val"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.RootArrayElementSelection.field", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#field:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.json.RootArrayElementSelection#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.json.RootArrayElementSelection.index", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#index:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/RootArrayElementSelection.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.json.RootArrayFieldProjection", "case object" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html", "shortDescription" : "", "members_case object" : [{"label" : "pretty", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.RootArrayFieldProjection.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#pretty:String", "kind" : "val"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.RootArrayFieldProjection.field", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#field:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/RootArrayFieldProjection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.json.RootSelection", "case object" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html", "shortDescription" : "", "members_case object" : [{"label" : "pretty", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.RootSelection.pretty", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#pretty:String", "kind" : "val"}, {"label" : "field", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.RootSelection.field", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#field:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/RootSelection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.json.WhitelistingError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.json.WhitelistingError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.json.WhitelistingError#<init>", "error" : "unsupported entity"}, {"label" : "source", "tail" : ": Json", "member" : "com.github.agourlay.cornichon.json.WhitelistingError.source", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#source:io.circe.Json", "kind" : "val"}, {"label" : "missingFields", "tail" : ": Iterable[String]", "member" : "com.github.agourlay.cornichon.json.WhitelistingError.missingFields", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#missingFields:Iterable[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/json\/WhitelistingError.html", "kind" : "case class"}], "com.github.agourlay.cornichon.resolver" : [{"name" : "com.github.agourlay.cornichon.resolver.AmbiguousKeyDefinition", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.AmbiguousKeyDefinition.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.AmbiguousKeyDefinition#<init>", "error" : "unsupported entity"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.AmbiguousKeyDefinition.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/AmbiguousKeyDefinition.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.HistoryMapper", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.HistoryMapper#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": (Vector[String]) => String", "member" : "com.github.agourlay.cornichon.resolver.HistoryMapper.transform", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#transform:Vector[String]=>String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.HistoryMapper.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/HistoryMapper.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.JsonMapper", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.JsonMapper#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": (String) => String", "member" : "com.github.agourlay.cornichon.resolver.JsonMapper.transform", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#transform:String=>String", "kind" : "val"}, {"label" : "jsonPath", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.JsonMapper.jsonPath", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#jsonPath:String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.JsonMapper.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/JsonMapper.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.Mapper", "trait" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Mapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.resolver.MapperKeyNotFoundInSession", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.resolver.MapperKeyNotFoundInSession.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.MapperKeyNotFoundInSession.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.MapperKeyNotFoundInSession#<init>", "error" : "unsupported entity"}, {"label" : "underlyingError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.resolver.MapperKeyNotFoundInSession.underlyingError", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#underlyingError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.MapperKeyNotFoundInSession.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/MapperKeyNotFoundInSession.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.Placeholder", "shortDescription" : "", "members_case class" : [{"label" : "pattern", "tail" : ": Pattern", "member" : "com.github.agourlay.cornichon.resolver.Placeholder.pattern", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#pattern:java.util.regex.Pattern", "kind" : "lazy val"}, {"label" : "fullKey", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.Placeholder.fullKey", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#fullKey:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.resolver.Placeholder#<init>", "error" : "unsupported entity"}, {"label" : "index", "tail" : ": Option[Int]", "member" : "com.github.agourlay.cornichon.resolver.Placeholder.index", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#index:Option[Int]", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.Placeholder.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/Placeholder.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.PlaceholderError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.PlaceholderError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderError.error", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#error:Throwable", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderError.input", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html", "members_object" : [{"label" : "currentTimestamp", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.currentTimestamp", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#currentTimestamp:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "randomTimestamp", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.randomTimestamp", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#randomTimestamp:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "globalUniqueNumber", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.globalUniqueNumber", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#globalUniqueNumber:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "scenarioUniqueNumber", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.scenarioUniqueNumber", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#scenarioUniqueNumber:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "randomBoolean", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.randomBoolean", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#randomBoolean:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "randomAlphanumString", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.randomAlphanumString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#randomAlphanumString:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "randomString", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.randomString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#randomString:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "randomPositiveInteger", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.randomPositiveInteger", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#randomPositiveInteger:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "randomUUID", "tail" : ": PlaceholderGenerator", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.randomUUID", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#randomUUID:com.github.agourlay.cornichon.resolver.PlaceholderGenerator", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator#<init>", "error" : "unsupported entity"}, {"label" : "gen", "tail" : ": (RandomContext) => String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.gen", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#gen:com.github.agourlay.cornichon.core.RandomContext=>String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderGenerator.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderGenerator.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.PlaceholderParser", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html", "members_class" : [{"label" : "__SubParserInput", "tail" : "", "member" : "org.parboiled2.Parser.__SubParserInput", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__SubParserInputextendsParserInput", "kind" : "class"}, {"label" : "TracingBubbleException", "tail" : "", "member" : "org.parboiled2.Parser.TracingBubbleException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#TracingBubbleExceptionextendsRuntimeExceptionwithNoStackTrace", "kind" : "class"}, {"label" : "ActionOperator", "tail" : "", "member" : "org.parboiled2.RuleDSLActions.ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#ActionOperator[I<:<?>,O<:<?>,Ops<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "WithSeparatedBy", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#WithSeparatedBy[I<:<?>,O<:<?>]extendsAnyRef", "kind" : "trait"}, {"label" : "NTimes", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.NTimes", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#NTimesextendsAnyRef", "kind" : "sealed trait"}, {"label" : "CharRangeSupport", "tail" : "", "member" : "org.parboiled2.RuleDSLBasics.CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#CharRangeSupportextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Digits", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.Digits", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#Digits:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "Number", "tail" : "(): Rule[HNil, ::[Int, HNil]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.Number", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#Number:org.parboiled2.Rule[shapeless.HNil,Int::shapeless.HNil]", "kind" : "def"}, {"label" : "Ignore", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.Ignore", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#Ignore:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "PlaceholderTXT", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.PlaceholderTXT", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#PlaceholderTXT:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "optIndex", "tail" : "(): Rule[HNil, ::[Option[Int], HNil]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.optIndex", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#optIndex:org.parboiled2.Rule[shapeless.HNil,Option[Int]::shapeless.HNil]", "kind" : "def"}, {"label" : "PlaceholderRule", "tail" : "(): Rule[HNil, ::[Placeholder, HNil]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.PlaceholderRule", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#PlaceholderRule:org.parboiled2.Rule[shapeless.HNil,com.github.agourlay.cornichon.resolver.Placeholder::shapeless.HNil]", "kind" : "def"}, {"label" : "placeholdersRule", "tail" : "(): Rule[HNil, ::[Seq[Placeholder], HNil]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.placeholdersRule", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#placeholdersRule:org.parboiled2.Rule[shapeless.HNil,Seq[com.github.agourlay.cornichon.resolver.Placeholder]::shapeless.HNil]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": ParserInput", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.input", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#input:org.parboiled2.ParserInput", "kind" : "val"}, {"label" : "__hardFail", "tail" : "(expected: String): Nothing", "member" : "org.parboiled2.Parser.__hardFail", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__hardFail(expected:String):Nothing", "kind" : "def"}, {"label" : "__matchMapWrapped", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMapWrapped", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchMapWrapped(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchMap", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMap", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchMap(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchNoneOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchNoneOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchNoneOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchAnyOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchAnyOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchAnyOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchIgnoreCaseStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchIgnoreCaseString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__matchString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__push", "tail" : "(value: Any): Boolean", "member" : "org.parboiled2.Parser.__push", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__push(value:Any):Boolean", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(prefix: List[NonTerminal], terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__bubbleUp(prefix:List[org.parboiled2.RuleTrace.NonTerminal],terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__bubbleUp(terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__registerMismatch", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__registerMismatch", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__registerMismatch():Boolean", "kind" : "def"}, {"label" : "__exitQuiet", "tail" : "(saved: Int): Unit", "member" : "org.parboiled2.Parser.__exitQuiet", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__exitQuiet(saved:Int):Unit", "kind" : "def"}, {"label" : "__enterQuiet", "tail" : "(): Int", "member" : "org.parboiled2.Parser.__enterQuiet", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__enterQuiet():Int", "kind" : "def"}, {"label" : "__exitAtomic", "tail" : "(saved: Boolean): Unit", "member" : "org.parboiled2.Parser.__exitAtomic", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__exitAtomic(saved:Boolean):Unit", "kind" : "def"}, {"label" : "__enterAtomic", "tail" : "(start: Int): Boolean", "member" : "org.parboiled2.Parser.__enterAtomic", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__enterAtomic(start:Int):Boolean", "kind" : "def"}, {"label" : "__exitNotPredicate", "tail" : "(saved: AnyRef): Unit", "member" : "org.parboiled2.Parser.__exitNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__exitNotPredicate(saved:AnyRef):Unit", "kind" : "def"}, {"label" : "__enterNotPredicate", "tail" : "(): AnyRef", "member" : "org.parboiled2.Parser.__enterNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__enterNotPredicate():AnyRef", "kind" : "def"}, {"label" : "__restoreState", "tail" : "(mark: Mark): Unit", "member" : "org.parboiled2.Parser.__restoreState", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__restoreState(mark:org.parboiled2.Parser.Mark):Unit", "kind" : "def"}, {"label" : "__saveState", "tail" : "(): Mark", "member" : "org.parboiled2.Parser.__saveState", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__saveState:org.parboiled2.Parser.Mark", "kind" : "def"}, {"label" : "__updateMaxCursor", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__updateMaxCursor", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__updateMaxCursor():Boolean", "kind" : "def"}, {"label" : "__advance", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__advance", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__advance():Boolean", "kind" : "def"}, {"label" : "__run", "tail" : "(rule: => RuleN[L])(scheme: DeliveryScheme[L]): Result", "member" : "org.parboiled2.Parser.__run", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__run[L<:shapeless.HList](rule:=>org.parboiled2.RuleN[L])(implicitscheme:org.parboiled2.Parser.DeliveryScheme[L]):scheme.Result", "kind" : "def"}, {"label" : "__inErrorAnalysis", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__inErrorAnalysis", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#__inErrorAnalysis:Boolean", "kind" : "def"}, {"label" : "copyStateFrom", "tail" : "(other: Parser, offset: Int): Unit", "member" : "org.parboiled2.Parser.copyStateFrom", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#copyStateFrom(other:org.parboiled2.Parser,offset:Int):Unit", "kind" : "def"}, {"label" : "formatError", "tail" : "(error: ParseError, formatter: ErrorFormatter): String", "member" : "org.parboiled2.Parser.formatError", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#formatError(error:org.parboiled2.ParseError,formatter:org.parboiled2.ErrorFormatter):String", "kind" : "def"}, {"label" : "errorTraceCollectionLimit", "tail" : "(): Int", "member" : "org.parboiled2.Parser.errorTraceCollectionLimit", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#errorTraceCollectionLimit:Int", "kind" : "def"}, {"label" : "valueStack", "tail" : "(): ValueStack", "member" : "org.parboiled2.Parser.valueStack", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#valueStack:org.parboiled2.ValueStack", "kind" : "def"}, {"label" : "charAtRC", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAtRC", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#charAtRC(offset:Int):Char", "kind" : "def"}, {"label" : "charAt", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAt", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#charAt(offset:Int):Char", "kind" : "def"}, {"label" : "lastChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.lastChar", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#lastChar:Char", "kind" : "def"}, {"label" : "cursorChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.cursorChar", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#cursorChar:Char", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Int", "member" : "org.parboiled2.Parser.cursor", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#cursor:Int", "kind" : "def"}, {"label" : "namedRule", "tail" : "(name: String)(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.namedRule", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#namedRule[I<:shapeless.HList,O<:shapeless.HList](name:String)(r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.rule", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#rule[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule2ActionOperator", "tail" : "(r: Rule[I, O])(ops: ActionOps[I, O]): ActionOperator[I, O, Out]", "member" : "org.parboiled2.RuleDSLActions.rule2ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#rule2ActionOperator[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitops:org.parboiled2.support.ActionOps[I,O]):RuleDSLActions.this.ActionOperator[I,O,ops.Out]", "kind" : "implicit def"}, {"label" : "drop", "tail" : "(h: HListable[T]): PopRule[Out]", "member" : "org.parboiled2.RuleDSLActions.drop", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#drop[T](implicith:org.parboiled2.support.HListable[T]):org.parboiled2.PopRule[h.Out]", "kind" : "def"}, {"label" : "push", "tail" : "(value: T)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLActions.push", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#push[T](value:T)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "run", "tail" : "(arg: T)(rr: RunResult[T]): Out", "member" : "org.parboiled2.RuleDSLActions.run", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#run[T](arg:T)(implicitrr:org.parboiled2.support.RunResult[T]):rr.Out", "kind" : "def"}, {"label" : "test", "tail" : "(condition: Boolean): Rule0", "member" : "org.parboiled2.RuleDSLActions.test", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#test(condition:Boolean):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "capture", "tail" : "(r: Rule[I, O])(p: Prepend[O, ::[String, HNil]]): Rule[I, Out]", "member" : "org.parboiled2.RuleDSLActions.capture", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#capture[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitp:shapeless.ops.hlist.Prepend[O,String::shapeless.HNil]):org.parboiled2.Rule[I,p.Out]", "kind" : "def"}, {"label" : "rule2WithSeparatedBy", "tail" : "(r: Rule[I, O] with Repeated): WithSeparatedBy[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.rule2WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#rule2WithSeparatedBy[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]withorg.parboiled2.Repeated):RuleDSLCombinators.this.WithSeparatedBy[I,O]", "kind" : "implicit def"}, {"label" : "range2NTimes", "tail" : "(range: Range): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.range2NTimes", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#range2NTimes(range:Range):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "int2NTimes", "tail" : "(i: Int): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.int2NTimes", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#int2NTimes(i:Int):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "runSubParser", "tail" : "(f: (ParserInput) => Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.runSubParser", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#runSubParser[I<:shapeless.HList,O<:shapeless.HList](f:org.parboiled2.ParserInput=>org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "quiet", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.quiet", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#quiet[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "atomic", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.atomic", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#atomic[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rule[_, _]): Rule0", "member" : "org.parboiled2.RuleDSLCombinators.&", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#&(r:org.parboiled2.Rule[_,_]):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, StrictOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.oneOrMore", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#oneOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.StrictOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, OptionalOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.zeroOrMore", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#zeroOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "optional", "tail" : "(r: Rule[I, O])(l: Lifter[Option, I, O]): Rule[In, OptionalOut]", "member" : "org.parboiled2.RuleDSLCombinators.optional", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#optional[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Option,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]", "kind" : "def"}, {"label" : "str2CharRangeSupport", "tail" : "(s: String): CharRangeSupport", "member" : "org.parboiled2.RuleDSLBasics.str2CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#str2CharRangeSupport(s:String):RuleDSLBasics.this.CharRangeSupport", "kind" : "implicit def"}, {"label" : "failX", "tail" : "(expected: String): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.failX", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#failX[I<:shapeless.HList,O<:shapeless.HList](expected:String):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "fail", "tail" : "(expected: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.fail", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#fail(expected:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MISMATCH", "tail" : "(): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#MISMATCH[I<:shapeless.HList,O<:shapeless.HList]:org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "MISMATCH0", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH0", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#MISMATCH0:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MATCH", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MATCH", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#MATCH:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "EOI", "tail" : "(): Char", "member" : "org.parboiled2.RuleDSLBasics.EOI", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#EOI:Char", "kind" : "def"}, {"label" : "ANY", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ANY", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#ANY:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#ignoreCase(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#ignoreCase(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "noneOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.noneOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#noneOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.anyOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#anyOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T], ignoreCase: Boolean)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#valueMap[T](m:Map[String,T],ignoreCase:Boolean)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T])(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#valueMap[T](m:Map[String,T])(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "implicit def"}, {"label" : "predicate", "tail" : "(p: CharPredicate): Rule0", "member" : "org.parboiled2.RuleDSLBasics.predicate", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#predicate(p:org.parboiled2.CharPredicate):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "str", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.str", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#str(s:String):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "ch", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ch", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#ch(c:Char):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(input: String): Either[CornichonError, List[Placeholder]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParser.parse", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#parse(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.resolver.Placeholder]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParser.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.resolver.PlaceholderParsingError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParsingError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.PlaceholderParsingError#<init>", "error" : "unsupported entity"}, {"label" : "error", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParsingError.error", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#error:String", "kind" : "val"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderParsingError.input", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#input:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderParsingError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html", "members_object" : [{"label" : "fillPlaceholdersMany", "tail" : "(params: Seq[(String, String)])(session: Session, randomContext: RandomContext, customExtractors: Map[String, Mapper]): Either[CornichonError, List[(String, String)]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver.fillPlaceholdersMany", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#fillPlaceholdersMany(params:Seq[(String,String)])(session:com.github.agourlay.cornichon.core.Session,randomContext:com.github.agourlay.cornichon.core.RandomContext,customExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper]):Either[com.github.agourlay.cornichon.core.CornichonError,List[(String,String)]]", "kind" : "def"}, {"label" : "fillPlaceholders", "tail" : "(input: String)(session: Session, rc: RandomContext, customExtractors: Map[String, Mapper], sessionOnlyMode: Boolean): Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver.fillPlaceholders", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#fillPlaceholders(input:String)(session:com.github.agourlay.cornichon.core.Session,rc:com.github.agourlay.cornichon.core.RandomContext,customExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper],sessionOnlyMode:Boolean):Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "def"}, {"label" : "fillPlaceholdersResolvable", "tail" : "(resolvableInput: A)(session: Session, randomContext: RandomContext, customExtractors: Map[String, Mapper])(arg0: Resolvable[A]): Either[CornichonError, A]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver.fillPlaceholdersResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#fillPlaceholdersResolvable[A](resolvableInput:A)(session:com.github.agourlay.cornichon.core.Session,randomContext:com.github.agourlay.cornichon.core.RandomContext,customExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper])(implicitevidence$1:com.github.agourlay.cornichon.resolver.Resolvable[A]):Either[com.github.agourlay.cornichon.core.CornichonError,A]", "kind" : "def"}, {"label" : "findPlaceholders", "tail" : "(input: String): Either[CornichonError, List[Placeholder]]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver.findPlaceholders", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#findPlaceholders(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,List[com.github.agourlay.cornichon.resolver.Placeholder]]", "kind" : "def"}, {"label" : "builtInPlaceholderGenerators", "tail" : ": List[PlaceholderGenerator]", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver.builtInPlaceholderGenerators", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#builtInPlaceholderGenerators:List[com.github.agourlay.cornichon.resolver.PlaceholderGenerator]", "kind" : "val"}, {"label" : "globalNextLong", "tail" : "(): Long", "member" : "com.github.agourlay.cornichon.resolver.PlaceholderResolver.globalNextLong", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#globalNextLong():Long", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/PlaceholderResolver$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.resolver.RandomMapper", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.RandomMapper#<init>", "error" : "unsupported entity"}, {"label" : "generator", "tail" : ": (RandomContext) => String", "member" : "com.github.agourlay.cornichon.resolver.RandomMapper.generator", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#generator:com.github.agourlay.cornichon.core.RandomContext=>String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapper.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.RandomMapperError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.RandomMapperError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.RandomMapperError#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.resolver.RandomMapperError.e", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#e:Throwable", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.RandomMapperError.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/RandomMapperError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.Resolvable", "object" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html", "members_object" : [{"label" : "jsonResolvable", "tail" : ": Resolvable[Json]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.jsonResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#jsonResolvable:com.github.agourlay.cornichon.resolver.Resolvable[io.circe.Json]", "kind" : "implicit val"}, {"label" : "uuidResolvable", "tail" : ": Resolvable[UUID]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.uuidResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#uuidResolvable:com.github.agourlay.cornichon.resolver.Resolvable[java.util.UUID]", "kind" : "implicit val"}, {"label" : "bigDecResolvable", "tail" : ": Resolvable[BigDecimal]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.bigDecResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#bigDecResolvable:com.github.agourlay.cornichon.resolver.Resolvable[BigDecimal]", "kind" : "implicit val"}, {"label" : "longResolvable", "tail" : ": Resolvable[Long]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.longResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#longResolvable:com.github.agourlay.cornichon.resolver.Resolvable[Long]", "kind" : "implicit val"}, {"label" : "floatResolvable", "tail" : ": Resolvable[Float]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.floatResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#floatResolvable:com.github.agourlay.cornichon.resolver.Resolvable[Float]", "kind" : "implicit val"}, {"label" : "doubleResolvable", "tail" : ": Resolvable[Double]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.doubleResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#doubleResolvable:com.github.agourlay.cornichon.resolver.Resolvable[Double]", "kind" : "implicit val"}, {"label" : "shortResolvable", "tail" : ": Resolvable[Short]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.shortResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#shortResolvable:com.github.agourlay.cornichon.resolver.Resolvable[Short]", "kind" : "implicit val"}, {"label" : "intResolvable", "tail" : ": Resolvable[Int]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.intResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#intResolvable:com.github.agourlay.cornichon.resolver.Resolvable[Int]", "kind" : "implicit val"}, {"label" : "booleanResolvable", "tail" : ": Resolvable[Boolean]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.booleanResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#booleanResolvable:com.github.agourlay.cornichon.resolver.Resolvable[Boolean]", "kind" : "implicit val"}, {"label" : "stringResolvable", "tail" : ": Resolvable[String]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.stringResolvable", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#stringResolvable:com.github.agourlay.cornichon.resolver.Resolvable[String]", "kind" : "implicit val"}, {"label" : "apply", "tail" : "(resolvable: Resolvable[A]): Resolvable[A]", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.apply", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#apply[A](implicitresolvable:com.github.agourlay.cornichon.resolver.Resolvable[A]):com.github.agourlay.cornichon.resolver.Resolvable[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html", "kind" : "trait", "members_trait" : [{"label" : "transformResolvableForm", "tail" : "(r: A)(transf: (String) => String): A", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.transformResolvableForm", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#transformResolvableForm(r:A)(transf:String=>String):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "fromResolvableForm", "tail" : "(r: String): A", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.fromResolvableForm", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#fromResolvableForm(r:String):A", "kind" : "abstract def"}, {"label" : "toResolvableForm", "tail" : "(r: A): String", "member" : "com.github.agourlay.cornichon.resolver.Resolvable.toResolvableForm", "link" : "com\/github\/agourlay\/cornichon\/resolver\/Resolvable.html#toResolvableForm(r:A):String", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.resolver.SessionMapper", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.SessionMapper#<init>", "error" : "unsupported entity"}, {"label" : "generator", "tail" : ": (Session) => Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.resolver.SessionMapper.generator", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#generator:com.github.agourlay.cornichon.core.Session=>Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapper.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.SessionMapperError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.resolver.SessionMapperError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.SessionMapperError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.SessionMapperError#<init>", "error" : "unsupported entity"}, {"label" : "underlyingError", "tail" : ": CornichonError", "member" : "com.github.agourlay.cornichon.resolver.SessionMapperError.underlyingError", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#underlyingError:com.github.agourlay.cornichon.core.CornichonError", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.SessionMapperError.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/SessionMapperError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.SimpleMapper", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.SimpleMapper#<init>", "error" : "unsupported entity"}, {"label" : "generator", "tail" : ": () => String", "member" : "com.github.agourlay.cornichon.resolver.SimpleMapper.generator", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#generator:()=>String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapper.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.SimpleMapperError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.SimpleMapperError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.resolver.SimpleMapperError#<init>", "error" : "unsupported entity"}, {"label" : "e", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.resolver.SimpleMapperError.e", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#e:Throwable", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.SimpleMapperError.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/SimpleMapperError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.resolver.TextMapper", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.resolver.TextMapper#<init>", "error" : "unsupported entity"}, {"label" : "transform", "tail" : ": (String) => String", "member" : "com.github.agourlay.cornichon.resolver.TextMapper.transform", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#transform:String=>String", "kind" : "val"}, {"label" : "key", "tail" : ": String", "member" : "com.github.agourlay.cornichon.resolver.TextMapper.key", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#key:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/resolver\/TextMapper.html", "kind" : "case class"}], "com.github.agourlay.cornichon.dsl" : [{"name" : "com.github.agourlay.cornichon.dsl.BaseFeature", "object" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html", "members_object" : [{"label" : "shutDownGlobalResources", "tail" : "(): Future[Done]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.shutDownGlobalResources", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#shutDownGlobalResources():scala.concurrent.Future[com.github.agourlay.cornichon.core.Done]", "kind" : "def"}, {"label" : "addShutdownHook", "tail" : "(h: () => Future[_]): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.addShutdownHook", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#addShutdownHook(h:()=>scala.concurrent.Future[_]):Unit", "kind" : "def"}, {"label" : "config", "tail" : ": Config", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.config", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#config:com.github.agourlay.cornichon.core.Config", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html", "kind" : "trait", "members_trait" : [{"label" : "afterEachScenario", "tail" : "(step: Step): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterEachScenario", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#afterEachScenario(step:com.github.agourlay.cornichon.core.Step):Unit", "kind" : "def"}, {"label" : "beforeEachScenario", "tail" : "(step: Step): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeEachScenario", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#beforeEachScenario(step:com.github.agourlay.cornichon.core.Step):Unit", "kind" : "def"}, {"label" : "afterFeature", "tail" : "(after: => Unit): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterFeature", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#afterFeature(after:=>Unit):Unit", "kind" : "def"}, {"label" : "beforeFeature", "tail" : "(before: => Unit): Unit", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeFeature", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#beforeFeature(before:=>Unit):Unit", "kind" : "def"}, {"label" : "registerMatchers", "tail" : "(): List[Matcher]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.registerMatchers", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#registerMatchers:List[com.github.agourlay.cornichon.matchers.Matcher]", "kind" : "def"}, {"label" : "registerExtractors", "tail" : "(): Map[String, Mapper]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.registerExtractors", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#registerExtractors:Map[String,com.github.agourlay.cornichon.resolver.Mapper]", "kind" : "def"}, {"label" : "ec", "tail" : ": Scheduler", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.ec", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#ec:monix.execution.Scheduler", "kind" : "implicit lazy val"}, {"label" : "seed", "tail" : ": Option[Long]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.seed", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#seed:Option[Long]", "kind" : "lazy val"}, {"label" : "executeScenariosInParallel", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.executeScenariosInParallel", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#executeScenariosInParallel:Boolean", "kind" : "lazy val"}, {"label" : "afterEachScenario", "tail" : ": ListBuffer[Step]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterEachScenario", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#afterEachScenario:scala.collection.mutable.ListBuffer[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "beforeEachScenario", "tail" : ": ListBuffer[Step]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeEachScenario", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#beforeEachScenario:scala.collection.mutable.ListBuffer[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "afterFeature", "tail" : ": ListBuffer[() => Unit]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.afterFeature", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#afterFeature:scala.collection.mutable.ListBuffer[()=>Unit]", "kind" : "val"}, {"label" : "beforeFeature", "tail" : ": ListBuffer[() => Unit]", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.beforeFeature", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#beforeFeature:scala.collection.mutable.ListBuffer[()=>Unit]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "feature", "tail" : "(): FeatureDef", "member" : "com.github.agourlay.cornichon.dsl.BaseFeature.feature", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BaseFeature.html#feature:com.github.agourlay.cornichon.core.FeatureDef", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.dsl.BlockScopedResource", "trait" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "use", "tail" : "(outsideRunState: RunState)(runInside: (RunState) => Task[A]): Task[(Session, A)]", "member" : "com.github.agourlay.cornichon.dsl.BlockScopedResource.use", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#use[A](outsideRunState:com.github.agourlay.cornichon.core.RunState)(runInside:com.github.agourlay.cornichon.core.RunState=>monix.eval.Task[A]):monix.eval.Task[(com.github.agourlay.cornichon.core.Session,A)]", "kind" : "abstract def"}, {"label" : "closingTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.dsl.BlockScopedResource.closingTitle", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#closingTitle:String", "kind" : "abstract val"}, {"label" : "openingTitle", "tail" : ": String", "member" : "com.github.agourlay.cornichon.dsl.BlockScopedResource.openingTitle", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#openingTitle:String", "kind" : "abstract val"}, {"label" : "sessionTarget", "tail" : ": String", "member" : "com.github.agourlay.cornichon.dsl.BlockScopedResource.sessionTarget", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BlockScopedResource.html#sessionTarget:String", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.dsl.BodyElementCollector", "shortDescription" : "", "members_case class" : [{"label" : "get", "tail" : "(body: List[Body]): Result", "member" : "com.github.agourlay.cornichon.dsl.BodyElementCollector.get", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#get(body:List[Body]):Result", "kind" : "def"}, {"label" : "apply", "tail" : "(body: => Seq[Body]): Result", "member" : "com.github.agourlay.cornichon.dsl.BodyElementCollector.apply", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#apply(body:=>Seq[Body]):Result", "kind" : "macro def"}, {"label" : "apply", "tail" : "(body: => Body): Result", "member" : "com.github.agourlay.cornichon.dsl.BodyElementCollector.apply", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#apply(body:=>Body):Result", "kind" : "macro def"}, {"member" : "com.github.agourlay.cornichon.dsl.BodyElementCollector#<init>", "error" : "unsupported entity"}, {"label" : "fn", "tail" : ": (List[Body]) => Result", "member" : "com.github.agourlay.cornichon.dsl.BodyElementCollector.fn", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#fn:List[Body]=>Result", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollector.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.BodyElementCollectorMacro", "shortDescription" : "", "members_class" : [{"label" : "collectImpl", "tail" : "(body: scala.reflect.macros.Universe.Tree): scala.reflect.macros.Universe.Tree", "member" : "com.github.agourlay.cornichon.dsl.BodyElementCollectorMacro.collectImpl", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#collectImpl(body:BodyElementCollectorMacro.this.c.universe.Tree):BodyElementCollectorMacro.this.c.universe.Tree", "kind" : "def"}, {"label" : "c", "tail" : ": Context", "member" : "com.github.agourlay.cornichon.dsl.BodyElementCollectorMacro.c", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#c:scala.reflect.macros.blackbox.Context", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.dsl.BodyElementCollectorMacro#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/dsl\/BodyElementCollectorMacro.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.dsl.CheckDsl", "trait" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html", "kind" : "trait", "members_trait" : [{"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C], gd: (RandomContext) => Generator[D], ge: (RandomContext) => Generator[E], gf: (RandomContext) => Generator[F])(builder: (A) => (B) => (C) => (D) => (E) => (F) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#for_all[A,B,C,D,E,F](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],gd:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D],ge:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E],gf:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[F])(builder:A=>(B=>(C=>(D=>(E=>(F=>com.github.agourlay.cornichon.core.Step)))))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C], gd: (RandomContext) => Generator[D], ge: (RandomContext) => Generator[E])(builder: (A) => (B) => (C) => (D) => (E) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#for_all[A,B,C,D,E](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],gd:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D],ge:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E])(builder:A=>(B=>(C=>(D=>(E=>com.github.agourlay.cornichon.core.Step))))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C], gd: (RandomContext) => Generator[D])(builder: (A) => (B) => (C) => (D) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#for_all[A,B,C,D](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],gd:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D])(builder:A=>(B=>(C=>(D=>com.github.agourlay.cornichon.core.Step)))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B], gc: (RandomContext) => Generator[C])(builder: (A) => (B) => (C) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#for_all[A,B,C](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],gc:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C])(builder:A=>(B=>(C=>com.github.agourlay.cornichon.core.Step))):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A], gb: (RandomContext) => Generator[B])(builder: (A) => (B) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#for_all[A,B](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],gb:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B])(builder:A=>(B=>com.github.agourlay.cornichon.core.Step)):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "for_all", "tail" : "(description: String, maxNumberOfRuns: Int, ga: (RandomContext) => Generator[A])(builder: (A) => Step): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.for_all", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#for_all[A](description:String,maxNumberOfRuns:Int,ga:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A])(builder:A=>com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "check_model", "tail" : "(maxNumberOfRuns: Int, maxNumberOfTransitions: Int)(modelRunner: ModelRunner[A, B, C, D, E, F]): Step", "member" : "com.github.agourlay.cornichon.dsl.CheckDsl.check_model", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#check_model[A,B,C,D,E,F](maxNumberOfRuns:Int,maxNumberOfTransitions:Int)(modelRunner:com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,D,E,F]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CheckDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.dsl.ContainerType", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html", "members_object" : [{"label" : "showIterConv", "tail" : "(a: Iterable[T])(tc: Show[T]): Iterable[ContainerType[T, Show]]", "member" : "com.github.agourlay.cornichon.dsl.ContainerType.showIterConv", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#showIterConv[T](a:Iterable[T])(implicittc:cats.Show[T]):Iterable[com.github.agourlay.cornichon.dsl.ContainerType[T,cats.Show]]", "kind" : "implicit def"}, {"label" : "showConv", "tail" : "(a: T)(tc: Show[T]): ContainerType[T, Show]", "member" : "com.github.agourlay.cornichon.dsl.ContainerType.showConv", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#showConv[T](a:T)(implicittc:cats.Show[T]):com.github.agourlay.cornichon.dsl.ContainerType[T,cats.Show]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.github.agourlay.cornichon.dsl.ContainerType#<init>", "error" : "unsupported entity"}, {"label" : "tci", "tail" : ": B[T]", "member" : "com.github.agourlay.cornichon.dsl.ContainerType.tci", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#tci:B[T@scala.annotation.unchecked.uncheckedVariance]", "kind" : "val"}, {"label" : "element", "tail" : ": T", "member" : "com.github.agourlay.cornichon.dsl.ContainerType.element", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#element:T", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/ContainerType.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.CoreDsl", "object" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html", "members_object" : [{"label" : "save_many_from_session", "tail" : "(fromKey: String)(args: Seq[FromSessionSetter[String]]): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.save_many_from_session", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#save_many_from_session(fromKey:String)(args:Seq[com.github.agourlay.cornichon.dsl.CoreDsl.FromSessionSetter[String]]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "FromSessionSetter", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.FromSessionSetter", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#FromSessionSetter[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html", "kind" : "trait", "members_trait" : [{"label" : "print_step", "tail" : "(message: String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.print_step", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#print_step(message:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "show_session", "tail" : "(key: String, index: Option[Int], transform: (String) => Either[CornichonError, String]): DebugStep", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.show_session", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#show_session(key:String,index:Option[Int],transform:String=>Either[com.github.agourlay.cornichon.core.CornichonError,String]):com.github.agourlay.cornichon.steps.regular.DebugStep", "kind" : "def"}, {"label" : "show_session", "tail" : "(): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.show_session", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#show_session:com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "session_values", "tail" : "(k1: String, k2: String): SessionValuesStepBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.session_values", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#session_values(k1:String,k2:String):com.github.agourlay.cornichon.dsl.SessionSteps.SessionValuesStepBuilder", "kind" : "def"}, {"label" : "session_value", "tail" : "(key: String): SessionStepBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.session_value", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#session_value(key:String):com.github.agourlay.cornichon.dsl.SessionSteps.SessionStepBuilder", "kind" : "def"}, {"label" : "transform_session", "tail" : "(key: String)(map: (String) => String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.transform_session", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#transform_session(key:String)(map:String=>String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "rollback", "tail" : "(key: String, show: Boolean): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.rollback", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#rollback(key:String,show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "remove", "tail" : "(key: String): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.remove", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#remove(key:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "save", "tail" : "(input: (String, String), show: Boolean): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.save", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#save(input:(String,String),show:Boolean):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "wait", "tail" : "(duration: FiniteDuration): Step", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#wait(duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "WithDataInputs", "tail" : "(where: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.WithDataInputs", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#WithDataInputs(where:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "LogDuration", "tail" : "(label: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.LogDuration", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#LogDuration(label:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Within", "tail" : "(maxDuration: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Within", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Within(maxDuration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Concurrently", "tail" : "(maxTime: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Concurrently", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Concurrently(maxTime:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatConcurrently", "tail" : "(times: Int, parallelism: Int, maxTime: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatConcurrently", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#RepeatConcurrently(times:Int,parallelism:Int,maxTime:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Eventually", "tail" : "(maxDuration: FiniteDuration, interval: FiniteDuration, oscillationAllowed: Boolean): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Eventually", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Eventually(maxDuration:scala.concurrent.duration.FiniteDuration,interval:scala.concurrent.duration.FiniteDuration,oscillationAllowed:Boolean):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatDuring", "tail" : "(duration: FiniteDuration): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatDuring", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#RepeatDuring(duration:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RetryMax", "tail" : "(limit: Int): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RetryMax", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#RetryMax(limit:Int):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatFrom", "tail" : "(elements: Iterable[ContainerType[A, Show]])(index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatFrom", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#RepeatFrom[A](elements:Iterable[com.github.agourlay.cornichon.dsl.ContainerType[A,cats.Show]])(index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "RepeatWith", "tail" : "(elements: ContainerType[Any, Show]*)(index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.RepeatWith", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#RepeatWith(elements:com.github.agourlay.cornichon.dsl.ContainerType[Any,cats.Show]*)(index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Repeat", "tail" : "(times: Int, index: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Repeat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Repeat(times:Int,index:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Repeat", "tail" : "(times: Int): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Repeat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Repeat(times:Int):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "AttachAs", "tail" : "(title: String): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.AttachAs", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#AttachAs(title:String):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "Attach", "tail" : "(): BodyElementCollector[Step, Step]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Attach", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Attach:com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Step]", "kind" : "def"}, {"label" : "And", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.And", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#And", "kind" : "case object"}, {"label" : "Then", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Then", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Then", "kind" : "case object"}, {"label" : "Given", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Given", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Given", "kind" : "case object"}, {"label" : "When", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.When", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#When", "kind" : "case object"}, {"label" : "Starters", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Starters", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#StartersextendsDynamic", "kind" : "sealed trait"}, {"label" : "scenarioBuilder", "tail" : "(s: (CoreDsl.this)#ScenarioBuilder): BodyElementCollector[Step, Scenario]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.scenarioBuilder", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#scenarioBuilder(s:CoreDsl.this.ScenarioBuilder):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Step,com.github.agourlay.cornichon.core.Scenario]", "kind" : "implicit final def"}, {"label" : "Scenario", "tail" : "(name: String): (CoreDsl.this)#ScenarioBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Scenario", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Scenario(name:String):CoreDsl.this.ScenarioBuilder", "kind" : "def"}, {"label" : "featureBuilder", "tail" : "(f: (CoreDsl.this)#FeatureBuilder): BodyElementCollector[Scenario, FeatureDef]", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.featureBuilder", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#featureBuilder(f:CoreDsl.this.FeatureBuilder):com.github.agourlay.cornichon.dsl.BodyElementCollector[com.github.agourlay.cornichon.core.Scenario,com.github.agourlay.cornichon.core.FeatureDef]", "kind" : "implicit final def"}, {"label" : "Feature", "tail" : "(name: String): (CoreDsl.this)#FeatureBuilder", "member" : "com.github.agourlay.cornichon.dsl.CoreDsl.Feature", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#Feature(name:String):CoreDsl.this.FeatureBuilder", "kind" : "def"}, {"label" : "catsStdShowForBoolean", "tail" : ": Show[Boolean]", "member" : "cats.instances.BooleanInstances.catsStdShowForBoolean", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForBoolean:cats.Show[Boolean]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForBoolean", "tail" : ": Order[Boolean] with Hash[Boolean] with LowerBounded[Boolean] with UpperBounded[Boolean]", "member" : "cats.kernel.instances.BooleanInstances.catsKernelStdOrderForBoolean", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForBoolean:cats.kernel.Order[Boolean]withcats.kernel.Hash[Boolean]withcats.kernel.LowerBounded[Boolean]withcats.kernel.UpperBounded[Boolean]", "kind" : "implicit val"}, {"label" : "catsStdShowForDouble", "tail" : ": Show[Double]", "member" : "cats.instances.DoubleInstances.catsStdShowForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForDouble:cats.Show[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForDouble", "tail" : ": CommutativeGroup[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdGroupForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdGroupForDouble:cats.kernel.CommutativeGroup[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForDouble", "tail" : ": Order[Double] with Hash[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdOrderForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForDouble:cats.kernel.Order[Double]withcats.kernel.Hash[Double]", "kind" : "implicit val"}, {"label" : "catsStdShowForFloat", "tail" : ": Show[Float]", "member" : "cats.instances.FloatInstances.catsStdShowForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForFloat:cats.Show[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForFloat", "tail" : ": CommutativeGroup[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdGroupForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdGroupForFloat:cats.kernel.CommutativeGroup[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForFloat", "tail" : ": Order[Float] with Hash[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdOrderForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForFloat:cats.kernel.Order[Float]withcats.kernel.Hash[Float]", "kind" : "implicit val"}, {"label" : "catsStdShowForLong", "tail" : ": Show[Long]", "member" : "cats.instances.LongInstances.catsStdShowForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForLong:cats.Show[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForLong", "tail" : ": CommutativeGroup[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdGroupForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdGroupForLong:cats.kernel.CommutativeGroup[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForLong", "tail" : ": Order[Long] with Hash[Long] with LowerBounded[Long] with UpperBounded[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdOrderForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForLong:cats.kernel.Order[Long]withcats.kernel.Hash[Long]withcats.kernel.LowerBounded[Long]withcats.kernel.UpperBounded[Long]", "kind" : "implicit val"}, {"label" : "catsStdShowForChar", "tail" : ": Show[Char]", "member" : "cats.instances.CharInstances.catsStdShowForChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForChar:cats.Show[Char]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForChar", "tail" : ": CharOrder", "member" : "cats.kernel.instances.CharInstances.catsKernelStdOrderForChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForChar:cats.kernel.instances.CharOrder", "kind" : "implicit val"}, {"label" : "catsStdShowForInt", "tail" : ": Show[Int]", "member" : "cats.instances.IntInstances.catsStdShowForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForInt:cats.Show[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForInt", "tail" : ": CommutativeGroup[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdGroupForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdGroupForInt:cats.kernel.CommutativeGroup[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForInt", "tail" : ": Order[Int] with Hash[Int] with LowerBounded[Int] with UpperBounded[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdOrderForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForInt:cats.kernel.Order[Int]withcats.kernel.Hash[Int]withcats.kernel.LowerBounded[Int]withcats.kernel.UpperBounded[Int]", "kind" : "implicit val"}, {"label" : "catsStdShowForString", "tail" : ": Show[String]", "member" : "cats.instances.StringInstances.catsStdShowForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsStdShowForString:cats.Show[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdMonoidForString", "tail" : ": Monoid[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdMonoidForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdMonoidForString:cats.kernel.Monoid[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForString", "tail" : ": Order[String] with Hash[String] with LowerBounded[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdOrderForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#catsKernelStdOrderForString:cats.kernel.Order[String]withcats.kernel.Hash[String]withcats.kernel.LowerBounded[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/CoreDsl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.dsl.DataTable", "shortDescription" : "", "members_case class" : [{"label" : "rawStringList", "tail" : ": List[Map[String, String]]", "member" : "com.github.agourlay.cornichon.dsl.DataTable.rawStringList", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#rawStringList:List[Map[String,String]]", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.dsl.DataTable#<init>", "error" : "unsupported entity"}, {"label" : "rows", "tail" : ": Seq[Row]", "member" : "com.github.agourlay.cornichon.dsl.DataTable.rows", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#rows:Seq[com.github.agourlay.cornichon.dsl.Row]", "kind" : "val"}, {"label" : "headers", "tail" : ": Headers", "member" : "com.github.agourlay.cornichon.dsl.DataTable.headers", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#headers:com.github.agourlay.cornichon.dsl.Headers", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/DataTable.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.DataTableError", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.dsl.DataTableError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.dsl.DataTableError#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": String", "member" : "com.github.agourlay.cornichon.dsl.DataTableError.input", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#input:String", "kind" : "val"}, {"label" : "error", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.dsl.DataTableError.error", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#error:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.DataTableParseError", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.dsl.DataTableParseError#<init>", "error" : "unsupported entity"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.dsl.DataTableParseError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#baseErrorMessage:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParseError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.DataTableParser", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html", "members_class" : [{"label" : "__SubParserInput", "tail" : "", "member" : "org.parboiled2.Parser.__SubParserInput", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__SubParserInputextendsParserInput", "kind" : "class"}, {"label" : "TracingBubbleException", "tail" : "", "member" : "org.parboiled2.Parser.TracingBubbleException", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#TracingBubbleExceptionextendsRuntimeExceptionwithNoStackTrace", "kind" : "class"}, {"label" : "ActionOperator", "tail" : "", "member" : "org.parboiled2.RuleDSLActions.ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ActionOperator[I<:<?>,O<:<?>,Ops<:<?>]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "WithSeparatedBy", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#WithSeparatedBy[I<:<?>,O<:<?>]extendsAnyRef", "kind" : "trait"}, {"label" : "NTimes", "tail" : "", "member" : "org.parboiled2.RuleDSLCombinators.NTimes", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#NTimesextendsAnyRef", "kind" : "sealed trait"}, {"label" : "CharRangeSupport", "tail" : "", "member" : "org.parboiled2.RuleDSLBasics.CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#CharRangeSupportextendsAnyRef", "kind" : "sealed trait"}, {"label" : "Separator", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.Separator", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#Separator:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "Spaces", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.Spaces", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#Spaces:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "NL", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.NL", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#NL:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "ContentsChar", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.ContentsChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ContentsChar:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "CellContent", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.CellContent", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#CellContent:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "RowRule", "tail" : "(): Rule[HNil, ::[Row, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.RowRule", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#RowRule:org.parboiled2.Rule[shapeless.HNil,com.github.agourlay.cornichon.dsl.Row::shapeless.HNil]", "kind" : "def"}, {"label" : "HeaderRule", "tail" : "(): Rule[HNil, ::[Headers, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.HeaderRule", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#HeaderRule:org.parboiled2.Rule[shapeless.HNil,com.github.agourlay.cornichon.dsl.Headers::shapeless.HNil]", "kind" : "def"}, {"label" : "dataTableRule", "tail" : "(): Rule[HNil, ::[DataTable, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.dataTableRule", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#dataTableRule:org.parboiled2.Rule[shapeless.HNil,com.github.agourlay.cornichon.dsl.DataTable::shapeless.HNil]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.dsl.DataTableParser#<init>", "error" : "unsupported entity"}, {"label" : "input", "tail" : ": ParserInput", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.input", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#input:org.parboiled2.ParserInput", "kind" : "val"}, {"label" : "Unicode", "tail" : "(): Rule[HNil, ::[Int, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.Unicode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#Unicode:org.parboiled2.Rule[shapeless.HNil,Int::shapeless.HNil]", "kind" : "def"}, {"label" : "EscapedChar", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.EscapedChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#EscapedChar:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "NormalChar", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.NormalChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#NormalChar:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "Characters", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.Characters", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#Characters:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "HeaderValue", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.HeaderValue", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#HeaderValue:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "setSB", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.StringBuilding.setSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#setSB(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#prependSB(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#prependSB(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(offset: Int): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#prependSB(offset:Int):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#prependSB():org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#appendSB(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#appendSB(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(offset: Int): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#appendSB(offset:Int):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#appendSB():org.parboiled2.Rule0", "kind" : "def"}, {"label" : "clearSB", "tail" : "(): Rule0", "member" : "org.parboiled2.StringBuilding.clearSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#clearSB():org.parboiled2.Rule0", "kind" : "def"}, {"label" : "sb", "tail" : ": StringBuilder", "member" : "org.parboiled2.StringBuilding.sb", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#sb:StringBuilder", "kind" : "val"}, {"label" : "__hardFail", "tail" : "(expected: String): Nothing", "member" : "org.parboiled2.Parser.__hardFail", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__hardFail(expected:String):Nothing", "kind" : "def"}, {"label" : "__matchMapWrapped", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMapWrapped", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchMapWrapped(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchMap", "tail" : "(m: Map[String, Any], ignoreCase: Boolean): Boolean", "member" : "org.parboiled2.Parser.__matchMap", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchMap(m:Map[String,Any],ignoreCase:Boolean):Boolean", "kind" : "def"}, {"label" : "__matchNoneOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchNoneOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchNoneOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchAnyOf", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchAnyOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchAnyOf(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchIgnoreCaseStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchIgnoreCaseString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchIgnoreCaseString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchIgnoreCaseString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchStringWrapped", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchStringWrapped", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchStringWrapped(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__matchString", "tail" : "(string: String, ix: Int): Boolean", "member" : "org.parboiled2.Parser.__matchString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__matchString(string:String,ix:Int):Boolean", "kind" : "final def"}, {"label" : "__push", "tail" : "(value: Any): Boolean", "member" : "org.parboiled2.Parser.__push", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__push(value:Any):Boolean", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(prefix: List[NonTerminal], terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__bubbleUp(prefix:List[org.parboiled2.RuleTrace.NonTerminal],terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__bubbleUp", "tail" : "(terminal: Terminal): Nothing", "member" : "org.parboiled2.Parser.__bubbleUp", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__bubbleUp(terminal:org.parboiled2.RuleTrace.Terminal):Nothing", "kind" : "def"}, {"label" : "__registerMismatch", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__registerMismatch", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__registerMismatch():Boolean", "kind" : "def"}, {"label" : "__exitQuiet", "tail" : "(saved: Int): Unit", "member" : "org.parboiled2.Parser.__exitQuiet", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__exitQuiet(saved:Int):Unit", "kind" : "def"}, {"label" : "__enterQuiet", "tail" : "(): Int", "member" : "org.parboiled2.Parser.__enterQuiet", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__enterQuiet():Int", "kind" : "def"}, {"label" : "__exitAtomic", "tail" : "(saved: Boolean): Unit", "member" : "org.parboiled2.Parser.__exitAtomic", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__exitAtomic(saved:Boolean):Unit", "kind" : "def"}, {"label" : "__enterAtomic", "tail" : "(start: Int): Boolean", "member" : "org.parboiled2.Parser.__enterAtomic", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__enterAtomic(start:Int):Boolean", "kind" : "def"}, {"label" : "__exitNotPredicate", "tail" : "(saved: AnyRef): Unit", "member" : "org.parboiled2.Parser.__exitNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__exitNotPredicate(saved:AnyRef):Unit", "kind" : "def"}, {"label" : "__enterNotPredicate", "tail" : "(): AnyRef", "member" : "org.parboiled2.Parser.__enterNotPredicate", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__enterNotPredicate():AnyRef", "kind" : "def"}, {"label" : "__restoreState", "tail" : "(mark: Mark): Unit", "member" : "org.parboiled2.Parser.__restoreState", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__restoreState(mark:org.parboiled2.Parser.Mark):Unit", "kind" : "def"}, {"label" : "__saveState", "tail" : "(): Mark", "member" : "org.parboiled2.Parser.__saveState", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__saveState:org.parboiled2.Parser.Mark", "kind" : "def"}, {"label" : "__updateMaxCursor", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__updateMaxCursor", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__updateMaxCursor():Boolean", "kind" : "def"}, {"label" : "__advance", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__advance", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__advance():Boolean", "kind" : "def"}, {"label" : "__run", "tail" : "(rule: => RuleN[L])(scheme: DeliveryScheme[L]): Result", "member" : "org.parboiled2.Parser.__run", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__run[L<:shapeless.HList](rule:=>org.parboiled2.RuleN[L])(implicitscheme:org.parboiled2.Parser.DeliveryScheme[L]):scheme.Result", "kind" : "def"}, {"label" : "__inErrorAnalysis", "tail" : "(): Boolean", "member" : "org.parboiled2.Parser.__inErrorAnalysis", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#__inErrorAnalysis:Boolean", "kind" : "def"}, {"label" : "copyStateFrom", "tail" : "(other: Parser, offset: Int): Unit", "member" : "org.parboiled2.Parser.copyStateFrom", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#copyStateFrom(other:org.parboiled2.Parser,offset:Int):Unit", "kind" : "def"}, {"label" : "formatError", "tail" : "(error: ParseError, formatter: ErrorFormatter): String", "member" : "org.parboiled2.Parser.formatError", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#formatError(error:org.parboiled2.ParseError,formatter:org.parboiled2.ErrorFormatter):String", "kind" : "def"}, {"label" : "errorTraceCollectionLimit", "tail" : "(): Int", "member" : "org.parboiled2.Parser.errorTraceCollectionLimit", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#errorTraceCollectionLimit:Int", "kind" : "def"}, {"label" : "valueStack", "tail" : "(): ValueStack", "member" : "org.parboiled2.Parser.valueStack", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#valueStack:org.parboiled2.ValueStack", "kind" : "def"}, {"label" : "charAtRC", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAtRC", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#charAtRC(offset:Int):Char", "kind" : "def"}, {"label" : "charAt", "tail" : "(offset: Int): Char", "member" : "org.parboiled2.Parser.charAt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#charAt(offset:Int):Char", "kind" : "def"}, {"label" : "lastChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.lastChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#lastChar:Char", "kind" : "def"}, {"label" : "cursorChar", "tail" : "(): Char", "member" : "org.parboiled2.Parser.cursorChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#cursorChar:Char", "kind" : "def"}, {"label" : "cursor", "tail" : "(): Int", "member" : "org.parboiled2.Parser.cursor", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#cursor:Int", "kind" : "def"}, {"label" : "namedRule", "tail" : "(name: String)(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.namedRule", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#namedRule[I<:shapeless.HList,O<:shapeless.HList](name:String)(r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.Parser.rule", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#rule[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "macro def"}, {"label" : "rule2ActionOperator", "tail" : "(r: Rule[I, O])(ops: ActionOps[I, O]): ActionOperator[I, O, Out]", "member" : "org.parboiled2.RuleDSLActions.rule2ActionOperator", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#rule2ActionOperator[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitops:org.parboiled2.support.ActionOps[I,O]):RuleDSLActions.this.ActionOperator[I,O,ops.Out]", "kind" : "implicit def"}, {"label" : "drop", "tail" : "(h: HListable[T]): PopRule[Out]", "member" : "org.parboiled2.RuleDSLActions.drop", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#drop[T](implicith:org.parboiled2.support.HListable[T]):org.parboiled2.PopRule[h.Out]", "kind" : "def"}, {"label" : "push", "tail" : "(value: T)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLActions.push", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#push[T](value:T)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "run", "tail" : "(arg: T)(rr: RunResult[T]): Out", "member" : "org.parboiled2.RuleDSLActions.run", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#run[T](arg:T)(implicitrr:org.parboiled2.support.RunResult[T]):rr.Out", "kind" : "def"}, {"label" : "test", "tail" : "(condition: Boolean): Rule0", "member" : "org.parboiled2.RuleDSLActions.test", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#test(condition:Boolean):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "capture", "tail" : "(r: Rule[I, O])(p: Prepend[O, ::[String, HNil]]): Rule[I, Out]", "member" : "org.parboiled2.RuleDSLActions.capture", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#capture[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitp:shapeless.ops.hlist.Prepend[O,String::shapeless.HNil]):org.parboiled2.Rule[I,p.Out]", "kind" : "def"}, {"label" : "rule2WithSeparatedBy", "tail" : "(r: Rule[I, O] with Repeated): WithSeparatedBy[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.rule2WithSeparatedBy", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#rule2WithSeparatedBy[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]withorg.parboiled2.Repeated):RuleDSLCombinators.this.WithSeparatedBy[I,O]", "kind" : "implicit def"}, {"label" : "range2NTimes", "tail" : "(range: Range): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.range2NTimes", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#range2NTimes(range:Range):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "int2NTimes", "tail" : "(i: Int): NTimes", "member" : "org.parboiled2.RuleDSLCombinators.int2NTimes", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#int2NTimes(i:Int):RuleDSLCombinators.this.NTimes", "kind" : "implicit def"}, {"label" : "runSubParser", "tail" : "(f: (ParserInput) => Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.runSubParser", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#runSubParser[I<:shapeless.HList,O<:shapeless.HList](f:org.parboiled2.ParserInput=>org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "quiet", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.quiet", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#quiet[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "atomic", "tail" : "(r: Rule[I, O]): Rule[I, O]", "member" : "org.parboiled2.RuleDSLCombinators.atomic", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#atomic[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O]):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rule[_, _]): Rule0", "member" : "org.parboiled2.RuleDSLCombinators.&", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#&(r:org.parboiled2.Rule[_,_]):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, StrictOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.oneOrMore", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#oneOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.StrictOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "zeroOrMore", "tail" : "(r: Rule[I, O])(l: Lifter[Seq, I, O]): Rule[In, OptionalOut] with Repeated", "member" : "org.parboiled2.RuleDSLCombinators.zeroOrMore", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#zeroOrMore[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Seq,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]withorg.parboiled2.Repeated", "kind" : "def"}, {"label" : "optional", "tail" : "(r: Rule[I, O])(l: Lifter[Option, I, O]): Rule[In, OptionalOut]", "member" : "org.parboiled2.RuleDSLCombinators.optional", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#optional[I<:shapeless.HList,O<:shapeless.HList](r:org.parboiled2.Rule[I,O])(implicitl:org.parboiled2.support.Lifter[Option,I,O]):org.parboiled2.Rule[l.In,l.OptionalOut]", "kind" : "def"}, {"label" : "str2CharRangeSupport", "tail" : "(s: String): CharRangeSupport", "member" : "org.parboiled2.RuleDSLBasics.str2CharRangeSupport", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#str2CharRangeSupport(s:String):RuleDSLBasics.this.CharRangeSupport", "kind" : "implicit def"}, {"label" : "failX", "tail" : "(expected: String): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.failX", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#failX[I<:shapeless.HList,O<:shapeless.HList](expected:String):org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "fail", "tail" : "(expected: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.fail", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#fail(expected:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MISMATCH", "tail" : "(): Rule[I, O]", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#MISMATCH[I<:shapeless.HList,O<:shapeless.HList]:org.parboiled2.Rule[I,O]", "kind" : "def"}, {"label" : "MISMATCH0", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MISMATCH0", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#MISMATCH0:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "MATCH", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.MATCH", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#MATCH:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "EOI", "tail" : "(): Char", "member" : "org.parboiled2.RuleDSLBasics.EOI", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#EOI:Char", "kind" : "def"}, {"label" : "ANY", "tail" : "(): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ANY", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ANY:org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ignoreCase(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "ignoreCase", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ignoreCase", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ignoreCase(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "noneOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.noneOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#noneOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "anyOf", "tail" : "(chars: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.anyOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#anyOf(chars:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T], ignoreCase: Boolean)(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#valueMap[T](m:Map[String,T],ignoreCase:Boolean)(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "def"}, {"label" : "valueMap", "tail" : "(m: Map[String, T])(h: HListable[T]): RuleN[Out]", "member" : "org.parboiled2.RuleDSLBasics.valueMap", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#valueMap[T](m:Map[String,T])(implicith:org.parboiled2.support.HListable[T]):org.parboiled2.RuleN[h.Out]", "kind" : "implicit def"}, {"label" : "predicate", "tail" : "(p: CharPredicate): Rule0", "member" : "org.parboiled2.RuleDSLBasics.predicate", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#predicate(p:org.parboiled2.CharPredicate):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "str", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.RuleDSLBasics.str", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#str(s:String):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "ch", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.RuleDSLBasics.ch", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ch(c:Char):org.parboiled2.Rule0", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "parse", "tail" : "(input: String): Either[CornichonError, DataTable]", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.parse", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#parse(input:String):Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.dsl.DataTable]", "kind" : "def"}, {"label" : "Backslash", "tail" : ": CharPredicate", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.Backslash", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#Backslash:org.parboiled2.CharPredicate", "kind" : "val"}, {"label" : "delims", "tail" : ": CharPredicate", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.delims", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#delims:org.parboiled2.CharPredicate", "kind" : "val"}, {"label" : "delimeter", "tail" : ": CharPredicate", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.delimeter", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#delimeter:org.parboiled2.CharPredicate", "kind" : "val"}, {"label" : "WhiteSpace", "tail" : ": CharPredicate", "member" : "com.github.agourlay.cornichon.dsl.DataTableParser.WhiteSpace", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#WhiteSpace:org.parboiled2.CharPredicate", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/dsl\/DataTableParser.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.dsl.Headers", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.dsl.Headers#<init>", "error" : "unsupported entity"}, {"label" : "fields", "tail" : ": Seq[String]", "member" : "com.github.agourlay.cornichon.dsl.Headers.fields", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#fields:Seq[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/Headers.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.ProvidedInstances", "object" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html", "members_object" : [{"label" : "catsStdShowForBoolean", "tail" : ": Show[Boolean]", "member" : "cats.instances.BooleanInstances.catsStdShowForBoolean", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForBoolean:cats.Show[Boolean]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForBoolean", "tail" : ": Order[Boolean] with Hash[Boolean] with LowerBounded[Boolean] with UpperBounded[Boolean]", "member" : "cats.kernel.instances.BooleanInstances.catsKernelStdOrderForBoolean", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForBoolean:cats.kernel.Order[Boolean]withcats.kernel.Hash[Boolean]withcats.kernel.LowerBounded[Boolean]withcats.kernel.UpperBounded[Boolean]", "kind" : "implicit val"}, {"label" : "catsStdShowForDouble", "tail" : ": Show[Double]", "member" : "cats.instances.DoubleInstances.catsStdShowForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForDouble:cats.Show[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForDouble", "tail" : ": CommutativeGroup[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdGroupForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdGroupForDouble:cats.kernel.CommutativeGroup[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForDouble", "tail" : ": Order[Double] with Hash[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdOrderForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForDouble:cats.kernel.Order[Double]withcats.kernel.Hash[Double]", "kind" : "implicit val"}, {"label" : "catsStdShowForFloat", "tail" : ": Show[Float]", "member" : "cats.instances.FloatInstances.catsStdShowForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForFloat:cats.Show[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForFloat", "tail" : ": CommutativeGroup[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdGroupForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdGroupForFloat:cats.kernel.CommutativeGroup[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForFloat", "tail" : ": Order[Float] with Hash[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdOrderForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForFloat:cats.kernel.Order[Float]withcats.kernel.Hash[Float]", "kind" : "implicit val"}, {"label" : "catsStdShowForLong", "tail" : ": Show[Long]", "member" : "cats.instances.LongInstances.catsStdShowForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForLong:cats.Show[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForLong", "tail" : ": CommutativeGroup[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdGroupForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdGroupForLong:cats.kernel.CommutativeGroup[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForLong", "tail" : ": Order[Long] with Hash[Long] with LowerBounded[Long] with UpperBounded[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdOrderForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForLong:cats.kernel.Order[Long]withcats.kernel.Hash[Long]withcats.kernel.LowerBounded[Long]withcats.kernel.UpperBounded[Long]", "kind" : "implicit val"}, {"label" : "catsStdShowForChar", "tail" : ": Show[Char]", "member" : "cats.instances.CharInstances.catsStdShowForChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForChar:cats.Show[Char]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForChar", "tail" : ": CharOrder", "member" : "cats.kernel.instances.CharInstances.catsKernelStdOrderForChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForChar:cats.kernel.instances.CharOrder", "kind" : "implicit val"}, {"label" : "catsStdShowForInt", "tail" : ": Show[Int]", "member" : "cats.instances.IntInstances.catsStdShowForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForInt:cats.Show[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForInt", "tail" : ": CommutativeGroup[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdGroupForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdGroupForInt:cats.kernel.CommutativeGroup[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForInt", "tail" : ": Order[Int] with Hash[Int] with LowerBounded[Int] with UpperBounded[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdOrderForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForInt:cats.kernel.Order[Int]withcats.kernel.Hash[Int]withcats.kernel.LowerBounded[Int]withcats.kernel.UpperBounded[Int]", "kind" : "implicit val"}, {"label" : "catsStdShowForString", "tail" : ": Show[String]", "member" : "cats.instances.StringInstances.catsStdShowForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsStdShowForString:cats.Show[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdMonoidForString", "tail" : ": Monoid[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdMonoidForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdMonoidForString:cats.kernel.Monoid[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForString", "tail" : ": Order[String] with Hash[String] with LowerBounded[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdOrderForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#catsKernelStdOrderForString:cats.kernel.Order[String]withcats.kernel.Hash[String]withcats.kernel.LowerBounded[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html", "kind" : "trait", "members_trait" : [{"label" : "catsStdShowForBoolean", "tail" : ": Show[Boolean]", "member" : "cats.instances.BooleanInstances.catsStdShowForBoolean", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForBoolean:cats.Show[Boolean]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForBoolean", "tail" : ": Order[Boolean] with Hash[Boolean] with LowerBounded[Boolean] with UpperBounded[Boolean]", "member" : "cats.kernel.instances.BooleanInstances.catsKernelStdOrderForBoolean", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForBoolean:cats.kernel.Order[Boolean]withcats.kernel.Hash[Boolean]withcats.kernel.LowerBounded[Boolean]withcats.kernel.UpperBounded[Boolean]", "kind" : "implicit val"}, {"label" : "catsStdShowForDouble", "tail" : ": Show[Double]", "member" : "cats.instances.DoubleInstances.catsStdShowForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForDouble:cats.Show[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForDouble", "tail" : ": CommutativeGroup[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdGroupForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdGroupForDouble:cats.kernel.CommutativeGroup[Double]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForDouble", "tail" : ": Order[Double] with Hash[Double]", "member" : "cats.kernel.instances.DoubleInstances.catsKernelStdOrderForDouble", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForDouble:cats.kernel.Order[Double]withcats.kernel.Hash[Double]", "kind" : "implicit val"}, {"label" : "catsStdShowForFloat", "tail" : ": Show[Float]", "member" : "cats.instances.FloatInstances.catsStdShowForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForFloat:cats.Show[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForFloat", "tail" : ": CommutativeGroup[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdGroupForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdGroupForFloat:cats.kernel.CommutativeGroup[Float]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForFloat", "tail" : ": Order[Float] with Hash[Float]", "member" : "cats.kernel.instances.FloatInstances.catsKernelStdOrderForFloat", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForFloat:cats.kernel.Order[Float]withcats.kernel.Hash[Float]", "kind" : "implicit val"}, {"label" : "catsStdShowForLong", "tail" : ": Show[Long]", "member" : "cats.instances.LongInstances.catsStdShowForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForLong:cats.Show[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForLong", "tail" : ": CommutativeGroup[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdGroupForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdGroupForLong:cats.kernel.CommutativeGroup[Long]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForLong", "tail" : ": Order[Long] with Hash[Long] with LowerBounded[Long] with UpperBounded[Long]", "member" : "cats.kernel.instances.LongInstances.catsKernelStdOrderForLong", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForLong:cats.kernel.Order[Long]withcats.kernel.Hash[Long]withcats.kernel.LowerBounded[Long]withcats.kernel.UpperBounded[Long]", "kind" : "implicit val"}, {"label" : "catsStdShowForChar", "tail" : ": Show[Char]", "member" : "cats.instances.CharInstances.catsStdShowForChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForChar:cats.Show[Char]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForChar", "tail" : ": CharOrder", "member" : "cats.kernel.instances.CharInstances.catsKernelStdOrderForChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForChar:cats.kernel.instances.CharOrder", "kind" : "implicit val"}, {"label" : "catsStdShowForInt", "tail" : ": Show[Int]", "member" : "cats.instances.IntInstances.catsStdShowForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForInt:cats.Show[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdGroupForInt", "tail" : ": CommutativeGroup[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdGroupForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdGroupForInt:cats.kernel.CommutativeGroup[Int]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForInt", "tail" : ": Order[Int] with Hash[Int] with LowerBounded[Int] with UpperBounded[Int]", "member" : "cats.kernel.instances.IntInstances.catsKernelStdOrderForInt", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForInt:cats.kernel.Order[Int]withcats.kernel.Hash[Int]withcats.kernel.LowerBounded[Int]withcats.kernel.UpperBounded[Int]", "kind" : "implicit val"}, {"label" : "catsStdShowForString", "tail" : ": Show[String]", "member" : "cats.instances.StringInstances.catsStdShowForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsStdShowForString:cats.Show[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdMonoidForString", "tail" : ": Monoid[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdMonoidForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdMonoidForString:cats.kernel.Monoid[String]", "kind" : "implicit val"}, {"label" : "catsKernelStdOrderForString", "tail" : ": Order[String] with Hash[String] with LowerBounded[String]", "member" : "cats.kernel.instances.StringInstances.catsKernelStdOrderForString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#catsKernelStdOrderForString:cats.kernel.Order[String]withcats.kernel.Hash[String]withcats.kernel.LowerBounded[String]", "kind" : "implicit val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/ProvidedInstances.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.dsl.Row", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.dsl.Row#<init>", "error" : "unsupported entity"}, {"label" : "fields", "tail" : ": Seq[String]", "member" : "com.github.agourlay.cornichon.dsl.Row.fields", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#fields:Seq[String]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/dsl\/Row.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.dsl.SessionSteps", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html", "members_object" : [{"label" : "keyIsAbsentError", "tail" : "(keyName: String, session: String): String", "member" : "com.github.agourlay.cornichon.dsl.SessionSteps.keyIsAbsentError", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#keyIsAbsentError(keyName:String,session:String):String", "kind" : "def"}, {"label" : "keyIsPresentError", "tail" : "(keyName: String, keyValue: String): String", "member" : "com.github.agourlay.cornichon.dsl.SessionSteps.keyIsPresentError", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#keyIsPresentError(keyName:String,keyValue:String):String", "kind" : "def"}, {"label" : "SessionStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.SessionSteps.SessionStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#SessionStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "SessionValuesStepBuilder", "tail" : "", "member" : "com.github.agourlay.cornichon.dsl.SessionSteps.SessionValuesStepBuilder", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#SessionValuesStepBuilderextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/SessionSteps$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport", "trait" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html", "kind" : "trait", "members_trait" : [{"label" : "Unicode", "tail" : "(): Rule[HNil, ::[Int, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.Unicode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#Unicode:org.parboiled2.Rule[shapeless.HNil,Int::shapeless.HNil]", "kind" : "def"}, {"label" : "EscapedChar", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.EscapedChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#EscapedChar:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "NormalChar", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.NormalChar", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#NormalChar:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "Characters", "tail" : "(): Rule[HNil, HNil]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.Characters", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#Characters:org.parboiled2.Rule[shapeless.HNil,shapeless.HNil]", "kind" : "def"}, {"label" : "HeaderValue", "tail" : "(): Rule[HNil, ::[String, HNil]]", "member" : "com.github.agourlay.cornichon.dsl.StringHeaderParserSupport.HeaderValue", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#HeaderValue:org.parboiled2.Rule[shapeless.HNil,String::shapeless.HNil]", "kind" : "def"}, {"label" : "setSB", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.StringBuilding.setSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#setSB(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#prependSB(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#prependSB(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(offset: Int): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#prependSB(offset:Int):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "prependSB", "tail" : "(): Rule0", "member" : "org.parboiled2.StringBuilding.prependSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#prependSB():org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(s: String): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#appendSB(s:String):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(c: Char): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#appendSB(c:Char):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(offset: Int): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#appendSB(offset:Int):org.parboiled2.Rule0", "kind" : "def"}, {"label" : "appendSB", "tail" : "(): Rule0", "member" : "org.parboiled2.StringBuilding.appendSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#appendSB():org.parboiled2.Rule0", "kind" : "def"}, {"label" : "clearSB", "tail" : "(): Rule0", "member" : "org.parboiled2.StringBuilding.clearSB", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#clearSB():org.parboiled2.Rule0", "kind" : "def"}, {"label" : "sb", "tail" : ": StringBuilder", "member" : "org.parboiled2.StringBuilding.sb", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#sb:StringBuilder", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/dsl\/StringHeaderParserSupport.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "com.github.agourlay.cornichon.steps.wrapped" : [{"name" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep", "shortDescription" : "", "members_case class" : [{"label" : "logStackOnNestedSuccess", "tail" : "(resultLogStack: List[LogInstruction], depth: Int, executionTime: Duration): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep.logStackOnNestedSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#logStackOnNestedSuccess(resultLogStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,executionTime:scala.concurrent.duration.Duration):List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "def"}, {"label" : "logStackOnNestedError", "tail" : "(resultLogStack: List[LogInstruction], depth: Int, executionTime: Duration): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep.logStackOnNestedError", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#logStackOnNestedError(resultLogStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,executionTime:scala.concurrent.duration.Duration):List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep#<init>", "error" : "unsupported entity"}, {"label" : "nestedToRun", "tail" : ": (Session) => List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep.nestedToRun", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#nestedToRun:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachAsStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#title:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachAsStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.AttachStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.AttachStep#<init>", "error" : "unsupported entity"}, {"label" : "nested", "tail" : ": (Session) => List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.AttachStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#nested:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/AttachStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyError#<init>", "error" : "unsupported entity"}, {"label" : "cause", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyError.cause", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#cause:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyStep#<init>", "error" : "unsupported entity"}, {"label" : "maxTime", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyStep.maxTime", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#maxTime:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyTimeout", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyTimeout.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyTimeout#<init>", "error" : "unsupported entity"}, {"label" : "success", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyTimeout.success", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#success:Int", "kind" : "val"}, {"label" : "total", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.ConcurrentlyTimeout.total", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#total:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ConcurrentlyTimeout.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockMaxInactivity", "case object" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html", "shortDescription" : "", "members_case object" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockMaxInactivity.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#baseErrorMessage:String", "kind" : "lazy val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockMaxInactivity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockOscillationDetected", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockOscillationDetected.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockOscillationDetected#<init>", "error" : "unsupported entity"}, {"label" : "failedStep", "tail" : ": FailedStep", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockOscillationDetected.failedStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#failedStep:com.github.agourlay.cornichon.core.FailedStep", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockOscillationDetected.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockSucceedAfterMaxDuration", "case object" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html", "shortDescription" : "", "members_case object" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyBlockSucceedAfterMaxDuration.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#baseErrorMessage:String", "kind" : "lazy val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyBlockSucceedAfterMaxDuration$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "case object"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyConf", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html", "members_object" : [{"label" : "empty", "tail" : ": EventuallyConf", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyConf.empty", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#empty:com.github.agourlay.cornichon.steps.wrapped.EventuallyConf", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "consume", "tail" : "(burnt: FiniteDuration): EventuallyConf", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyConf.consume", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#consume(burnt:scala.concurrent.duration.FiniteDuration):com.github.agourlay.cornichon.steps.wrapped.EventuallyConf", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyConf#<init>", "error" : "unsupported entity"}, {"label" : "interval", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyConf.interval", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#interval:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "maxTime", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyConf.maxTime", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#maxTime:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyConf.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep#<init>", "error" : "unsupported entity"}, {"label" : "oscillationAllowed", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep.oscillationAllowed", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#oscillationAllowed:Boolean", "kind" : "val"}, {"label" : "conf", "tail" : ": EventuallyConf", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep.conf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#conf:com.github.agourlay.cornichon.steps.wrapped.EventuallyConf", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.EventuallyStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/EventuallyStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.FlatMapStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.FlatMapStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.FlatMapStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.FlatMapStep#<init>", "error" : "unsupported entity"}, {"label" : "nestedProducers", "tail" : ": (Session) => List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.FlatMapStep.nestedProducers", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#nestedProducers:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "started", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.wrapped.FlatMapStep.started", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#started:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/FlatMapStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep", "shortDescription" : "", "members_case class" : [{"label" : "logStackOnNestedSuccess", "tail" : "(resultLogStack: List[LogInstruction], depth: Int, executionTime: Duration): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep.logStackOnNestedSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#logStackOnNestedSuccess(resultLogStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,executionTime:scala.concurrent.duration.Duration):List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "def"}, {"label" : "logStackOnNestedError", "tail" : "(resultLogStack: List[LogInstruction], depth: Int, executionTime: Duration): List[LogInstruction]", "member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep.logStackOnNestedError", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#logStackOnNestedError(resultLogStack:List[com.github.agourlay.cornichon.core.LogInstruction],depth:Int,executionTime:scala.concurrent.duration.Duration):List[com.github.agourlay.cornichon.core.LogInstruction]", "kind" : "def"}, {"label" : "nestedToRun", "tail" : ": (Session) => List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep.nestedToRun", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#nestedToRun:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep#<init>", "error" : "unsupported entity"}, {"label" : "label", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep.label", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#label:String", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.LogDurationStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.LogDecoratorStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/LogDurationStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatBlockContainFailedSteps", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatBlockContainFailedSteps.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatBlockContainFailedSteps.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatBlockContainFailedSteps#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": NonEmptyList[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatBlockContainFailedSteps.errors", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "failedOccurrence", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatBlockContainFailedSteps.failedOccurrence", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#failedOccurrence:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatBlockContainFailedSteps.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyError", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyError.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyError#<init>", "error" : "unsupported entity"}, {"label" : "cause", "tail" : ": Throwable", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyError.cause", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#cause:Throwable", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyError.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep#<init>", "error" : "unsupported entity"}, {"label" : "maxTime", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep.maxTime", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#maxTime:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "parallelism", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep.parallelism", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#parallelism:Int", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "times", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyStep.times", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#times:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyTimeout", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyTimeout.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyTimeout#<init>", "error" : "unsupported entity"}, {"label" : "success", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyTimeout.success", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#success:Int", "kind" : "val"}, {"label" : "times", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatConcurrentlyTimeout.times", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#times:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatConcurrentlyTimeout.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringBlockContainFailedSteps", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringBlockContainFailedSteps.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringBlockContainFailedSteps.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringBlockContainFailedSteps#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": NonEmptyList[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringBlockContainFailedSteps.errors", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "duration", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringBlockContainFailedSteps.duration", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringBlockContainFailedSteps.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringStep#<init>", "error" : "unsupported entity"}, {"label" : "duration", "tail" : ": FiniteDuration", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringStep.duration", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#duration:scala.concurrent.duration.FiniteDuration", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatDuringStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatDuringStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep#<init>", "error" : "unsupported entity"}, {"label" : "indexName", "tail" : ": Option[String]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep.indexName", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#indexName:Option[String]", "kind" : "val"}, {"label" : "occurrence", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep.occurrence", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#occurrence:Int", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithBlockContainFailedSteps", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithBlockContainFailedSteps.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithBlockContainFailedSteps.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithBlockContainFailedSteps#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": NonEmptyList[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithBlockContainFailedSteps.errors", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "element", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithBlockContainFailedSteps.element", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#element:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithBlockContainFailedSteps.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#title:String", "kind" : "val"}, {"label" : "printElements", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep.printElements", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#printElements:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep#<init>", "error" : "unsupported entity"}, {"label" : "elementName", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep.elementName", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#elementName:String", "kind" : "val"}, {"label" : "elements", "tail" : ": List[String]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep.elements", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#elements:List[String]", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RepeatWithStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RepeatWithStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxBlockReachedLimit", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxBlockReachedLimit.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxBlockReachedLimit.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxBlockReachedLimit#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": NonEmptyList[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxBlockReachedLimit.errors", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "limit", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxBlockReachedLimit.limit", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#limit:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxBlockReachedLimit.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxStep#<init>", "error" : "unsupported entity"}, {"label" : "limit", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxStep.limit", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#limit:Int", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.RetryMaxStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/RetryMaxStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep", "shortDescription" : "", "members_case class" : [{"label" : "onNestedSuccess", "tail" : "(resultRunState: RunState, runState: RunState, executionTime: Duration): RunState", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.onNestedSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#onNestedSuccess(resultRunState:com.github.agourlay.cornichon.core.RunState,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.RunState", "kind" : "def"}, {"label" : "onNestedError", "tail" : "(failedStep: FailedStep, resultRunState: RunState, runState: RunState, executionTime: Duration): (RunState, FailedStep)", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.onNestedError", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#onNestedError(failedStep:com.github.agourlay.cornichon.core.FailedStep,resultRunState:com.github.agourlay.cornichon.core.RunState,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.RunState,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "def"}, {"label" : "indentLog", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.indentLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#indentLog:Boolean", "kind" : "val"}, {"label" : "nestedToRun", "tail" : ": List[AttachAsStep]", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.nestedToRun", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#nestedToRun:List[com.github.agourlay.cornichon.steps.wrapped.AttachAsStep]", "kind" : "val"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep#<init>", "error" : "unsupported entity"}, {"label" : "release", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.release", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#release:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "acquire", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.acquire", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#acquire:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.ScenarioResourceStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#title:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.SimpleWrapperStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/ScenarioResourceStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.WithBlockScopedResource", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithBlockScopedResource.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithBlockScopedResource.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.WithBlockScopedResource#<init>", "error" : "unsupported entity"}, {"label" : "resource", "tail" : ": BlockScopedResource", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithBlockScopedResource.resource", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#resource:com.github.agourlay.cornichon.dsl.BlockScopedResource", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithBlockScopedResource.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithBlockScopedResource.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputBlockFailedStep", "shortDescription" : "", "members_case class" : [{"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputBlockFailedStep.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputBlockFailedStep.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#baseErrorMessage:String", "kind" : "lazy val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputBlockFailedStep#<init>", "error" : "unsupported entity"}, {"label" : "errors", "tail" : ": NonEmptyList[CornichonError]", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputBlockFailedStep.errors", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "failedInputs", "tail" : ": List[(String, String)]", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputBlockFailedStep.failedInputs", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#failedInputs:List[(String,String)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputBlockFailedStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputStep#<init>", "error" : "unsupported entity"}, {"label" : "where", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputStep.where", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#where:String", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithDataInputStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithDataInputStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.WithinBlockSucceedAfterMaxDuration", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinBlockSucceedAfterMaxDuration.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#baseErrorMessage:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.WithinBlockSucceedAfterMaxDuration#<init>", "error" : "unsupported entity"}, {"label" : "executionTime", "tail" : ": Duration", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinBlockSucceedAfterMaxDuration.executionTime", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#executionTime:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "maxDuration", "tail" : ": Duration", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinBlockSucceedAfterMaxDuration.maxDuration", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#maxDuration:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinBlockSucceedAfterMaxDuration.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.wrapped.WithinStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.wrapped.WithinStep#<init>", "error" : "unsupported entity"}, {"label" : "maxDuration", "tail" : ": Duration", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinStep.maxDuration", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#maxDuration:scala.concurrent.duration.Duration", "kind" : "val"}, {"label" : "nested", "tail" : ": List[Step]", "member" : "com.github.agourlay.cornichon.steps.wrapped.WithinStep.nested", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#nested:List[com.github.agourlay.cornichon.core.Step]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/wrapped\/WithinStep.html", "kind" : "case class"}], "com.github.agourlay.cornichon.util" : [{"name" : "com.github.agourlay.cornichon.util.Caching", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html", "members_object" : [{"label" : "buildCache", "tail" : "(size: Long): Cache[K, V]", "member" : "com.github.agourlay.cornichon.util.Caching.buildCache", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#buildCache[K<:Object,V<:Object](size:Long):com.github.benmanes.caffeine.cache.Cache[K,V]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/util\/Caching$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.util.Printing", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html", "members_object" : [{"label" : "showMap", "tail" : "(arg0: Show[A], arg1: Ordering[A], arg2: Show[B]): Show[Map[A, B]]", "member" : "com.github.agourlay.cornichon.util.Printing.showMap", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#showMap[A,B](implicitevidence$2:cats.Show[A],implicitevidence$3:Ordering[A],implicitevidence$4:cats.Show[B]):cats.Show[Map[A,B]]", "kind" : "implicit def"}, {"label" : "showIterable", "tail" : "(arg0: Show[A]): Show[Iterable[A]]", "member" : "com.github.agourlay.cornichon.util.Printing.showIterable", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#showIterable[A](implicitevidence$1:cats.Show[A]):cats.Show[Iterable[A]]", "kind" : "implicit def"}, {"label" : "printArrowPairs", "tail" : "(params: Seq[(String, String)]): String", "member" : "com.github.agourlay.cornichon.util.Printing.printArrowPairs", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#printArrowPairs(params:Seq[(String,String)]):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/util\/Printing$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.util.StringUtils", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html", "members_object" : [{"label" : "levenshtein", "tail" : "(str1: String, str2: String): Int", "member" : "com.github.agourlay.cornichon.util.StringUtils.levenshtein", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#levenshtein(str1:String,str2:String):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/util\/StringUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.github.agourlay.cornichon.steps.check.checkModel" : [{"name" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelEngine", "shortDescription" : "", "members_class" : [{"label" : "run", "tail" : "(runState: RunState): Task[(RunState, Either[FailedStep, SuccessEndOfRun])]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelEngine.run", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#run(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[(com.github.agourlay.cornichon.core.RunState,Either[com.github.agourlay.cornichon.core.FailedStep,com.github.agourlay.cornichon.steps.check.checkModel.SuccessEndOfRun])]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelEngine#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelEngine.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep", "shortDescription" : "", "members_case class" : [{"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#title:String", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep#<init>", "error" : "unsupported entity"}, {"label" : "modelRunner", "tail" : ": ModelRunner[A, B, C, D, E, F]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep.modelRunner", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#modelRunner:com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,D,E,F]", "kind" : "val"}, {"label" : "maxNumberOfTransitions", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep.maxNumberOfTransitions", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#maxNumberOfTransitions:Int", "kind" : "val"}, {"label" : "maxNumberOfRuns", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.CheckModelStep.maxNumberOfRuns", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#maxNumberOfRuns:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successTitleLog", "tail" : "(depth: Int): SuccessLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.successTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#successTitleLog(depth:Int):com.github.agourlay.cornichon.core.SuccessLogInstruction", "kind" : "def"}, {"label" : "failedTitleLog", "tail" : "(depth: Int): FailureLogInstruction", "member" : "com.github.agourlay.cornichon.core.WrapperStep.failedTitleLog", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#failedTitleLog(depth:Int):com.github.agourlay.cornichon.core.FailureLogInstruction", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.core.WrapperStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/CheckModelStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.DuplicateTransitionsDefinitionForProperty", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.DuplicateTransitionsDefinitionForProperty.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#baseErrorMessage:String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.DuplicateTransitionsDefinitionForProperty#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.DuplicateTransitionsDefinitionForProperty.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/DuplicateTransitionsDefinitionForProperty.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.EmptyTransitionsDefinitionForProperty", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.EmptyTransitionsDefinitionForProperty.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#baseErrorMessage:String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.EmptyTransitionsDefinitionForProperty#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.EmptyTransitionsDefinitionForProperty.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EmptyTransitionsDefinitionForProperty.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.EndPropertyReached", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.steps.check.checkModel.EndPropertyReached#<init>", "error" : "unsupported entity"}, {"label" : "numberOfTransitions", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.EndPropertyReached.numberOfTransitions", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#numberOfTransitions:Int", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.EndPropertyReached.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/EndPropertyReached.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.IncorrectTransitionsWeightDefinitionForProperty", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.IncorrectTransitionsWeightDefinitionForProperty.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#baseErrorMessage:String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.IncorrectTransitionsWeightDefinitionForProperty#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.IncorrectTransitionsWeightDefinitionForProperty.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/IncorrectTransitionsWeightDefinitionForProperty.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.InvalidTransitionDefinitionForProperty", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.InvalidTransitionDefinitionForProperty.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#baseErrorMessage:String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.InvalidTransitionDefinitionForProperty#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.InvalidTransitionDefinitionForProperty.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/InvalidTransitionDefinitionForProperty.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.MaxTransitionReached", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.steps.check.checkModel.MaxTransitionReached#<init>", "error" : "unsupported entity"}, {"label" : "numberOfTransitions", "tail" : ": Int", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.MaxTransitionReached.numberOfTransitions", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#numberOfTransitions:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/MaxTransitionReached.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Model", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Model#<init>", "error" : "unsupported entity"}, {"label" : "transitions", "tail" : ": Map[PropertyN[A, B, C, D, E, F], List[(Int, PropertyN[A, B, C, D, E, F])]]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Model.transitions", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#transitions:Map[com.github.agourlay.cornichon.steps.check.checkModel.PropertyN[A,B,C,D,E,F],List[(Int,com.github.agourlay.cornichon.steps.check.checkModel.PropertyN[A,B,C,D,E,F])]]", "kind" : "val"}, {"label" : "entryPoint", "tail" : ": PropertyN[A, B, C, D, E, F]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Model.entryPoint", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#entryPoint:com.github.agourlay.cornichon.steps.check.checkModel.PropertyN[A,B,C,D,E,F]", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Model.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Model.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html", "members_object" : [{"label" : "make", "tail" : "(genA: (RandomContext) => Generator[A], genB: (RandomContext) => Generator[B], genC: (RandomContext) => Generator[C], genD: (RandomContext) => Generator[D], genE: (RandomContext) => Generator[E], genF: (RandomContext) => Generator[F])(model: Model[A, B, C, D, E, F]): ModelRunner[A, B, C, D, E, F]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.make", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#make[A,B,C,D,E,F](genA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],genB:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],genC:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],genD:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D],genE:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E],genF:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[F])(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,B,C,D,E,F]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,D,E,F]", "kind" : "def"}, {"label" : "make", "tail" : "(genA: (RandomContext) => Generator[A], genB: (RandomContext) => Generator[B], genC: (RandomContext) => Generator[C], genD: (RandomContext) => Generator[D], genE: (RandomContext) => Generator[E])(model: Model[A, B, C, D, E, NoValue]): ModelRunner[A, B, C, D, E, NoValue]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.make", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#make[A,B,C,D,E](genA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],genB:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],genC:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],genD:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D],genE:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E])(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,B,C,D,E,com.github.agourlay.cornichon.core.NoValue]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,D,E,com.github.agourlay.cornichon.core.NoValue]", "kind" : "def"}, {"label" : "make", "tail" : "(genA: (RandomContext) => Generator[A], genB: (RandomContext) => Generator[B], genC: (RandomContext) => Generator[C], genD: (RandomContext) => Generator[D])(model: Model[A, B, C, D, NoValue, NoValue]): ModelRunner[A, B, C, D, NoValue, NoValue]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.make", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#make[A,B,C,D](genA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],genB:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],genC:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C],genD:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D])(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,B,C,D,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,D,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]", "kind" : "def"}, {"label" : "make", "tail" : "(genA: (RandomContext) => Generator[A], genB: (RandomContext) => Generator[B], genC: (RandomContext) => Generator[C])(model: Model[A, B, C, NoValue, NoValue, NoValue]): ModelRunner[A, B, C, NoValue, NoValue, NoValue]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.make", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#make[A,B,C](genA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],genB:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B],genC:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C])(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,B,C,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,C,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]", "kind" : "def"}, {"label" : "make", "tail" : "(genA: (RandomContext) => Generator[A], genB: (RandomContext) => Generator[B])(model: Model[A, B, NoValue, NoValue, NoValue, NoValue]): ModelRunner[A, B, NoValue, NoValue, NoValue, NoValue]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.make", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#make[A,B](genA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A],genB:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B])(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,B,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,B,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]", "kind" : "def"}, {"label" : "make", "tail" : "(genA: (RandomContext) => Generator[A])(model: Model[A, NoValue, NoValue, NoValue, NoValue, NoValue]): ModelRunner[A, NoValue, NoValue, NoValue, NoValue, NoValue]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.make", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#make[A](genA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A])(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[A,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]", "kind" : "def"}, {"label" : "makeNoGen", "tail" : "(model: Model[NoValue, NoValue, NoValue, NoValue, NoValue, NoValue]): ModelRunner[NoValue, NoValue, NoValue, NoValue, NoValue, NoValue]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.makeNoGen", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#makeNoGen(model:com.github.agourlay.cornichon.steps.check.checkModel.Model[com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]):com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner[com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue,com.github.agourlay.cornichon.core.NoValue]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner#<init>", "error" : "unsupported entity"}, {"label" : "model", "tail" : ": Model[A, B, C, D, E, F]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.model", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#model:com.github.agourlay.cornichon.steps.check.checkModel.Model[A,B,C,D,E,F]", "kind" : "val"}, {"label" : "generatorF", "tail" : ": (RandomContext) => Generator[F]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.generatorF", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#generatorF:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[F]", "kind" : "val"}, {"label" : "generatorE", "tail" : ": (RandomContext) => Generator[E]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.generatorE", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#generatorE:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[E]", "kind" : "val"}, {"label" : "generatorD", "tail" : ": (RandomContext) => Generator[D]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.generatorD", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#generatorD:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[D]", "kind" : "val"}, {"label" : "generatorC", "tail" : ": (RandomContext) => Generator[C]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.generatorC", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#generatorC:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[C]", "kind" : "val"}, {"label" : "generatorB", "tail" : ": (RandomContext) => Generator[B]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.generatorB", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#generatorB:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[B]", "kind" : "val"}, {"label" : "generatorA", "tail" : ": (RandomContext) => Generator[A]", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.ModelRunner.generatorA", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#generatorA:com.github.agourlay.cornichon.core.RandomContext=>com.github.agourlay.cornichon.core.Generator[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/ModelRunner.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.NoTransitionsDefinitionForStartingProperty", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.NoTransitionsDefinitionForStartingProperty.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#baseErrorMessage:String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.NoTransitionsDefinitionForStartingProperty#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.NoTransitionsDefinitionForStartingProperty.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoTransitionsDefinitionForStartingProperty.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.NoValidTransitionAvailableForState", "shortDescription" : "", "members_case class" : [{"label" : "baseErrorMessage", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.NoValidTransitionAvailableForState.baseErrorMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#baseErrorMessage:String", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.NoValidTransitionAvailableForState#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.NoValidTransitionAvailableForState.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "toException", "tail" : "(): CornichonException", "member" : "com.github.agourlay.cornichon.core.CornichonError.toException", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#toException:com.github.agourlay.cornichon.core.CornichonException", "kind" : "def"}, {"label" : "renderedMessage", "tail" : ": String", "member" : "com.github.agourlay.cornichon.core.CornichonError.renderedMessage", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#renderedMessage:String", "kind" : "lazy val"}, {"label" : "causedBy", "tail" : ": List[CornichonError]", "member" : "com.github.agourlay.cornichon.core.CornichonError.causedBy", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#causedBy:List[com.github.agourlay.cornichon.core.CornichonError]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/NoValidTransitionAvailableForState.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property0", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => NoValue, () => NoValue, () => NoValue, () => NoValue, () => NoValue, () => NoValue) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property0.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#invariantN:(()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property0#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": () => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property0.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#invariant:()=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property0.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property0.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property0.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property1", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => A, () => NoValue, () => NoValue, () => NoValue, () => NoValue, () => NoValue) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property1.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#invariantN:(()=>A,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property1#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": (() => A) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property1.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#invariant:(()=>A)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property1.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property1.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property1.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property2", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => A, () => B, () => NoValue, () => NoValue, () => NoValue, () => NoValue) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property2.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#invariantN:(()=>A,()=>B,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property2#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": (() => A, () => B) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property2.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#invariant:(()=>A,()=>B)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property2.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property2.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property2.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property3", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => A, () => B, () => C, () => NoValue, () => NoValue, () => NoValue) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property3.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#invariantN:(()=>A,()=>B,()=>C,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property3#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": (() => A, () => B, () => C) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property3.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#invariant:(()=>A,()=>B,()=>C)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property3.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property3.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property3.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property4", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => A, () => B, () => C, () => D, () => NoValue, () => NoValue) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property4.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#invariantN:(()=>A,()=>B,()=>C,()=>D,()=>com.github.agourlay.cornichon.core.NoValue,()=>com.github.agourlay.cornichon.core.NoValue)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property4#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": (() => A, () => B, () => C, () => D) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property4.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#invariant:(()=>A,()=>B,()=>C,()=>D)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property4.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property4.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property4.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property5", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => A, () => B, () => C, () => D, () => E, () => NoValue) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property5.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#invariantN:(()=>A,()=>B,()=>C,()=>D,()=>E,()=>com.github.agourlay.cornichon.core.NoValue)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property5#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": (() => A, () => B, () => C, () => D, () => E) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property5.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#invariant:(()=>A,()=>B,()=>C,()=>D,()=>E)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property5.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property5.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property5.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.Property6", "shortDescription" : "", "members_case class" : [{"label" : "invariantN", "tail" : ": (() => A, () => B, () => C, () => D, () => E, () => F) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property6.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#invariantN:(()=>A,()=>B,()=>C,()=>D,()=>E,()=>F)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property6#<init>", "error" : "unsupported entity"}, {"label" : "invariant", "tail" : ": (() => A, () => B, () => C, () => D, () => E, () => F) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property6.invariant", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#invariant:(()=>A,()=>B,()=>C,()=>D,()=>E,()=>F)=>com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property6.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.Property6.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#description:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/Property6.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.PropertyN", "trait" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "invariantN", "tail" : ": (() => A, () => B, () => C, () => D, () => E, () => F) => Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.PropertyN.invariantN", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#invariantN:(()=>A,()=>B,()=>C,()=>D,()=>E,()=>F)=>com.github.agourlay.cornichon.core.Step", "kind" : "abstract val"}, {"label" : "preCondition", "tail" : ": Step", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.PropertyN.preCondition", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#preCondition:com.github.agourlay.cornichon.core.Step", "kind" : "abstract val"}, {"label" : "description", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.check.checkModel.PropertyN.description", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/PropertyN.html#description:String", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "com.github.agourlay.cornichon.steps.check.checkModel.SuccessEndOfRun", "trait" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/check\/checkModel\/SuccessEndOfRun.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : ""}], "com.github.agourlay.cornichon.framework" : [{"name" : "com.github.agourlay.cornichon.framework.CornichonFeatureRunner", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html", "members_object" : [{"label" : "loadAndExecute", "tail" : "(featureInfo: FeatureInfo, eventHandler: EventHandler, seed: Option[Long], scenarioNameFilter: Set[String]): Task[Boolean]", "member" : "com.github.agourlay.cornichon.framework.CornichonFeatureRunner.loadAndExecute", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#loadAndExecute(featureInfo:com.github.agourlay.cornichon.framework.FeatureInfo,eventHandler:sbt.testing.EventHandler,seed:Option[Long],scenarioNameFilter:Set[String]):monix.eval.Task[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.framework.CornichonFeatureSbtTask", "shortDescription" : "", "members_class" : [{"label" : "execute", "tail" : "(eventHandler: EventHandler, loggers: Array[Logger]): Array[Task]", "member" : "com.github.agourlay.cornichon.framework.CornichonFeatureSbtTask.execute", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#execute(eventHandler:sbt.testing.EventHandler,loggers:Array[sbt.testing.Logger]):Array[sbt.testing.Task]", "kind" : "def"}, {"label" : "taskDef", "tail" : "(): TaskDef", "member" : "com.github.agourlay.cornichon.framework.CornichonFeatureSbtTask.taskDef", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#taskDef():sbt.testing.TaskDef", "kind" : "def"}, {"label" : "tags", "tail" : "(): Array[String]", "member" : "com.github.agourlay.cornichon.framework.CornichonFeatureSbtTask.tags", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#tags():Array[String]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.framework.CornichonFeatureSbtTask#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFeatureSbtTask.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.framework.CornichonFingerprint", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html", "members_object" : [{"label" : "requireNoArgConstructor", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.framework.CornichonFingerprint.requireNoArgConstructor", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#requireNoArgConstructor():Boolean", "kind" : "def"}, {"label" : "superclassName", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.framework.CornichonFingerprint.superclassName", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#superclassName():String", "kind" : "def"}, {"label" : "isModule", "tail" : "(): Boolean", "member" : "com.github.agourlay.cornichon.framework.CornichonFingerprint.isModule", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#isModule():Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFingerprint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.framework.CornichonFramework", "shortDescription" : "", "members_class" : [{"label" : "name", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.framework.CornichonFramework.name", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#name():String", "kind" : "def"}, {"label" : "runner", "tail" : "(args: Array[String], remoteArgs: Array[String], testClassLoader: ClassLoader): Runner", "member" : "com.github.agourlay.cornichon.framework.CornichonFramework.runner", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#runner(args:Array[String],remoteArgs:Array[String],testClassLoader:ClassLoader):sbt.testing.Runner", "kind" : "def"}, {"label" : "fingerprints", "tail" : "(): Array[Fingerprint]", "member" : "com.github.agourlay.cornichon.framework.CornichonFramework.fingerprints", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#fingerprints():Array[sbt.testing.Fingerprint]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.framework.CornichonFramework#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/framework\/CornichonFramework.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html", "members_class" : [{"label" : "done", "tail" : "(): String", "member" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner.done", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#done():String", "kind" : "def"}, {"label" : "tasks", "tail" : "(taskDefs: Array[TaskDef]): Array[Task]", "member" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner.tasks", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#tasks(taskDefs:Array[sbt.testing.TaskDef]):Array[sbt.testing.Task]", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner#<init>", "error" : "unsupported entity"}, {"label" : "remoteArgs", "tail" : ": Array[String]", "member" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner.remoteArgs", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#remoteArgs:Array[String]", "kind" : "val"}, {"label" : "args", "tail" : ": Array[String]", "member" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner.args", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#args:Array[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "seedArg", "tail" : ": String", "member" : "com.github.agourlay.cornichon.framework.CornichonSbtRunner.seedArg", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#seedArg:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/framework\/CornichonSbtRunner.html", "kind" : "class"}, {"name" : "com.github.agourlay.cornichon.framework.FeatureInfo", "shortDescription" : "", "members_case class" : [{"member" : "com.github.agourlay.cornichon.framework.FeatureInfo#<init>", "error" : "unsupported entity"}, {"label" : "selector", "tail" : ": Selector", "member" : "com.github.agourlay.cornichon.framework.FeatureInfo.selector", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#selector:sbt.testing.Selector", "kind" : "val"}, {"label" : "fingerprint", "tail" : ": Fingerprint", "member" : "com.github.agourlay.cornichon.framework.FeatureInfo.fingerprint", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#fingerprint:sbt.testing.Fingerprint", "kind" : "val"}, {"label" : "featureClass", "tail" : ": Class[_]", "member" : "com.github.agourlay.cornichon.framework.FeatureInfo.featureClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#featureClass:Class[_]", "kind" : "val"}, {"label" : "fullyQualifiedName", "tail" : ": String", "member" : "com.github.agourlay.cornichon.framework.FeatureInfo.fullyQualifiedName", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#fullyQualifiedName:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/framework\/FeatureInfo.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.framework.JUnitXmlReporter", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html", "members_object" : [{"label" : "renderXML", "tail" : "(testSuite: TestSuite): String", "member" : "com.github.agourlay.cornichon.framework.JUnitXmlReporter.renderXML", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#renderXML(testSuite:com.github.agourlay.cornichon.framework.JUnitXmlReporter.TestSuite):String", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(throwable: Throwable): String", "member" : "com.github.agourlay.cornichon.framework.JUnitXmlReporter.getStackTrace", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#getStackTrace(throwable:Throwable):String", "kind" : "def"}, {"label" : "writeJunitReport", "tail" : "(directory: String, featureName: String, duration: FiniteDuration, startingTimestamp: Long, events: List[Event]): Either[Throwable, Unit]", "member" : "com.github.agourlay.cornichon.framework.JUnitXmlReporter.writeJunitReport", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#writeJunitReport(directory:String,featureName:String,duration:scala.concurrent.duration.FiniteDuration,startingTimestamp:Long,events:List[sbt.testing.Event]):Either[Throwable,Unit]", "kind" : "def"}, {"label" : "checkReportsFolder", "tail" : "(reportsOutputDir: String): Unit", "member" : "com.github.agourlay.cornichon.framework.JUnitXmlReporter.checkReportsFolder", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#checkReportsFolder(reportsOutputDir:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/JUnitXmlReporter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.framework.MainRunner", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html", "members_object" : [{"label" : "discoverFeatureClasses", "tail" : "(packageToExplore: String): List[Class[_]]", "member" : "com.github.agourlay.cornichon.framework.MainRunner.discoverFeatureClasses", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#discoverFeatureClasses(packageToExplore:String):List[Class[_]]", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.github.agourlay.cornichon.framework.MainRunner.main", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/MainRunner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.framework.NoOpEventHandler", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html", "members_object" : [{"label" : "handle", "tail" : "(event: Event): Unit", "member" : "com.github.agourlay.cornichon.framework.NoOpEventHandler.handle", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#handle(event:sbt.testing.Event):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/NoOpEventHandler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.agourlay.cornichon.framework.RecordEventHandler", "shortDescription" : "", "members_class" : [{"label" : "recorded", "tail" : "(): List[Event]", "member" : "com.github.agourlay.cornichon.framework.RecordEventHandler.recorded", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#recorded:List[sbt.testing.Event]", "kind" : "def"}, {"label" : "handle", "tail" : "(event: Event): Unit", "member" : "com.github.agourlay.cornichon.framework.RecordEventHandler.handle", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#handle(event:sbt.testing.Event):Unit", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.framework.RecordEventHandler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/github\/agourlay\/cornichon\/framework\/RecordEventHandler.html", "kind" : "class"}], "com.github.agourlay.cornichon.steps.regular" : [{"name" : "com.github.agourlay.cornichon.steps.regular.DebugStep", "shortDescription" : "", "members_case class" : [{"label" : "logOnSuccess", "tail" : "(result: String, runState: RunState, executionTime: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.steps.regular.DebugStep.logOnSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#logOnSuccess(result:String,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "def"}, {"label" : "onError", "tail" : "(errors: NonEmptyList[CornichonError], runState: RunState, executionTime: Duration): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.steps.regular.DebugStep.onError", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#onError(errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "def"}, {"label" : "runLogValueStep", "tail" : "(runState: RunState): Task[Either[NonEmptyList[CornichonError], String]]", "member" : "com.github.agourlay.cornichon.steps.regular.DebugStep.runLogValueStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#runLogValueStep(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[Either[cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],String]]", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.steps.regular.DebugStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.regular.DebugStep#<init>", "error" : "unsupported entity"}, {"label" : "message", "tail" : ": (ScenarioContext) => Either[CornichonError, String]", "member" : "com.github.agourlay.cornichon.steps.regular.DebugStep.message", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#message:com.github.agourlay.cornichon.core.ScenarioContext=>Either[com.github.agourlay.cornichon.core.CornichonError,String]", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.DebugStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#title:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.LogValueStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/DebugStep.html", "kind" : "case class"}, {"name" : "com.github.agourlay.cornichon.steps.regular.EffectStep", "shortDescription" : "", "object" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html", "members_object" : [{"label" : "fromAsync", "tail" : "(title: String, effect: (ScenarioContext) => Future[Session], show: Boolean)(ec: ExecutionContext): EffectStep", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.fromAsync", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#fromAsync(title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>scala.concurrent.Future[com.github.agourlay.cornichon.core.Session],show:Boolean)(implicitec:scala.concurrent.ExecutionContext):com.github.agourlay.cornichon.steps.regular.EffectStep", "kind" : "def"}, {"label" : "fromSyncE", "tail" : "(title: String, effect: (ScenarioContext) => Either[CornichonError, Session], show: Boolean): EffectStep", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.fromSyncE", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#fromSyncE(title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session],show:Boolean):com.github.agourlay.cornichon.steps.regular.EffectStep", "kind" : "def"}, {"label" : "fromSync", "tail" : "(title: String, effect: (ScenarioContext) => Session, show: Boolean): EffectStep", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.fromSync", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#fromSync(title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>com.github.agourlay.cornichon.core.Session,show:Boolean):com.github.agourlay.cornichon.steps.regular.EffectStep", "kind" : "def"}, {"label" : "fromEitherT", "tail" : "(title: String, effect: (ScenarioContext) => EitherT[Future, CornichonError, Session], show: Boolean): EffectStep", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.fromEitherT", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#fromEitherT(title:String,effect:com.github.agourlay.cornichon.core.ScenarioContext=>cats.data.EitherT[scala.concurrent.Future,com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session],show:Boolean):com.github.agourlay.cornichon.steps.regular.EffectStep", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "logOnSuccess", "tail" : "(result: Session, runState: RunState, executionTime: Duration): LogInstruction", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.logOnSuccess", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#logOnSuccess(result:com.github.agourlay.cornichon.core.Session,runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):com.github.agourlay.cornichon.core.LogInstruction", "kind" : "def"}, {"label" : "onError", "tail" : "(errors: NonEmptyList[CornichonError], runState: RunState, executionTime: Duration): (LogInstruction, FailedStep)", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.onError", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#onError(errors:cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],runState:com.github.agourlay.cornichon.core.RunState,executionTime:scala.concurrent.duration.Duration):(com.github.agourlay.cornichon.core.LogInstruction,com.github.agourlay.cornichon.core.FailedStep)", "kind" : "def"}, {"label" : "runSessionValueStep", "tail" : "(runState: RunState): Task[Either[NonEmptyList[CornichonError], Session]]", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.runSessionValueStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#runSessionValueStep(runState:com.github.agourlay.cornichon.core.RunState):monix.eval.Task[Either[cats.data.NonEmptyList[com.github.agourlay.cornichon.core.CornichonError],com.github.agourlay.cornichon.core.Session]]", "kind" : "def"}, {"label" : "setTitle", "tail" : "(newTitle: String): Step", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.setTitle", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#setTitle(newTitle:String):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"member" : "com.github.agourlay.cornichon.steps.regular.EffectStep#<init>", "error" : "unsupported entity"}, {"label" : "show", "tail" : ": Boolean", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.show", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#show:Boolean", "kind" : "val"}, {"label" : "effect", "tail" : ": (ScenarioContext) => Future[Either[CornichonError, Session]]", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.effect", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#effect:com.github.agourlay.cornichon.core.ScenarioContext=>scala.concurrent.Future[Either[com.github.agourlay.cornichon.core.CornichonError,com.github.agourlay.cornichon.core.Session]]", "kind" : "val"}, {"label" : "title", "tail" : ": String", "member" : "com.github.agourlay.cornichon.steps.regular.EffectStep.title", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#title:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "stateUpdate", "tail" : ": StepState", "member" : "com.github.agourlay.cornichon.core.SessionValueStep.stateUpdate", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#stateUpdate:com.github.agourlay.cornichon.core.StepState", "kind" : "val"}, {"label" : "andThen", "tail" : "(other: Step): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#andThen(other:com.github.agourlay.cornichon.core.Step):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "andThen", "tail" : "(others: List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.andThen", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#andThen(others:List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "chain", "tail" : "(others: (Session) => List[Step]): Step", "member" : "com.github.agourlay.cornichon.core.Step.chain", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#chain(others:com.github.agourlay.cornichon.core.Session=>List[com.github.agourlay.cornichon.core.Step]):com.github.agourlay.cornichon.core.Step", "kind" : "def"}, {"label" : "runStep", "tail" : "(runState: RunState): StepResult", "member" : "com.github.agourlay.cornichon.core.Step.runStep", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#runStep(runState:com.github.agourlay.cornichon.core.RunState):com.github.agourlay.cornichon.core.StepResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/github\/agourlay\/cornichon\/steps\/regular\/EffectStep.html", "kind" : "case class"}]};